<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3">
    <Box name="root" id="-1" tooltip="Root box of Choregraphe&apos;s project. Highest level possible." x="0" y="0">
        <bitmap>media/images/box/root.png</bitmap>
        <script language="4">
            <content>
                <![CDATA[]]>
</content>
        </script>
        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
        <Timeline enable="0">
            <BehaviorLayer name="behavior_layer1">
                <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram scale="105.946">
                        <Box name="Life" id="2" tooltip='Behavior template showing how you can structure a behavior. It is a simple &quot;hello&#x0A;world&quot;. Each box and keyframe with a blue star is a box or a keyframe that you&#x0A;should not modify.' x="308" y="191">
                            <bitmap>media/images/box/interaction/text_read.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        pass

    def onInput_onStart(self):
        self.gotoAndStop(0)

    def onInput_onStop(self):
        self.onUnload()
        self.onStopped()]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                            <Input name="/nao-life/language" type="0" type_size="1" nature="4" stm_value_name="/nao-life/language" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                            <Input name="debugMode" type="0" type_size="1" nature="4" stm_value_name="debugMode" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" />
                            <Input name="nao-life/resume" type="0" type_size="1" nature="4" stm_value_name="nao-life/resume" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="6" />
                            <Input name="nao-life/pause" type="0" type_size="1" nature="4" stm_value_name="nao-life/pause" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="7" />
                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="8" />
                            <Timeline enable="1" fps="10" start_frame="0" end_frame="-1" size="300">
                                <BehaviorLayer name="Omnipresent">
                                    <BehaviorKeyframe name="Start" index="1" bitmap="media/images/bonjour/star_on.png">
                                        <Diagram scale="92">
                                            <Box name="NaoLifeInit" id="6" tooltip="Enter tooltip here" x="344" y="239">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[#globals: These should be accessible from anywhere (modules ?)
global NLINTERNALS, NLPACKAGESMANAGER, NLSCRIPTS
import os

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.init = False

    def onLoad(self):
        pass

    def onUnload(self):
        global NLINTERNALS, NLPACKAGESMANAGER, NLSCRIPTS

        del NLINTERNALS
        del NLPACKAGESMANAGER
        del NLSCRIPTS

    def onInput_init(self):
        import os
        # Avoid non created xml
        xmls_root = os.path.expanduser(os.path.join("~", ".config", "naoqi"))
        xmls = map(lambda x: os.path.join(xmls_root, x), ["nao-store.xml", "nao-life.xml"])

        for xml in xmls:
            if not os.path.exists(xml):
                with open(xml, "w") as f:
                    pass

        if self.init:
            return
        self.init = True #TODO: Use a mutex

        ALProxy("ALMemory").insertData("Life/Mood/Excitation", 0.7)

        #self.log("Updating path")
        import os, sys
        script_path = os.path.join(ALFrameManager.getBehaviorPath(self.behaviorId))

        if not script_path in sys.path:
            sys.path.append(script_path)

        #self.log("Importing scripts")
        import scripts
        reload(scripts)

        #self.log("shortcuts")
        Internals = scripts.Internals
        PackagesManager = scripts.PackagesManager
        MyNao = scripts.MyNao

        #self.log("Loading NL classes")
        BH_DIR = "/home/nao/behaviors"

        #self.log("Internals:")
        self.internals =  Internals(ALProxy)

        #self.log("PackagesManager:")
        global ALPackagesManager
        ALPackagesManager = PackagesManager.instanciateModule(BH_DIR, self.internals)
        self.packagesmanager = ALPackagesManager

        #self.log("MyNao:")
        global ALMyNao
        ALMyNao = MyNao.instanciateModule()
        #self.log("Ready")
        self.memory = ALProxy("ALMemory")

        #self.log("NAO's Life All Loaded")
        global NLINTERNALS, NLPACKAGESMANAGER, NLSCRIPTS
        NLINTERNALS = self.internals
        NLPACKAGESMANAGER = self.packagesmanager
        NLSCRIPTS = scripts

        self.init = False
        self.onLoaded()

    def onInput_languageChanged(self, p):
        self.internals.updateLanguage(p)
        self.packagesmanager.update()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="init" type="1" type_size="1" nature="1" inner="0" tooltip="" id="2" />
                                                <Input name="languageChanged" type="3" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                <Output name="onLoaded" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                            </Box>
                                            <Box name="gotoInit" id="5" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." x="516" y="122">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        pass

    def onInput_onStart(self):
        name = self.getParameter("frame name")
        #self.log("%s -> %s" % (self.boxName, name))
        self.gotoAndStopParent(name)

    def onInput_onStop(self):
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                <Parameter name="frame name" inherits_from_parent="0" content_type="3" value="Init" default_value="" custom_choice="0" tooltip="" id="3" />
                                            </Box>
                                            <Box name="Stop" id="1" tooltip="Stop the parent timeline at the current frame index.&#x0A;&#x0A;!!Warning!! This box does not stop the behavior! It is only the timeline which will&#x0A;stop playing, the keyframes and boxes will still be running." x="281" y="118">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onInput_onStop(self):
        self.stopTimelineParent()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStop" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                                            </Box>
                                            <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="6" indexofinput="3" outputowner="0" indexofoutput="4" />
                                            <Link inputowner="5" indexofinput="2" outputowner="6" indexofoutput="4" />
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="Empty" index="99">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <BehaviorLayer name="Activities">
                                    <BehaviorKeyframe name="Paused" index="7">
                                        <Diagram>
                                            <Box name="inFrame" id="4" tooltip="Read a data from ALMemory" x="78" y="37">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self._name = "inFrame/%s" % self.getParameter("var name")

    def onUnload(self):
        try:
            ALProxy("ALMemory").insertData(self._name, False)
        except Exception as e:
            self.log(str(e))

    def onInput_onStart(self):
        try:
            ALProxy("ALMemory").insertData(self._name, True)
        except Exception as e:
            self.log(str(e))

        self.onStopped()

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="" id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="2" inner="0" tooltip="Value of the read data" id="4" />
                                                <Parameter name="var name" inherits_from_parent="0" content_type="3" value="Paused" default_value="" custom_choice="0" tooltip="Name of the data to read from memory" id="5" />
                                            </Box>
                                            <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="Init" index="26">
                                        <Diagram scale="74.9154">
                                            <Box name="Read" id="2" tooltip="Read a data from ALMemory" x="284" y="78">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        try:
            p = ALMemory.getData(self.getParameter("var name"))
        except:
            p = None
        self.onStopped(p)]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Value of the read data" id="3" />
                                                <Parameter name="var name" inherits_from_parent="0" content_type="3" value="robotPoseChanged" default_value="" custom_choice="0" tooltip="Name of the data to read from memory" id="4" />
                                            </Box>
                                            <Box name="Switch Case" id="3" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="419" y="112">
                                                <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Unknown")):
			self.output_1(p)
		elif(p == self.typeConversion("Stand")):
			self.output_2(p)
		elif(p == self.typeConversion("Sit")):
			self.output_3(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <keywords>
                                                        <keyword>&quot;Unknown&quot;</keyword>
                                                        <keyword>&quot;Stand&quot;</keyword>
                                                        <keyword>&quot;Sit&quot;</keyword>
                                                        <keyword></keyword>
                                                    </keywords>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" />
                                                <Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                                <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                                <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                                <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                            </Box>
                                            <Box name="gotoSolitary" id="5" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." x="967" y="350">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        pass

    def onInput_onStart(self):
        name = self.getParameter("frame name")
        #self.log("%s -> %s" % (self.boxName, name))
        self.gotoAndStopParent(name)

    def onInput_onStop(self):
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                <Parameter name="frame name" inherits_from_parent="0" content_type="3" value="Solitary Activity" default_value="" custom_choice="0" tooltip="" id="3" />
                                            </Box>
                                            <Box name="Set Stiffness" id="1" tooltip="Set motors stiffness." x="110" y="40">
                                                <bitmap>media/images/box/movement/stiffness.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def setStiffness(self, stiffness):
        self.bIsRunning = True
        duration = self.getParameter("Duration (s)")
        if(self.getParameter("Head")):
            ALMotion.post.stiffnessInterpolation("Head", stiffness, duration)
        if(self.getParameter("Left arm")):
            ALMotion.post.stiffnessInterpolation("LArm", stiffness, duration)
        if(self.getParameter("Right arm")):
            ALMotion.post.stiffnessInterpolation("RArm", stiffness, duration)
        if(self.getParameter("Left leg")):
            ALMotion.post.stiffnessInterpolation("LLeg", stiffness, duration)
        if(self.getParameter("Right leg")):
            ALMotion.post.stiffnessInterpolation("RLeg", stiffness, duration)
        time.sleep(duration)
        self.bIsRunning = False

    def onInput_onSet(self):
        if( self.bIsRunning ):
            return
        self.setStiffness(self.getParameter("Motors stiffness (%)")/100.)
        self.onReady() #~ activate output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="When this input is stimulated, the stiffness of the selected motors is set to&#x0A;the stiffness parameter value." id="2" />
                                                <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when stiffness has been set." id="3" />
                                                <Parameter name="Head" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the head stiffness?" id="4" />
                                                <Parameter name="Left arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left arm stiffness?" id="5" />
                                                <Parameter name="Right arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right arm stiffness?" id="6" />
                                                <Parameter name="Left leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left leg stiffness?" id="7" />
                                                <Parameter name="Right leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right leg stiffness?" id="8" />
                                                <Parameter name="Motors stiffness (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Stiffness value the motors are set to." id="9" />
                                                <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="2" default_value="1" min="0.02" max="10" tooltip="How much time to go to the max/min stiffness in seconds." id="10" />
                                                <Resource name="All motors" type="Lock" timeout="5" />
                                            </Box>
                                            <Box name="Say" id="4" tooltip="Say some text. Note that you must open the box to enter the text." x="960" y="26">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="Say Text" id="2" tooltip="Say the text received on its input." x="422" y="65">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                </Box>
                                                                <Box name="Localized Text" id="5" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                    <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 我被卡住了，你能帮助我吗？ ",
			"English" : " I\'m stuck, can you help me ? ",
			"French" : " Je suis coincé, peux tu m\'aider ? ",
			"German" : " Ich hänge fest. Kannst du mir bitte helfen ? ",
			"Italian" : " Ciao ",
			"Japanese" : " ちょっと調子が悪いよ。助けてくれますか？ ",
			"Korean" : " 안녕하세요  ",
			"Portuguese" : " Olá ",
			"Brazilian" : "  ",
			"Spanish" : " Hola ",
			"Arabic" : "  ",
			"Polish" : "  ",
			"Czech" : "  ",
			"Dutch" : "  ",
			"Danish" : "  ",
			"Finnish" : " Olen jumissa, voitko auttaa minua? ",
			"Swedish" : "  ",
			"Russian" : "  ",
			"Turkish" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <chinese>我被卡住了，你能帮助我吗？</chinese>
                                                                        <english>I&apos;m stuck, can you help me ?</english>
                                                                        <french>Je suis coincé, peux tu m&apos;aider ?</french>
                                                                        <german>Ich hänge fest. Kannst du mir bitte helfen ?</german>
                                                                        <italian>Ciao</italian>
                                                                        <japanese>ちょっと調子が悪いよ。助けてくれますか？</japanese>
                                                                        <korean>안녕하세요 </korean>
                                                                        <portuguese>Olá</portuguese>
                                                                        <brazilian></brazilian>
                                                                        <spanish>Hola</spanish>
                                                                        <arabic></arabic>
                                                                        <polish></polish>
                                                                        <czech></czech>
                                                                        <dutch></dutch>
                                                                        <danish></danish>
                                                                        <finnish>Olen jumissa, voitko auttaa minua?</finnish>
                                                                        <swedish></swedish>
                                                                        <russian></russian>
                                                                        <turkish></turkish>
                                                                        <language>2</language>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                </Box>
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Box name="gotoSafety" id="7" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." x="1104" y="25">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        pass

    def onInput_onStart(self):
        name = self.getParameter("frame name")
        self.log("%s -> %s" % (self.boxName, name))
        self.gotoAndStopParent(name)

    def onInput_onStop(self):
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                <Parameter name="frame name" inherits_from_parent="0" content_type="3" value="Safety" default_value="" custom_choice="0" tooltip="" id="3" />
                                            </Box>
                                            <Box name="StandUp SitDown" id="8" tooltip="Enter tooltip here" x="783" y="126">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

def back_to_sit():
    names = list()
    times = list()
    keys = list()

    names.append("HeadYaw")
    times.append([ 1.00000, 2.00000, 2.80000, 3.60000, 4.40000, 5.00000, 5.60000, 6.20000])
    keys.append([ [ -0.02459, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.00000, [ 3, -0.33333, -0.01222], [ 3, 0.26667, 0.00977]], [ 0.04138, [ 3, -0.26667, 0.00000], [ 3, 0.26667, 0.00000]], [ 0.00000, [ 3, -0.26667, 0.00618], [ 3, 0.26667, -0.00618]], [ -0.00618, [ 3, -0.26667, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.01376, [ 3, -0.20000, -0.00511], [ 3, 0.20000, 0.00511]], [ 0.02450, [ 3, -0.20000, 0.00000], [ 3, 0.20000, 0.00000]], [ -0.02305, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("HeadPitch")
    times.append([ 1.00000, 2.00000, 2.80000, 3.60000, 4.40000, 5.00000, 5.60000, 6.20000])
    keys.append([ [ 0.06285, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00000, [ 3, -0.33333, 0.00000], [ 3, 0.26667, 0.00000]], [ 0.51490, [ 3, -0.26667, 0.00000], [ 3, 0.26667, 0.00000]], [ -0.67200, [ 3, -0.26667, 0.00000], [ 3, 0.26667, 0.00000]], [ -0.02152, [ 3, -0.26667, -0.16510], [ 3, 0.20000, 0.12383]], [ 0.19478, [ 3, -0.20000, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.07359, [ 3, -0.20000, 0.03835], [ 3, 0.20000, -0.03835]], [ -0.03532, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LShoulderPitch")
    times.append([ 1.00000, 2.00000, 2.60000, 3.60000, 4.40000, 5.00000, 5.60000, 5.90000, 6.20000])
    keys.append([ [ 2.08560, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 2.09440, [ 3, -0.33333, 0.00000], [ 3, 0.20000, 0.00000]], [ 2.03865, [ 3, -0.20000, 0.00000], [ 3, 0.33333, 0.00000]], [ 2.08560, [ 3, -0.33333, -0.00009], [ 3, 0.26667, 0.00007]], [ 2.08567, [ 3, -0.26667, 0.00000], [ 3, 0.20000, 0.00000]], [ 1.30846, [ 3, -0.20000, 0.19703], [ 3, 0.20000, -0.19703]], [ 0.90348, [ 3, -0.20000, 0.13446], [ 3, 0.10000, -0.06723]], [ 0.70337, [ 3, -0.10000, 0.00000], [ 3, 0.10000, 0.00000]], [ 0.90195, [ 3, -0.10000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LShoulderRoll")
    times.append([ 1.00000, 2.00000, 2.60000, 3.60000, 4.40000, 5.00000, 5.60000, 6.20000])
    keys.append([ [ 0.98018, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.36652, [ 3, -0.33333, 0.02909], [ 3, 0.20000, -0.01745]], [ 0.34907, [ 3, -0.20000, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.34907, [ 3, -0.33333, 0.00000], [ 3, 0.26667, 0.00000]], [ 0.40143, [ 3, -0.26667, -0.05236], [ 3, 0.20000, 0.03927]], [ 1.17193, [ 3, -0.20000, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.39726, [ 3, -0.20000, 0.15928], [ 3, 0.20000, -0.15928]], [ 0.21625, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LElbowYaw")
    times.append([ 1.00000, 2.00000, 2.60000, 3.60000, 4.40000, 5.00000, 5.60000, 6.20000])
    keys.append([ [ -0.76091, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.15708, [ 3, -0.33333, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.12268, [ 3, -0.20000, 0.00873], [ 3, 0.33333, -0.01454]], [ 0.08727, [ 3, -0.33333, 0.01165], [ 3, 0.26667, -0.00932]], [ 0.05978, [ 3, -0.26667, 0.02748], [ 3, 0.20000, -0.02061]], [ -0.95419, [ 3, -0.20000, 0.00920], [ 3, 0.20000, -0.00920]], [ -0.96339, [ 3, -0.20000, 0.00000], [ 3, 0.20000, 0.00000]], [ -0.43877, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LElbowRoll")
    times.append([ 1.00000, 2.00000, 2.60000, 3.60000, 4.40000, 4.60000, 5.00000, 5.60000, 6.20000])
    keys.append([ [ -0.62430, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00000, [ 3, -0.33333, 0.00000], [ 3, 0.20000, 0.00000]], [ -1.54462, [ 3, -0.20000, 0.01049], [ 3, 0.33333, -0.01748]], [ -1.56210, [ 3, -0.33333, 0.00000], [ 3, 0.26667, 0.00000]], [ -0.87441, [ 3, -0.26667, 0.00000], [ 3, 0.06667, 0.00000]], [ -1.03498, [ 3, -0.06667, 0.00000], [ 3, 0.13333, 0.00000]], [ -0.67952, [ 3, -0.13333, 0.00000], [ 3, 0.20000, 0.00000]], [ -1.12285, [ 3, -0.20000, 0.09255], [ 3, 0.20000, -0.09255]], [ -1.23483, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LWristYaw")
    times.append([ 1.00000, 2.60000, 4.40000, 5.00000, 6.20000])
    keys.append([ [ -0.70568, [ 3, -0.33333, 0.00000], [ 3, 0.53333, 0.00000]], [ -1.78868, [ 3, -0.53333, 0.00000], [ 3, 0.60000, 0.00000]], [ -0.71949, [ 3, -0.60000, -0.43527], [ 3, 0.20000, 0.14509]], [ -0.04760, [ 3, -0.20000, -0.05369], [ 3, 0.40000, 0.10738]], [ 0.05978, [ 3, -0.40000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHand")
    times.append([ 1.00000, 2.60000, 4.40000, 5.00000, 6.20000])
    keys.append([ [ 0.00088, [ 3, -0.33333, 0.00000], [ 3, 0.53333, 0.00000]], [ 0.00133, [ 3, -0.53333, -0.00011], [ 3, 0.60000, 0.00012]], [ 0.00158, [ 3, -0.60000, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.00022, [ 3, -0.20000, 0.00000], [ 3, 0.40000, 0.00000]], [ 0.00524, [ 3, -0.40000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RShoulderPitch")
    times.append([ 1.00000, 2.00000, 2.60000, 3.60000, 4.40000, 5.00000, 5.60000, 5.90000, 6.20000])
    keys.append([ [ 2.08560, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 2.09440, [ 3, -0.33333, 0.00000], [ 3, 0.20000, 0.00000]], [ 1.95283, [ 3, -0.20000, 0.00000], [ 3, 0.33333, 0.00000]], [ 2.08560, [ 3, -0.33333, -0.00009], [ 3, 0.26667, 0.00007]], [ 2.08567, [ 3, -0.26667, 0.00000], [ 3, 0.20000, 0.00000]], [ 1.91908, [ 3, -0.20000, 0.16659], [ 3, 0.20000, -0.16659]], [ 1.03703, [ 3, -0.20000, 0.26434], [ 3, 0.10000, -0.13217]], [ 0.72955, [ 3, -0.10000, 0.00000], [ 3, 0.10000, 0.00000]], [ 0.92504, [ 3, -0.10000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RShoulderRoll")
    times.append([ 1.00000, 2.00000, 2.60000, 3.60000, 4.40000, 5.00000, 5.60000, 6.20000])
    keys.append([ [ -1.07384, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.36652, [ 3, -0.33333, -0.02909], [ 3, 0.20000, 0.01745]], [ -0.34907, [ 3, -0.20000, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.34907, [ 3, -0.33333, 0.00000], [ 3, 0.26667, 0.00000]], [ -0.41015, [ 3, -0.26667, 0.06109], [ 3, 0.20000, -0.04581]], [ -0.89897, [ 3, -0.20000, 0.00000], [ 3, 0.20000, 0.00000]], [ -0.74096, [ 3, -0.20000, -0.10943], [ 3, 0.20000, 0.10943]], [ -0.24241, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RElbowYaw")
    times.append([ 1.00000, 2.00000, 2.60000, 3.60000, 4.40000, 5.00000, 5.60000, 6.20000])
    keys.append([ [ 0.76542, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.15708, [ 3, -0.33333, 0.16779], [ 3, 0.20000, -0.10067]], [ -0.25775, [ 3, -0.20000, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.08727, [ 3, -0.33333, -0.02658], [ 3, 0.26667, 0.02126]], [ -0.06600, [ 3, -0.26667, -0.02126], [ 3, 0.20000, 0.01595]], [ 1.57691, [ 3, -0.20000, 0.00000], [ 3, 0.20000, 0.00000]], [ 1.06762, [ 3, -0.20000, 0.17539], [ 3, 0.20000, -0.17539]], [ 0.52459, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RElbowRoll")
    times.append([ 1.00000, 2.00000, 2.60000, 3.60000, 4.40000, 4.60000, 5.00000, 5.60000, 6.20000])
    keys.append([ [ 0.71028, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00000, [ 3, -0.33333, 0.00000], [ 3, 0.20000, 0.00000]], [ 1.54462, [ 3, -0.20000, -0.01049], [ 3, 0.33333, 0.01748]], [ 1.56210, [ 3, -0.33333, 0.00000], [ 3, 0.26667, 0.00000]], [ 0.71384, [ 3, -0.26667, 0.00000], [ 3, 0.06667, 0.00000]], [ 1.05418, [ 3, -0.06667, 0.00000], [ 3, 0.13333, 0.00000]], [ 0.95726, [ 3, -0.13333, 0.00000], [ 3, 0.20000, 0.00000]], [ 1.14594, [ 3, -0.20000, -0.05216], [ 3, 0.20000, 0.05216]], [ 1.27019, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RWristYaw")
    times.append([ 1.00000, 2.60000, 4.40000, 5.00000, 6.20000])
    keys.append([ [ 1.15199, [ 3, -0.33333, 0.00000], [ 3, 0.53333, 0.00000]], [ 1.72571, [ 3, -0.53333, 0.00000], [ 3, 0.60000, 0.00000]], [ 1.11057, [ 3, -0.60000, 0.36969], [ 3, 0.20000, -0.12323]], [ 0.24693, [ 3, -0.20000, 0.12971], [ 3, 0.40000, -0.25942]], [ -0.05680, [ 3, -0.40000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RHand")
    times.append([ 1.00000, 2.00000, 2.60000, 4.40000, 5.00000, 6.20000])
    keys.append([ [ 0.00000, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00000, [ 3, -0.33333, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.00032, [ 3, -0.20000, 0.00000], [ 3, 0.60000, 0.00000]], [ 0.00005, [ 3, -0.60000, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.00221, [ 3, -0.20000, -0.00058], [ 3, 0.40000, 0.00115]], [ 0.00523, [ 3, -0.40000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHipYawPitch")
    times.append([ 1.00000, 2.00000, 3.10000, 3.60000, 4.40000, 5.00000, 6.20000])
    keys.append([ [ -0.47090, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00000, [ 3, -0.33333, -0.00701], [ 3, 0.36667, 0.00771]], [ 0.00771, [ 3, -0.36667, 0.00000], [ 3, 0.16667, 0.00000]], [ -0.00000, [ 3, -0.16667, 0.00771], [ 3, 0.26667, -0.01234]], [ -0.65498, [ 3, -0.26667, 0.06545], [ 3, 0.20000, -0.04909]], [ -0.70407, [ 3, -0.20000, 0.00000], [ 3, 0.40000, 0.00000]], [ -0.61816, [ 3, -0.40000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHipRoll")
    times.append([ 1.00000, 2.00000, 3.10000, 3.60000, 4.40000, 5.00000, 6.20000])
    keys.append([ [ 0.04453, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00000, [ 3, -0.33333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.05833, [ 3, -0.36667, 0.00000], [ 3, 0.16667, 0.00000]], [ 0.00000, [ 3, -0.16667, 0.01573], [ 3, 0.26667, -0.02517]], [ -0.06439, [ 3, -0.26667, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.14083, [ 3, -0.20000, -0.03818], [ 3, 0.40000, 0.07636]], [ 0.27923, [ 3, -0.40000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHipPitch")
    times.append([ 1.00000, 2.00000, 3.10000, 3.60000, 4.40000, 5.00000, 6.20000])
    keys.append([ [ 0.25008, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.17453, [ 3, -0.33333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.37434, [ 3, -0.36667, 0.00000], [ 3, 0.16667, 0.00000]], [ -0.17453, [ 3, -0.16667, 0.19903], [ 3, 0.26667, -0.31844]], [ -1.17807, [ 3, -0.26667, 0.26595], [ 3, 0.20000, -0.19947]], [ -1.57080, [ 3, -0.20000, 0.00459], [ 3, 0.40000, -0.00918]], [ -1.57998, [ 3, -0.40000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LKneePitch")
    times.append([ 1.00000, 2.00000, 3.10000, 3.60000, 4.40000, 5.00000, 6.20000])
    keys.append([ [ 0.09200, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 1.67552, [ 3, -0.33333, -0.30607], [ 3, 0.36667, 0.33668]], [ 2.02024, [ 3, -0.36667, 0.00000], [ 3, 0.16667, 0.00000]], [ 1.67552, [ 3, -0.16667, 0.12095], [ 3, 0.26667, -0.19352]], [ 1.07683, [ 3, -0.26667, 0.00000], [ 3, 0.20000, 0.00000]], [ 1.40161, [ 3, -0.20000, 0.00000], [ 3, 0.40000, 0.00000]], [ 1.39590, [ 3, -0.40000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LAnklePitch")
    times.append([ 1.00000, 2.00000, 3.10000, 3.60000, 4.40000, 5.00000, 6.20000])
    keys.append([ [ 0.82525, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.24435, [ 3, -0.33333, 0.20307], [ 3, 0.36667, -0.22338]], [ -0.45411, [ 3, -0.36667, 0.00000], [ 3, 0.16667, 0.00000]], [ 0.24435, [ 3, -0.16667, -0.14514], [ 3, 0.26667, 0.23222]], [ 0.67799, [ 3, -0.26667, -0.10128], [ 3, 0.20000, 0.07596]], [ 0.77609, [ 3, -0.20000, -0.01756], [ 3, 0.40000, 0.03511]], [ 0.83599, [ 3, -0.40000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LAnkleRoll")
    times.append([ 1.00000, 2.00000, 3.10000, 3.60000, 4.40000, 5.00000, 6.20000])
    keys.append([ [ -0.03371, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00000, [ 3, -0.33333, 0.00000], [ 3, 0.36667, 0.00000]], [ -0.03371, [ 3, -0.36667, 0.00000], [ 3, 0.16667, 0.00000]], [ 0.00000, [ 3, -0.16667, -0.02616], [ 3, 0.26667, 0.04185]], [ 0.17032, [ 3, -0.26667, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.09083, [ 3, -0.20000, 0.01994], [ 3, 0.40000, -0.03988]], [ -0.00916, [ 3, -0.40000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RHipRoll")
    times.append([ 1.00000, 2.00000, 3.10000, 3.60000, 4.40000, 5.00000, 6.20000])
    keys.append([ [ -0.14876, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00000, [ 3, -0.33333, 0.00000], [ 3, 0.36667, 0.00000]], [ -0.02297, [ 3, -0.36667, 0.00000], [ 3, 0.16667, 0.00000]], [ 0.00000, [ 3, -0.16667, -0.01082], [ 3, 0.26667, 0.01731]], [ 0.06140, [ 3, -0.26667, 0.00000], [ 3, 0.20000, 0.00000]], [ -0.12200, [ 3, -0.20000, 0.03665], [ 3, 0.40000, -0.07329]], [ -0.26841, [ 3, -0.40000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RHipPitch")
    times.append([ 1.00000, 2.00000, 3.10000, 3.60000, 4.40000, 5.00000, 6.20000])
    keys.append([ [ 0.18557, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.17453, [ 3, -0.33333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.28221, [ 3, -0.36667, 0.00000], [ 3, 0.16667, 0.00000]], [ -0.17453, [ 3, -0.16667, 0.18546], [ 3, 0.26667, -0.29673]], [ -1.16435, [ 3, -0.26667, 0.26595], [ 3, 0.20000, -0.19947]], [ -1.57080, [ 3, -0.20000, 0.01077], [ 3, 0.40000, -0.02154]], [ -1.59233, [ 3, -0.40000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RKneePitch")
    times.append([ 1.00000, 2.00000, 3.10000, 3.60000, 4.40000, 5.00000, 6.20000])
    keys.append([ [ 0.19179, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 1.67552, [ 3, -0.33333, -0.29122], [ 3, 0.36667, 0.32034]], [ 2.02645, [ 3, -0.36667, 0.00000], [ 3, 0.16667, 0.00000]], [ 1.67552, [ 3, -0.16667, 0.11938], [ 3, 0.26667, -0.19100]], [ 1.09532, [ 3, -0.26667, 0.00000], [ 3, 0.20000, 0.00000]], [ 1.37682, [ 3, -0.20000, -0.01572], [ 3, 0.40000, 0.03144]], [ 1.40825, [ 3, -0.40000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RAnklePitch")
    times.append([ 1.00000, 2.00000, 3.10000, 3.60000, 4.40000, 5.00000, 6.20000])
    keys.append([ [ 0.46638, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.24435, [ 3, -0.33333, 0.13343], [ 3, 0.36667, -0.14678]], [ -0.37425, [ 3, -0.36667, 0.00000], [ 3, 0.16667, 0.00000]], [ 0.24435, [ 3, -0.16667, -0.14003], [ 3, 0.26667, 0.22404]], [ 0.71795, [ 3, -0.26667, -0.06920], [ 3, 0.20000, 0.05190]], [ 0.76985, [ 3, -0.20000, -0.01466], [ 3, 0.40000, 0.02932]], [ 0.84988, [ 3, -0.40000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RAnkleRoll")
    times.append([ 1.00000, 2.00000, 3.10000, 3.60000, 4.40000, 5.00000, 6.20000])
    keys.append([ [ 0.16725, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00000, [ 3, -0.33333, 0.03287], [ 3, 0.36667, -0.03616]], [ -0.03984, [ 3, -0.36667, 0.00000], [ 3, 0.16667, 0.00000]], [ 0.00000, [ 3, -0.16667, 0.00000], [ 3, 0.26667, 0.00000]], [ -0.14415, [ 3, -0.26667, 0.00000], [ 3, 0.20000, 0.00000]], [ -0.11992, [ 3, -0.20000, -0.01807], [ 3, 0.40000, 0.03613]], [ 0.01845, [ 3, -0.40000, 0.00000], [ 3, 0.00000, 0.00000]]])

    motion = ALProxy("ALMotion")
    motion.stiffnessInterpolation("Body", 1.0, 1.0)
    if not ALMemory.version().startswith("1.10"):
        collisionLArmState = motion.getCollisionProtectionEnabled("LArm")
        collisionRArmState = motion.getCollisionProtectionEnabled("RArm")
    if not ALMemory.version().startswith("1.10"):
        motion.setCollisionProtectionEnabled("Arms", False)
    motion.angleInterpolationBezier(names, times, keys)
    if not ALMemory.version().startswith("1.10"):
        motion.setCollisionProtectionEnabled("LArm", collisionLArmState)
        motion.setCollisionProtectionEnabled("RArm", collisionRArmState)
    motion._relaxMotorsWhenSitting()

def crouch_to_sit():
    names = list()
    times = list()
    keys = list()

    names.append("HeadYaw")
    times.append([ 1.30000, 2.40000, 3.40000, 4.30000, 5.20000, 5.90000, 6.60000, 7.20000])
    keys.append([ [ -0.31605, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ -0.44030, [ 3, -0.36667, 0.05544], [ 3, 0.33333, -0.05040]], [ -0.63358, [ 3, -0.33333, 0.00000], [ 3, 0.30000, 0.00000]], [ -0.62745, [ 3, -0.30000, -0.00614], [ 3, 0.30000, 0.00614]], [ -0.40962, [ 3, -0.30000, -0.08312], [ 3, 0.23333, 0.06465]], [ -0.18412, [ 3, -0.23333, -0.06826], [ 3, 0.23333, 0.06826]], [ -0.00004, [ 3, -0.23333, 0.00000], [ 3, 0.20000, 0.00000]], [ -0.02152, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("HeadPitch")
    times.append([ 1.30000, 2.40000, 3.40000, 4.30000, 5.20000, 5.90000, 6.60000, 7.20000])
    keys.append([ [ 0.37119, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.37579, [ 3, -0.36667, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.36812, [ 3, -0.33333, 0.00323], [ 3, 0.30000, -0.00291]], [ 0.35738, [ 3, -0.30000, 0.00000], [ 3, 0.30000, 0.00000]], [ 0.36812, [ 3, -0.30000, 0.00000], [ 3, 0.23333, 0.00000]], [ 0.36658, [ 3, -0.23333, 0.00000], [ 3, 0.23333, 0.00000]], [ 0.37886, [ 3, -0.23333, 0.00000], [ 3, 0.20000, 0.00000]], [ -0.03379, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LShoulderPitch")
    times.append([ 1.30000, 2.40000, 2.90000, 3.40000, 4.30000, 5.20000, 5.90000, 6.60000, 7.20000])
    keys.append([ [ 1.04371, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.72955, [ 3, -0.36667, 0.00000], [ 3, 0.16667, 0.00000]], [ 0.72955, [ 3, -0.16667, 0.00000], [ 3, 0.16667, 0.00000]], [ 1.01086, [ 3, -0.16667, -0.09229], [ 3, 0.30000, 0.16613]], [ 1.50481, [ 3, -0.30000, -0.17053], [ 3, 0.30000, 0.17053]], [ 2.03404, [ 3, -0.30000, 0.00000], [ 3, 0.23333, 0.00000]], [ 1.53764, [ 3, -0.23333, 0.22614], [ 3, 0.23333, -0.22614]], [ 0.67719, [ 3, -0.23333, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.91269, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LShoulderRoll")
    times.append([ 1.30000, 2.40000, 3.40000, 4.30000, 5.20000, 5.90000, 6.60000, 7.20000])
    keys.append([ [ 0.33590, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.53532, [ 3, -0.36667, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.48171, [ 3, -0.33333, 0.00000], [ 3, 0.30000, 0.00000]], [ 0.83776, [ 3, -0.30000, 0.00000], [ 3, 0.30000, 0.00000]], [ 0.44331, [ 3, -0.30000, 0.00000], [ 3, 0.23333, 0.00000]], [ 1.55683, [ 3, -0.23333, 0.00000], [ 3, 0.23333, 0.00000]], [ 0.56907, [ 3, -0.23333, 0.24007], [ 3, 0.20000, -0.20577]], [ 0.21932, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LElbowYaw")
    times.append([ 1.30000, 2.40000, 3.40000, 4.30000, 5.20000, 5.90000, 6.60000, 7.20000])
    keys.append([ [ -0.56302, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ -0.08552, [ 3, -0.36667, -0.11678], [ 3, 0.33333, 0.10616]], [ 0.10580, [ 3, -0.33333, 0.00000], [ 3, 0.30000, 0.00000]], [ -1.55334, [ 3, -0.30000, 0.00000], [ 3, 0.30000, 0.00000]], [ -0.32985, [ 3, -0.30000, 0.00000], [ 3, 0.23333, 0.00000]], [ -1.20777, [ 3, -0.23333, 0.00000], [ 3, 0.23333, 0.00000]], [ -0.76091, [ 3, -0.23333, -0.13830], [ 3, 0.20000, 0.11854]], [ -0.43723, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LElbowRoll")
    times.append([ 1.30000, 2.40000, 3.40000, 4.30000, 4.70000, 5.20000, 5.90000, 6.60000, 7.20000])
    keys.append([ [ -0.95871, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ -1.20253, [ 3, -0.36667, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.69813, [ 3, -0.33333, 0.00000], [ 3, 0.30000, 0.00000]], [ -0.90234, [ 3, -0.30000, 0.00000], [ 3, 0.13333, 0.00000]], [ -0.48695, [ 3, -0.13333, 0.00000], [ 3, 0.16667, 0.00000]], [ -0.68591, [ 3, -0.16667, 0.06569], [ 3, 0.23333, -0.09197]], [ -0.95993, [ 3, -0.23333, 0.10606], [ 3, 0.23333, -0.10606]], [ -1.32227, [ 3, -0.23333, 0.00000], [ 3, 0.20000, 0.00000]], [ -1.28085, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LWristYaw")
    times.append([ 1.30000, 2.40000, 3.40000, 4.30000, 5.20000, 5.90000, 6.60000, 7.20000])
    keys.append([ [ 0.08740, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ -0.71642, [ 3, -0.36667, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.71642, [ 3, -0.33333, 0.00000], [ 3, 0.30000, 0.00000]], [ -0.71642, [ 3, -0.30000, 0.00000], [ 3, 0.30000, 0.00000]], [ -0.72869, [ 3, -0.30000, 0.00197], [ 3, 0.23333, -0.00153]], [ -0.73023, [ 3, -0.23333, 0.00000], [ 3, 0.23333, 0.00000]], [ -0.72256, [ 3, -0.23333, -0.00767], [ 3, 0.20000, 0.00657]], [ 0.05978, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHand")
    times.append([ 1.30000, 2.40000, 3.40000, 4.30000, 5.20000, 5.90000, 6.60000, 7.20000])
    keys.append([ [ 0.00404, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.00117, [ 3, -0.36667, 0.00001], [ 3, 0.33333, -0.00001]], [ 0.00116, [ 3, -0.33333, 0.00000], [ 3, 0.30000, 0.00000]], [ 0.00116, [ 3, -0.30000, 0.00000], [ 3, 0.30000, 0.00000]], [ 0.00128, [ 3, -0.30000, 0.00000], [ 3, 0.23333, 0.00000]], [ 0.00121, [ 3, -0.23333, 0.00004], [ 3, 0.23333, -0.00004]], [ 0.00106, [ 3, -0.23333, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.00524, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RShoulderPitch")
    times.append([ 1.30000, 2.40000, 3.40000, 3.90000, 5.20000, 5.90000, 6.60000, 7.20000])
    keys.append([ [ 0.80809, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.59341, [ 3, -0.36667, 0.00000], [ 3, 0.33333, 0.00000]], [ 1.74420, [ 3, -0.33333, -0.32967], [ 3, 0.16667, 0.16484]], [ 2.07694, [ 3, -0.16667, -0.00333], [ 3, 0.43333, 0.00866]], [ 2.08560, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ 1.88839, [ 3, -0.23333, 0.19720], [ 3, 0.23333, -0.19720]], [ 0.78191, [ 3, -0.23333, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.93118, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RShoulderRoll")
    times.append([ 1.30000, 2.40000, 2.90000, 3.40000, 3.90000, 5.20000, 5.90000, 6.60000, 7.20000])
    keys.append([ [ -0.56762, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ -0.93026, [ 3, -0.36667, 0.00000], [ 3, 0.16667, 0.00000]], [ -0.76271, [ 3, -0.16667, -0.06283], [ 3, 0.16667, 0.06283]], [ -0.55327, [ 3, -0.16667, -0.02793], [ 3, 0.16667, 0.02793]], [ -0.52534, [ 3, -0.16667, 0.00000], [ 3, 0.43333, 0.00000]], [ -0.55327, [ 3, -0.43333, 0.02793], [ 3, 0.23333, -0.01504]], [ -1.55683, [ 3, -0.23333, 0.00000], [ 3, 0.23333, 0.00000]], [ -0.54921, [ 3, -0.23333, -0.23207], [ 3, 0.20000, 0.19891]], [ -0.26389, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RElbowYaw")
    times.append([ 1.30000, 2.40000, 3.40000, 3.90000, 5.20000, 5.90000, 6.60000, 7.20000])
    keys.append([ [ 0.13963, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.00456, [ 3, -0.36667, 0.03644], [ 3, 0.33333, -0.03313]], [ -0.06907, [ 3, -0.33333, 0.03375], [ 3, 0.16667, -0.01687]], [ -0.14731, [ 3, -0.16667, 0.00000], [ 3, 0.43333, 0.00000]], [ 0.11694, [ 3, -0.43333, -0.26424], [ 3, 0.23333, 0.14228]], [ 1.75179, [ 3, -0.23333, 0.00000], [ 3, 0.23333, 0.00000]], [ 1.12745, [ 3, -0.23333, 0.22137], [ 3, 0.20000, -0.18974]], [ 0.51845, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RElbowRoll")
    times.append([ 1.30000, 2.40000, 3.40000, 3.90000, 5.20000, 5.90000, 6.60000, 7.20000])
    keys.append([ [ 0.83776, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.47865, [ 3, -0.36667, 0.13261], [ 3, 0.33333, -0.12055]], [ 0.07828, [ 3, -0.33333, 0.00000], [ 3, 0.16667, 0.00000]], [ 0.10129, [ 3, -0.16667, -0.02301], [ 3, 0.43333, 0.05983]], [ 0.59167, [ 3, -0.43333, -0.20308], [ 3, 0.23333, 0.10935]], [ 1.03856, [ 3, -0.23333, -0.11692], [ 3, 0.23333, 0.11692]], [ 1.29320, [ 3, -0.23333, 0.00000], [ 3, 0.20000, 0.00000]], [ 1.28247, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RWristYaw")
    times.append([ 1.30000, 2.40000, 3.40000, 3.90000, 5.20000, 5.90000, 6.60000, 7.20000])
    keys.append([ [ 0.18864, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ 1.05535, [ 3, -0.36667, 0.00000], [ 3, 0.33333, 0.00000]], [ 1.05228, [ 3, -0.33333, 0.00273], [ 3, 0.16667, -0.00136]], [ 1.04308, [ 3, -0.16667, 0.00000], [ 3, 0.43333, 0.00000]], [ 1.04308, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ 1.04768, [ 3, -0.23333, -0.00307], [ 3, 0.23333, 0.00307]], [ 1.06149, [ 3, -0.23333, 0.00000], [ 3, 0.20000, 0.00000]], [ -0.05987, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RHand")
    times.append([ 1.30000, 2.40000, 3.40000, 3.90000, 5.20000, 5.90000, 6.60000, 7.20000])
    keys.append([ [ 0.00709, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.00149, [ 3, -0.36667, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00154, [ 3, -0.33333, -0.00005], [ 3, 0.16667, 0.00003]], [ 0.00180, [ 3, -0.16667, -0.00005], [ 3, 0.43333, 0.00012]], [ 0.00206, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ 0.00201, [ 3, -0.23333, 0.00000], [ 3, 0.23333, 0.00000]], [ 0.00211, [ 3, -0.23333, -0.00011], [ 3, 0.20000, 0.00009]], [ 0.00523, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHipYawPitch")
    times.append([ 1.30000, 2.40000, 3.40000, 4.30000, 5.20000, 5.90000, 6.60000, 7.20000])
    keys.append([ [ -0.39726, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ -0.42334, [ 3, -0.36667, 0.02608], [ 3, 0.33333, -0.02371]], [ -0.90809, [ 3, -0.33333, 0.00000], [ 3, 0.30000, 0.00000]], [ -0.58595, [ 3, -0.30000, -0.04602], [ 3, 0.30000, 0.04602]], [ -0.53993, [ 3, -0.30000, 0.00000], [ 3, 0.23333, 0.00000]], [ -0.79304, [ 3, -0.23333, 0.00000], [ 3, 0.23333, 0.00000]], [ -0.77770, [ 3, -0.23333, -0.01534], [ 3, 0.20000, 0.01315]], [ -0.61356, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHipRoll")
    times.append([ 1.30000, 2.40000, 3.40000, 4.30000, 5.20000, 5.90000, 6.60000, 7.20000])
    keys.append([ [ 0.18259, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.31416, [ 3, -0.36667, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.26227, [ 3, -0.33333, 0.00000], [ 3, 0.30000, 0.00000]], [ 0.29304, [ 3, -0.30000, -0.13192], [ 3, 0.30000, 0.13192]], [ 0.52927, [ 3, -0.30000, 0.00000], [ 3, 0.23333, 0.00000]], [ 0.23321, [ 3, -0.23333, 0.00000], [ 3, 0.23333, 0.00000]], [ 0.35746, [ 3, -0.23333, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.27923, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHipPitch")
    times.append([ 1.30000, 2.40000, 3.40000, 4.30000, 5.20000, 5.90000, 6.60000, 7.20000])
    keys.append([ [ -0.59055, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ -0.86974, [ 3, -0.36667, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.00916, [ 3, -0.33333, 0.00000], [ 3, 0.30000, 0.00000]], [ -0.62123, [ 3, -0.30000, 0.25746], [ 3, 0.30000, -0.25746]], [ -1.55390, [ 3, -0.30000, 0.05128], [ 3, 0.23333, -0.03988]], [ -1.59378, [ 3, -0.23333, 0.00000], [ 3, 0.23333, 0.00000]], [ -1.46493, [ 3, -0.23333, 0.00000], [ 3, 0.20000, 0.00000]], [ -1.57998, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LKneePitch")
    times.append([ 1.30000, 2.40000, 3.40000, 4.30000, 5.20000, 5.90000, 6.60000, 7.20000])
    keys.append([ [ 2.11253, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ 2.11253, [ 3, -0.36667, 0.00000], [ 3, 0.33333, 0.00000]], [ 1.81774, [ 3, -0.33333, 0.00000], [ 3, 0.30000, 0.00000]], [ 1.98189, [ 3, -0.30000, 0.00000], [ 3, 0.30000, 0.00000]], [ 1.07687, [ 3, -0.30000, 0.00000], [ 3, 0.23333, 0.00000]], [ 1.15813, [ 3, -0.23333, 0.00000], [ 3, 0.23333, 0.00000]], [ 1.08756, [ 3, -0.23333, 0.00000], [ 3, 0.20000, 0.00000]], [ 1.39743, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LAnklePitch")
    times.append([ 1.30000, 2.40000, 3.40000, 4.30000, 5.20000, 5.90000, 6.60000, 7.20000])
    keys.append([ [ -1.18952, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ -1.18952, [ 3, -0.36667, 0.00000], [ 3, 0.33333, 0.00000]], [ -1.18952, [ 3, -0.33333, 0.00000], [ 3, 0.30000, 0.00000]], [ -0.52314, [ 3, -0.30000, -0.32148], [ 3, 0.30000, 0.32148]], [ 0.73935, [ 3, -0.30000, -0.23580], [ 3, 0.23333, 0.18340]], [ 0.92275, [ 3, -0.23333, 0.00000], [ 3, 0.23333, 0.00000]], [ 0.92189, [ 3, -0.23333, 0.00086], [ 3, 0.20000, -0.00073]], [ 0.83599, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LAnkleRoll")
    times.append([ 1.30000, 2.40000, 3.40000, 4.30000, 5.20000, 5.90000, 6.60000, 7.20000])
    keys.append([ [ 0.04299, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.07981, [ 3, -0.36667, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.04146, [ 3, -0.33333, 0.03835], [ 3, 0.30000, -0.03451]], [ -0.45402, [ 3, -0.30000, 0.00000], [ 3, 0.30000, 0.00000]], [ -0.18097, [ 3, -0.30000, -0.07622], [ 3, 0.23333, 0.05928]], [ -0.04751, [ 3, -0.23333, 0.00000], [ 3, 0.23333, 0.00000]], [ -0.05058, [ 3, -0.23333, 0.00000], [ 3, 0.20000, 0.00000]], [ -0.00916, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RHipRoll")
    times.append([ 1.30000, 2.40000, 3.40000, 4.30000, 5.20000, 5.90000, 6.60000, 7.20000])
    keys.append([ [ -0.13802, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ -0.25614, [ 3, -0.36667, 0.04232], [ 3, 0.33333, -0.03847]], [ -0.38039, [ 3, -0.33333, 0.05598], [ 3, 0.30000, -0.05038]], [ -0.57521, [ 3, -0.30000, 0.00000], [ 3, 0.30000, 0.00000]], [ -0.53532, [ 3, -0.30000, -0.03988], [ 3, 0.23333, 0.03102]], [ -0.21472, [ 3, -0.23333, 0.00000], [ 3, 0.23333, 0.00000]], [ -0.32210, [ 3, -0.23333, 0.00000], [ 3, 0.20000, 0.00000]], [ -0.26841, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RHipPitch")
    times.append([ 1.30000, 2.40000, 3.40000, 4.30000, 5.20000, 5.90000, 6.60000, 7.20000])
    keys.append([ [ -0.76551, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ -0.85908, [ 3, -0.36667, 0.09357], [ 3, 0.33333, -0.08507]], [ -1.36530, [ 3, -0.33333, 0.13887], [ 3, 0.30000, -0.12498]], [ -1.65063, [ 3, -0.30000, 0.00000], [ 3, 0.30000, 0.00000]], [ -1.54171, [ 3, -0.30000, 0.00000], [ 3, 0.23333, 0.00000]], [ -1.60921, [ 3, -0.23333, 0.00000], [ 3, 0.23333, 0.00000]], [ -1.41746, [ 3, -0.23333, 0.00000], [ 3, 0.20000, 0.00000]], [ -1.58620, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RKneePitch")
    times.append([ 1.30000, 2.40000, 3.40000, 4.30000, 5.20000, 5.90000, 6.60000, 7.20000])
    keys.append([ [ 1.89300, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.77471, [ 3, -0.36667, 0.00000], [ 3, 0.33333, 0.00000]], [ 1.14287, [ 3, -0.33333, -0.00341], [ 3, 0.30000, 0.00307]], [ 1.14594, [ 3, -0.30000, 0.00000], [ 3, 0.30000, 0.00000]], [ 1.03847, [ 3, -0.30000, 0.00000], [ 3, 0.23333, 0.00000]], [ 1.19810, [ 3, -0.23333, 0.00000], [ 3, 0.23333, 0.00000]], [ 0.98027, [ 3, -0.23333, 0.00000], [ 3, 0.20000, 0.00000]], [ 1.40672, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RAnklePitch")
    times.append([ 1.30000, 2.40000, 3.40000, 4.30000, 5.20000, 5.90000, 6.60000, 7.20000])
    keys.append([ [ -0.73014, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.33445, [ 3, -0.36667, -0.13499], [ 3, 0.33333, 0.12272]], [ 0.45717, [ 3, -0.33333, -0.07670], [ 3, 0.30000, 0.06903]], [ 0.77164, [ 3, -0.30000, 0.00000], [ 3, 0.30000, 0.00000]], [ 0.71335, [ 3, -0.30000, 0.00000], [ 3, 0.23333, 0.00000]], [ 0.93206, [ 3, -0.23333, 0.00000], [ 3, 0.23333, 0.00000]], [ 0.93206, [ 3, -0.23333, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.84988, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RAnkleRoll")
    times.append([ 1.30000, 2.40000, 3.40000, 4.30000, 5.20000, 5.90000, 6.60000, 7.20000])
    keys.append([ [ 0.21020, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.50626, [ 3, -0.36667, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.05833, [ 3, -0.33333, 0.09850], [ 3, 0.30000, -0.08865]], [ -0.05518, [ 3, -0.30000, 0.00000], [ 3, 0.30000, 0.00000]], [ 0.18872, [ 3, -0.30000, 0.00000], [ 3, 0.23333, 0.00000]], [ 0.03532, [ 3, -0.23333, 0.00000], [ 3, 0.23333, 0.00000]], [ 0.04760, [ 3, -0.23333, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.01845, [ 3, -0.20000, 0.00000], [ 3, 0.00000, 0.00000]]])

    motion = ALProxy("ALMotion")
    motion.stiffnessInterpolation("Body", 1.0, 1.0)
    motion.angleInterpolationBezier(names, times, keys)
    motion._relaxMotorsWhenSitting()


def belly_to_crouch():
    names = list()
    times = list()
    keys = list()

    names.append("HeadYaw")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ 0.17453, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.22689, [ 3, -0.33333, 0.00000], [ 3, 0.46667, 0.00000]], [ 0.28623, [ 3, -0.46667, -0.01333], [ 3, 0.36667, 0.01047]], [ 0.29671, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ -0.49567, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ -0.29671, [ 3, -0.23333, -0.07104], [ 3, 0.36667, 0.11164]], [ 0.05236, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ -0.39095, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ -0.01745, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("HeadPitch")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ -0.57683, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.54768, [ 3, -0.33333, -0.02915], [ 3, 0.46667, 0.04081]], [ 0.10734, [ 3, -0.46667, -0.19834], [ 3, 0.36667, 0.15584]], [ 0.51487, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ 0.38048, [ 3, -0.43333, 0.01726], [ 3, 0.23333, -0.00930]], [ 0.37119, [ 3, -0.23333, 0.00930], [ 3, 0.36667, -0.01461]], [ -0.10472, [ 3, -0.36667, 0.13827], [ 3, 0.43333, -0.16341]], [ -0.53387, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.00698, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LShoulderPitch")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ 0.08433, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -1.51146, [ 3, -0.33333, 0.00000], [ 3, 0.46667, 0.00000]], [ -1.25025, [ 3, -0.46667, -0.26120], [ 3, 0.36667, 0.20523]], [ 0.07206, [ 3, -0.36667, -0.38566], [ 3, 0.43333, 0.45578]], [ 1.27409, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ 0.75573, [ 3, -0.23333, 0.00333], [ 3, 0.36667, -0.00524]], [ 0.75049, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ 1.29154, [ 3, -0.43333, -0.13841], [ 3, 0.36667, 0.11712]], [ 1.51708, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LShoulderRoll")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ 1.55390, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.01683, [ 3, -0.33333, 0.00000], [ 3, 0.46667, 0.00000]], [ 0.07666, [ 3, -0.46667, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.07052, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ 0.15643, [ 3, -0.43333, -0.08590], [ 3, 0.23333, 0.04626]], [ 0.93899, [ 3, -0.23333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.67719, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ 0.84648, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.08433, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LElbowYaw")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ -2.07694, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -1.58006, [ 3, -0.33333, 0.00000], [ 3, 0.46667, 0.00000]], [ -1.60461, [ 3, -0.46667, 0.02454], [ 3, 0.36667, -0.01928]], [ -1.78715, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ -1.32695, [ 3, -0.43333, -0.11683], [ 3, 0.23333, 0.06291]], [ -1.24791, [ 3, -0.23333, -0.04593], [ 3, 0.36667, 0.07218]], [ -0.97260, [ 3, -0.36667, -0.01072], [ 3, 0.43333, 0.01267]], [ -0.95993, [ 3, -0.43333, -0.01267], [ 3, 0.36667, 0.01072]], [ -0.90203, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LElbowRoll")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ -0.00873, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.35278, [ 3, -0.33333, 0.08741], [ 3, 0.46667, -0.12238]], [ -0.63810, [ 3, -0.46667, 0.09306], [ 3, 0.36667, -0.07312]], [ -0.85133, [ 3, -0.36667, 0.13944], [ 3, 0.43333, -0.16480]], [ -1.55083, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ -0.73304, [ 3, -0.23333, 0.00000], [ 3, 0.36667, 0.00000]], [ -0.73653, [ 3, -0.36667, 0.00349], [ 3, 0.43333, -0.00413]], [ -1.15506, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ -1.09984, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LWristYaw")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000])
    keys.append([ [ -1.55092, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -1.55092, [ 3, -0.33333, 0.00000], [ 3, 0.46667, 0.00000]], [ -1.51717, [ 3, -0.46667, -0.01919], [ 3, 0.36667, 0.01507]], [ -1.44814, [ 3, -0.36667, -0.01711], [ 3, 0.43333, 0.02022]], [ -1.40519, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ -1.40825, [ 3, -0.23333, 0.00000], [ 3, 0.36667, 0.00000]], [ -1.40825, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ -0.54454, [ 3, -0.43333, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHand")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000])
    keys.append([ [ 0.00102, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00034, [ 3, -0.33333, 0.00000], [ 3, 0.46667, 0.00000]], [ 0.00071, [ 3, -0.46667, -0.00011], [ 3, 0.36667, 0.00009]], [ 0.00095, [ 3, -0.36667, -0.00004], [ 3, 0.43333, 0.00005]], [ 0.00100, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ 0.00100, [ 3, -0.23333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.00096, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ 0.00100, [ 3, -0.43333, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RShoulderPitch")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ -0.02757, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -1.51146, [ 3, -0.33333, 0.00000], [ 3, 0.46667, 0.00000]], [ -1.22256, [ 3, -0.46667, -0.23805], [ 3, 0.36667, 0.18704]], [ -0.23619, [ 3, -0.36667, -0.22007], [ 3, 0.43333, 0.26008]], [ 0.21787, [ 3, -0.43333, -0.14857], [ 3, 0.23333, 0.08000]], [ 0.44950, [ 3, -0.23333, -0.09028], [ 3, 0.36667, 0.14187]], [ 0.91431, [ 3, -0.36667, -0.03894], [ 3, 0.43333, 0.04602]], [ 0.96033, [ 3, -0.43333, -0.04602], [ 3, 0.36667, 0.03894]], [ 1.35303, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RShoulderRoll")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ -1.53558, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.19199, [ 3, -0.33333, -0.07793], [ 3, 0.46667, 0.10911]], [ -0.08288, [ 3, -0.46667, 0.00000], [ 3, 0.36667, 0.00000]], [ -0.08288, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ -0.22707, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ -0.18259, [ 3, -0.23333, -0.02831], [ 3, 0.36667, 0.04448]], [ -0.00870, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ -0.13197, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ -0.01385, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RElbowYaw")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ 2.07694, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 1.56157, [ 3, -0.33333, 0.00000], [ 3, 0.46667, 0.00000]], [ 1.61373, [ 3, -0.46667, -0.02319], [ 3, 0.36667, 0.01822]], [ 1.68582, [ 3, -0.36667, -0.05296], [ 3, 0.43333, 0.06259]], [ 1.96041, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ 1.95121, [ 3, -0.23333, 0.00920], [ 3, 0.36667, -0.01445]], [ 0.66571, [ 3, -0.36667, 0.22845], [ 3, 0.43333, -0.26998]], [ 0.39573, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.86667, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RElbowRoll")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ 0.10472, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.38201, [ 3, -0.33333, -0.07367], [ 3, 0.46667, 0.10313]], [ 0.63512, [ 3, -0.46667, -0.21934], [ 3, 0.36667, 0.17234]], [ 1.55705, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ 0.00870, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ 0.00870, [ 3, -0.23333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.42343, [ 3, -0.36667, -0.09786], [ 3, 0.43333, 0.11566]], [ 0.64926, [ 3, -0.43333, -0.07423], [ 3, 0.36667, 0.06281]], [ 0.83454, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RWristYaw")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000])
    keys.append([ [ 1.50941, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 1.50941, [ 3, -0.33333, 0.00000], [ 3, 0.46667, 0.00000]], [ 1.49714, [ 3, -0.46667, 0.01227], [ 3, 0.36667, -0.00964]], [ 1.42811, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ 1.43578, [ 3, -0.43333, -0.00266], [ 3, 0.23333, 0.00143]], [ 1.44038, [ 3, -0.23333, -0.00099], [ 3, 0.36667, 0.00156]], [ 1.44345, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ 1.44038, [ 3, -0.43333, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RHand")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000])
    keys.append([ [ 0.00032, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00022, [ 3, -0.33333, 0.00000], [ 3, 0.46667, 0.00000]], [ 0.00046, [ 3, -0.46667, -0.00011], [ 3, 0.36667, 0.00009]], [ 0.00082, [ 3, -0.36667, -0.00004], [ 3, 0.43333, 0.00004]], [ 0.00086, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ 0.00084, [ 3, -0.23333, 0.00000], [ 3, 0.36667, -0.00001]], [ 0.00083, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ 0.00084, [ 3, -0.43333, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHipYawPitch")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ -0.03371, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.03491, [ 3, -0.33333, 0.00000], [ 3, 0.46667, 0.00000]], [ -0.43561, [ 3, -0.46667, 0.15197], [ 3, 0.36667, -0.11941]], [ -0.77923, [ 3, -0.36667, 0.09257], [ 3, 0.43333, -0.10940]], [ -1.04154, [ 3, -0.43333, 0.07932], [ 3, 0.23333, -0.04271]], [ -1.14530, [ 3, -0.23333, 0.00000], [ 3, 0.36667, 0.00000]], [ -1.14530, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ -0.56754, [ 3, -0.43333, -0.20679], [ 3, 0.36667, 0.17498]], [ 0.00000, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHipRoll")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ 0.06294, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00004, [ 3, -0.33333, 0.00000], [ 3, 0.46667, 0.00000]], [ 0.00158, [ 3, -0.46667, 0.00000], [ 3, 0.36667, 0.00000]], [ -0.37732, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ -0.29755, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ -0.29755, [ 3, -0.23333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.19486, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ 0.12736, [ 3, -0.43333, 0.03707], [ 3, 0.36667, -0.03137]], [ -0.01047, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHipPitch")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ 0.06140, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00004, [ 3, -0.33333, 0.06136], [ 3, 0.46667, -0.08590]], [ -1.56924, [ 3, -0.46667, 0.00000], [ 3, 0.36667, 0.00000]], [ -1.28085, [ 3, -0.36667, -0.08132], [ 3, 0.43333, 0.09611]], [ -1.03694, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ -1.15966, [ 3, -0.23333, 0.01464], [ 3, 0.36667, -0.02301]], [ -1.18267, [ 3, -0.36667, 0.01687], [ 3, 0.43333, -0.01994]], [ -1.27011, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ -1.04720, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LKneePitch")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ 0.12043, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 1.98968, [ 3, -0.33333, -0.08775], [ 3, 0.46667, 0.12285]], [ 2.11253, [ 3, -0.46667, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.28221, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ 0.40493, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ 0.35738, [ 3, -0.23333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.71940, [ 3, -0.36667, -0.25311], [ 3, 0.43333, 0.29913]], [ 2.01409, [ 3, -0.43333, -0.09490], [ 3, 0.36667, 0.08030]], [ 2.09440, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LAnklePitch")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ 0.92189, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -1.02974, [ 3, -0.33333, 0.08628], [ 3, 0.46667, -0.12080]], [ -1.15054, [ 3, -0.46667, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.21625, [ 3, -0.36667, -0.28428], [ 3, 0.43333, 0.33597]], [ 0.71020, [ 3, -0.43333, -0.15307], [ 3, 0.23333, 0.08242]], [ 0.92275, [ 3, -0.23333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.82525, [ 3, -0.36667, 0.09750], [ 3, 0.43333, -0.11522]], [ -0.50166, [ 3, -0.43333, 0.33808], [ 3, 0.36667, -0.28607]], [ -1.04720, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LAnkleRoll")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ -0.00149, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00004, [ 3, -0.33333, 0.00000], [ 3, 0.46667, 0.00000]], [ -0.00149, [ 3, -0.46667, 0.00153], [ 3, 0.36667, -0.00121]], [ -0.45249, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ -0.30062, [ 3, -0.43333, -0.07246], [ 3, 0.23333, 0.03901]], [ -0.11808, [ 3, -0.23333, -0.03361], [ 3, 0.36667, 0.05281]], [ -0.04138, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ -0.12114, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.00000, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RHipRoll")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ 0.03142, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00004, [ 3, -0.33333, 0.00000], [ 3, 0.46667, 0.00000]], [ 0.00158, [ 3, -0.46667, -0.00153], [ 3, 0.36667, 0.00121]], [ 0.31144, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ 0.25469, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ 0.32065, [ 3, -0.23333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.22707, [ 3, -0.36667, 0.06047], [ 3, 0.43333, -0.07146]], [ -0.07512, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.01047, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RHipPitch")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ 0.07666, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.00004, [ 3, -0.33333, 0.07670], [ 3, 0.46667, -0.10738]], [ -1.57699, [ 3, -0.46667, 0.10738], [ 3, 0.36667, -0.08437]], [ -1.66136, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ -1.19963, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ -1.59847, [ 3, -0.23333, 0.00000], [ 3, 0.36667, 0.00000]], [ -0.32218, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ -0.71028, [ 3, -0.43333, 0.13091], [ 3, 0.36667, -0.11077]], [ -1.04720, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RKneePitch")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ -0.07819, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 1.98968, [ 3, -0.33333, -0.06900], [ 3, 0.46667, 0.09660]], [ 2.08628, [ 3, -0.46667, 0.00000], [ 3, 0.36667, 0.00000]], [ 1.74267, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ 2.12019, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ 2.12019, [ 3, -0.23333, 0.00000], [ 3, 0.36667, 0.00000]], [ 2.12019, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ 2.12019, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ 2.09440, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RAnklePitch")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ 0.92965, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -1.02974, [ 3, -0.33333, 0.07746], [ 3, 0.46667, -0.10844]], [ -1.13819, [ 3, -0.46667, 0.02925], [ 3, 0.36667, -0.02298]], [ -1.18645, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ -1.18645, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ -0.58901, [ 3, -0.23333, 0.00000], [ 3, 0.36667, 0.00000]], [ -1.18645, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ -1.18645, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ -1.04720, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RAnkleRoll")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ 0.18850, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00004, [ 3, -0.33333, 0.00000], [ 3, 0.46667, 0.00000]], [ 0.00618, [ 3, -0.46667, 0.00000], [ 3, 0.36667, 0.00000]], [ -0.00456, [ 3, -0.36667, 0.01074], [ 3, 0.43333, -0.01269]], [ -0.09813, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ -0.01376, [ 3, -0.23333, 0.00000], [ 3, 0.36667, 0.00000]], [ -0.09507, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ 0.03532, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.00000, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    motion = ALProxy("ALMotion")
    motion.stiffnessInterpolation("Body", 1.0, 1.0)
    motion.angleInterpolationBezier(names, times, keys)


def side_to_belly():
    names = list()
    times = list()
    keys = list()

    names.append("HeadYaw")
    times.append([ 0.50000, 1.00000])
    keys.append([ [ 0.72094, [ 3, -0.16667, 0.00000], [ 3, 0.16667, 0.00000]], [ 0.72094, [ 3, -0.16667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("HeadPitch")
    times.append([ 0.50000, 1.00000])
    keys.append([ [ 0.14876, [ 3, -0.16667, 0.00000], [ 3, 0.16667, 0.00000]], [ 0.14876, [ 3, -0.16667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LShoulderPitch")
    times.append([ 0.50000, 1.00000])
    keys.append([ [ 1.89752, [ 3, -0.16667, 0.00000], [ 3, 0.16667, 0.00000]], [ 1.89752, [ 3, -0.16667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LShoulderRoll")
    times.append([ 0.50000, 1.00000])
    keys.append([ [ 0.80224, [ 3, -0.16667, 0.00000], [ 3, 0.16667, 0.00000]], [ 0.80224, [ 3, -0.16667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LElbowYaw")
    times.append([ 0.50000, 1.00000])
    keys.append([ [ -0.99254, [ 3, -0.16667, 0.00000], [ 3, 0.16667, 0.00000]], [ -0.99254, [ 3, -0.16667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LElbowRoll")
    times.append([ 0.50000, 1.00000])
    keys.append([ [ -0.46783, [ 3, -0.16667, 0.00000], [ 3, 0.16667, 0.00000]], [ -0.46783, [ 3, -0.16667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LWristYaw")
    times.append([ 0.50000, 1.00000])
    keys.append([ [ -0.67807, [ 3, -0.16667, 0.00000], [ 3, 0.16667, 0.00000]], [ -0.67807, [ 3, -0.16667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHand")
    times.append([ 0.50000, 1.00000])
    keys.append([ [ 0.00350, [ 3, -0.16667, 0.00000], [ 3, 0.16667, 0.00000]], [ 0.00350, [ 3, -0.16667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RShoulderPitch")
    times.append([ 0.50000, 1.00000])
    keys.append([ [ 1.97891, [ 3, -0.16667, 0.00000], [ 3, 0.16667, 0.00000]], [ 1.97891, [ 3, -0.16667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RShoulderRoll")
    times.append([ 0.50000, 1.00000])
    keys.append([ [ -0.77931, [ 3, -0.16667, 0.00000], [ 3, 0.16667, 0.00000]], [ -0.77931, [ 3, -0.16667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RElbowYaw")
    times.append([ 0.50000, 1.00000])
    keys.append([ [ 0.92343, [ 3, -0.16667, 0.00000], [ 3, 0.16667, 0.00000]], [ 0.92343, [ 3, -0.16667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RElbowRoll")
    times.append([ 0.50000, 1.00000])
    keys.append([ [ 0.34059, [ 3, -0.16667, 0.00000], [ 3, 0.16667, 0.00000]], [ 0.34059, [ 3, -0.16667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RWristYaw")
    times.append([ 0.50000, 1.00000])
    keys.append([ [ 0.64577, [ 3, -0.16667, 0.00000], [ 3, 0.16667, 0.00000]], [ 0.64577, [ 3, -0.16667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RHand")
    times.append([ 0.50000, 1.00000])
    keys.append([ [ 0.00256, [ 3, -0.16667, 0.00000], [ 3, 0.16667, 0.00000]], [ 0.00256, [ 3, -0.16667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHipYawPitch")
    times.append([ 0.50000, 1.00000])
    keys.append([ [ -1.14432, [ 3, -0.16667, 0.00000], [ 3, 0.16667, 0.00000]], [ -1.14432, [ 3, -0.16667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHipRoll")
    times.append([ 0.50000, 1.00000])
    keys.append([ [ 0.25162, [ 3, -0.16667, 0.00000], [ 3, 0.16667, 0.00000]], [ 0.25162, [ 3, -0.16667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHipPitch")
    times.append([ 0.50000, 1.00000])
    keys.append([ [ 0.03532, [ 3, -0.16667, 0.00000], [ 3, 0.16667, 0.00000]], [ 0.03532, [ 3, -0.16667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LKneePitch")
    times.append([ 0.50000, 1.00000])
    keys.append([ [ -0.09208, [ 3, -0.16667, 0.00000], [ 3, 0.16667, 0.00000]], [ -0.09208, [ 3, -0.16667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LAnklePitch")
    times.append([ 0.50000, 1.00000])
    keys.append([ [ 0.35585, [ 3, -0.16667, 0.00000], [ 3, 0.16667, 0.00000]], [ 0.35585, [ 3, -0.16667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LAnkleRoll")
    times.append([ 0.50000, 1.00000])
    keys.append([ [ 0.34366, [ 3, -0.16667, 0.00000], [ 3, 0.16667, 0.00000]], [ 0.34366, [ 3, -0.16667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RHipRoll")
    times.append([ 0.50000, 1.00000])
    keys.append([ [ -0.03064, [ 3, -0.16667, 0.00000], [ 3, 0.16667, 0.00000]], [ -0.03064, [ 3, -0.16667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RHipPitch")
    times.append([ 0.50000, 1.00000])
    keys.append([ [ 0.41567, [ 3, -0.16667, 0.00000], [ 3, 0.16667, 0.00000]], [ 0.41567, [ 3, -0.16667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RKneePitch")
    times.append([ 0.50000, 1.00000])
    keys.append([ [ -0.09200, [ 3, -0.16667, 0.00000], [ 3, 0.16667, 0.00000]], [ -0.09200, [ 3, -0.16667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RAnklePitch")
    times.append([ 0.50000, 1.00000])
    keys.append([ [ 0.52314, [ 3, -0.16667, 0.00000], [ 3, 0.16667, 0.00000]], [ 0.52314, [ 3, -0.16667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RAnkleRoll")
    times.append([ 0.50000, 1.00000])
    keys.append([ [ -0.06745, [ 3, -0.16667, 0.00000], [ 3, 0.16667, 0.00000]], [ -0.06745, [ 3, -0.16667, 0.00000], [ 3, 0.00000, 0.00000]]])

    motion = ALProxy("ALMotion")
    motion.stiffnessInterpolation("Body", 1.0, 1.0)
    motion.angleInterpolationBezier(names, times, keys)


def back_to_stand():
    names = list()
    times = list()
    keys = list()

    names.append("HeadYaw")
    times.append([ 1.00000, 2.00000, 2.80000, 3.60000, 4.30000, 4.80000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([ [ -0.02459, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.00000, [ 3, -0.33333, -0.01222], [ 3, 0.26667, 0.00977]], [ 0.04138, [ 3, -0.26667, 0.00000], [ 3, 0.26667, 0.00000]], [ 0.00000, [ 3, -0.26667, 0.00000], [ 3, 0.23333, -0.00000]], [ 0.00000, [ 3, -0.23333, 0.00000], [ 3, 0.16667, -0.00000]], [ 0.00000, [ 3, -0.16667, 0.00000], [ 3, 0.26667, -0.00000]], [ -0.51393, [ 3, -0.26667, 0.00000], [ 3, 0.30000, 0.00000]], [ -0.30224, [ 3, -0.30000, -0.12958], [ 3, 0.30000, 0.12958]], [ 0.26354, [ 3, -0.30000, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.12043, [ 3, -0.20000, 0.04549], [ 3, 0.20000, -0.04549]], [ -0.00940, [ 3, -0.20000, 0.00000], [ 3, 0.63333, 0.00000]], [ 0.06592, [ 3, -0.63333, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("HeadPitch")
    times.append([ 1.00000, 2.00000, 2.80000, 3.60000, 4.30000, 4.80000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([ [ 0.06285, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00000, [ 3, -0.33333, 0.00000], [ 3, 0.26667, 0.00000]], [ 0.51490, [ 3, -0.26667, 0.00000], [ 3, 0.26667, 0.00000]], [ -0.67200, [ 3, -0.26667, 0.00000], [ 3, 0.23333, 0.00000]], [ 0.00000, [ 3, -0.23333, -0.19854], [ 3, 0.16667, 0.14181]], [ 0.34907, [ 3, -0.16667, 0.00000], [ 3, 0.26667, 0.00000]], [ 0.17177, [ 3, -0.26667, 0.00000], [ 3, 0.30000, 0.00000]], [ 0.34511, [ 3, -0.30000, 0.00000], [ 3, 0.30000, 0.00000]], [ 0.01047, [ 3, -0.30000, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.02967, [ 3, -0.20000, -0.01920], [ 3, 0.20000, 0.01920]], [ 0.37886, [ 3, -0.20000, 0.00000], [ 3, 0.63333, 0.00000]], [ -0.03993, [ 3, -0.63333, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LShoulderPitch")
    times.append([ 1.00000, 2.00000, 2.60000, 3.60000, 4.30000, 4.80000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([ [ 2.08560, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 2.08567, [ 3, -0.33333, 0.00000], [ 3, 0.20000, 0.00000]], [ 2.03865, [ 3, -0.20000, 0.00000], [ 3, 0.33333, 0.00000]], [ 2.08560, [ 3, -0.33333, 0.00000], [ 3, 0.23333, 0.00000]], [ 2.08560, [ 3, -0.23333, 0.00000], [ 3, 0.16667, 0.00000]], [ 2.08560, [ 3, -0.16667, 0.00000], [ 3, 0.26667, 0.00000]], [ 2.03251, [ 3, -0.26667, 0.05309], [ 3, 0.30000, -0.05973]], [ 1.28698, [ 3, -0.30000, 0.17922], [ 3, 0.30000, -0.17922]], [ 0.95717, [ 3, -0.30000, 0.11076], [ 3, 0.20000, -0.07384]], [ 0.73321, [ 3, -0.20000, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.73321, [ 3, -0.20000, 0.00000], [ 3, 0.63333, 0.00000]], [ 1.59225, [ 3, -0.63333, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LShoulderRoll")
    times.append([ 1.00000, 2.00000, 2.60000, 3.60000, 4.30000, 4.80000, 5.60000, 6.00000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([ [ 0.98018, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.36652, [ 3, -0.33333, 0.02909], [ 3, 0.20000, -0.01745]], [ 0.34907, [ 3, -0.20000, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.34907, [ 3, -0.33333, 0.00000], [ 3, 0.23333, 0.00000]], [ 0.36652, [ 3, -0.23333, 0.00000], [ 3, 0.16667, 0.00000]], [ 0.00870, [ 3, -0.16667, 0.00000], [ 3, 0.26667, 0.00000]], [ 0.29909, [ 3, -0.26667, -0.09658], [ 3, 0.13333, 0.04829]], [ 0.44331, [ 3, -0.13333, 0.00000], [ 3, 0.16667, 0.00000]], [ 0.07052, [ 3, -0.16667, 0.00000], [ 3, 0.30000, 0.00000]], [ 0.26687, [ 3, -0.30000, -0.08560], [ 3, 0.20000, 0.05706]], [ 0.49851, [ 3, -0.20000, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.49851, [ 3, -0.20000, 0.00000], [ 3, 0.63333, 0.00000]], [ 0.21932, [ 3, -0.63333, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LElbowYaw")
    times.append([ 1.00000, 2.00000, 2.60000, 3.60000, 4.30000, 4.80000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([ [ -0.76091, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.15708, [ 3, -0.33333, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.12268, [ 3, -0.20000, 0.00873], [ 3, 0.33333, -0.01454]], [ 0.08727, [ 3, -0.33333, 0.00000], [ 3, 0.23333, 0.00000]], [ 0.08727, [ 3, -0.23333, 0.00000], [ 3, 0.16667, 0.00000]], [ 0.08727, [ 3, -0.16667, 0.00000], [ 3, 0.26667, 0.00000]], [ -1.96049, [ 3, -0.26667, 0.00000], [ 3, 0.30000, 0.00000]], [ -0.85448, [ 3, -0.30000, -0.28507], [ 3, 0.30000, 0.28507]], [ -0.25008, [ 3, -0.30000, -0.18751], [ 3, 0.20000, 0.12501]], [ 0.08308, [ 3, -0.20000, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.08308, [ 3, -0.20000, 0.00000], [ 3, 0.63333, 0.00000]], [ -1.03089, [ 3, -0.63333, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LElbowRoll")
    times.append([ 1.00000, 2.00000, 2.60000, 3.60000, 4.30000, 4.80000, 5.20000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([ [ -0.62430, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.03491, [ 3, -0.33333, 0.00000], [ 3, 0.20000, 0.00000]], [ -1.54462, [ 3, -0.20000, 0.01049], [ 3, 0.33333, -0.01748]], [ -1.56210, [ 3, -0.33333, 0.00000], [ 3, 0.23333, 0.00000]], [ -0.69813, [ 3, -0.23333, -0.30205], [ 3, 0.16667, 0.21575]], [ -0.00870, [ 3, -0.16667, 0.00000], [ 3, 0.13333, 0.00000]], [ -0.19199, [ 3, -0.13333, 0.17291], [ 3, 0.13333, -0.17291]], [ -1.04615, [ 3, -0.13333, 0.00000], [ 3, 0.30000, 0.00000]], [ -0.87280, [ 3, -0.30000, -0.03605], [ 3, 0.30000, 0.03605]], [ -0.82985, [ 3, -0.30000, -0.01349], [ 3, 0.20000, 0.00899]], [ -0.80535, [ 3, -0.20000, 0.00000], [ 3, 0.20000, 0.00000]], [ -0.80535, [ 3, -0.20000, 0.00000], [ 3, 0.63333, 0.00000]], [ -0.68105, [ 3, -0.63333, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LWristYaw")
    times.append([ 1.00000, 2.60000, 5.60000, 6.50000, 7.40000, 10.50000])
    keys.append([ [ -0.70568, [ 3, -0.33333, 0.00000], [ 3, 0.53333, 0.00000]], [ -1.78868, [ 3, -0.53333, 0.00000], [ 3, 1.00000, 0.00000]], [ -0.72562, [ 3, -1.00000, -0.02046], [ 3, 0.30000, 0.00614]], [ -0.71949, [ 3, -0.30000, 0.00000], [ 3, 0.30000, 0.00000]], [ -0.72256, [ 3, -0.30000, 0.00000], [ 3, 1.03333, 0.00000]], [ -0.71182, [ 3, -1.03333, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHand")
    times.append([ 1.00000, 2.60000, 5.60000, 6.50000, 7.40000, 10.50000])
    keys.append([ [ 0.00088, [ 3, -0.33333, 0.00000], [ 3, 0.53333, 0.00000]], [ 0.00133, [ 3, -0.53333, -0.00015], [ 3, 1.00000, 0.00029]], [ 0.00219, [ 3, -1.00000, -0.00035], [ 3, 0.30000, 0.00010]], [ 0.00269, [ 3, -0.30000, -0.00012], [ 3, 0.30000, 0.00012]], [ 0.00290, [ 3, -0.30000, -0.00014], [ 3, 1.03333, 0.00047]], [ 0.00451, [ 3, -1.03333, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RShoulderPitch")
    times.append([ 1.00000, 2.00000, 2.60000, 3.60000, 4.30000, 4.80000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([ [ 2.08560, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 2.08567, [ 3, -0.33333, 0.00000], [ 3, 0.20000, 0.00000]], [ 1.95283, [ 3, -0.20000, 0.00000], [ 3, 0.33333, 0.00000]], [ 2.08560, [ 3, -0.33333, 0.00000], [ 3, 0.23333, 0.00000]], [ 2.08560, [ 3, -0.23333, 0.00000], [ 3, 0.16667, 0.00000]], [ 2.08560, [ 3, -0.16667, 0.00000], [ 3, 0.26667, 0.00000]], [ 2.07708, [ 3, -0.26667, 0.00759], [ 3, 0.30000, -0.00854]], [ 2.03720, [ 3, -0.30000, 0.03988], [ 3, 0.30000, -0.03988]], [ 1.44047, [ 3, -0.30000, 0.22918], [ 3, 0.20000, -0.15279]], [ 0.89131, [ 3, -0.20000, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.89131, [ 3, -0.20000, 0.00000], [ 3, 0.63333, 0.00000]], [ 1.46961, [ 3, -0.63333, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RShoulderRoll")
    times.append([ 1.00000, 2.00000, 2.60000, 3.60000, 4.30000, 4.80000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([ [ -1.07384, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.36652, [ 3, -0.33333, -0.02909], [ 3, 0.20000, 0.01745]], [ -0.34907, [ 3, -0.20000, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.34907, [ 3, -0.33333, 0.00000], [ 3, 0.23333, 0.00000]], [ -0.36652, [ 3, -0.23333, 0.00000], [ 3, 0.16667, 0.00000]], [ -0.00870, [ 3, -0.16667, 0.00000], [ 3, 0.26667, 0.00000]], [ -0.45717, [ 3, -0.26667, 0.08719], [ 3, 0.30000, -0.09809]], [ -0.56455, [ 3, -0.30000, 0.04142], [ 3, 0.30000, -0.04142]], [ -0.70568, [ 3, -0.30000, 0.06162], [ 3, 0.20000, -0.04108]], [ -0.87266, [ 3, -0.20000, 0.00000], [ 3, 0.20000, 0.00000]], [ -0.68068, [ 3, -0.20000, -0.05778], [ 3, 0.63333, 0.18298]], [ -0.15037, [ 3, -0.63333, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RElbowYaw")
    times.append([ 1.00000, 2.00000, 2.60000, 3.60000, 4.30000, 4.80000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([ [ 0.76542, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.15708, [ 3, -0.33333, 0.16779], [ 3, 0.20000, -0.10067]], [ -0.25775, [ 3, -0.20000, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.08727, [ 3, -0.33333, 0.00000], [ 3, 0.23333, 0.00000]], [ -0.08727, [ 3, -0.23333, 0.00000], [ 3, 0.16667, 0.00000]], [ -0.08727, [ 3, -0.16667, 0.00000], [ 3, 0.26667, 0.00000]], [ -0.08134, [ 3, -0.26667, -0.00285], [ 3, 0.30000, 0.00321]], [ -0.06907, [ 3, -0.30000, -0.00920], [ 3, 0.30000, 0.00920]], [ -0.02612, [ 3, -0.30000, -0.01394], [ 3, 0.20000, 0.00929]], [ 0.00062, [ 3, -0.20000, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.00062, [ 3, -0.20000, 0.00000], [ 3, 0.63333, 0.00000]], [ 0.91269, [ 3, -0.63333, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RElbowRoll")
    times.append([ 1.00000, 2.00000, 2.60000, 3.60000, 4.30000, 4.80000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([ [ 0.71028, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.03491, [ 3, -0.33333, 0.00000], [ 3, 0.20000, 0.00000]], [ 1.54462, [ 3, -0.20000, -0.01049], [ 3, 0.33333, 0.01748]], [ 1.56210, [ 3, -0.33333, 0.00000], [ 3, 0.23333, 0.00000]], [ 0.69813, [ 3, -0.23333, 0.30205], [ 3, 0.16667, -0.21575]], [ 0.00870, [ 3, -0.16667, 0.00000], [ 3, 0.26667, 0.00000]], [ 0.09668, [ 3, -0.26667, 0.00000], [ 3, 0.30000, 0.00000]], [ 0.02152, [ 3, -0.30000, 0.00000], [ 3, 0.30000, 0.00000]], [ 0.19026, [ 3, -0.30000, -0.08645], [ 3, 0.20000, 0.05764]], [ 0.45379, [ 3, -0.20000, -0.06162], [ 3, 0.20000, 0.06162]], [ 0.55995, [ 3, -0.20000, 0.00000], [ 3, 0.63333, 0.00000]], [ 0.38047, [ 3, -0.63333, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RWristYaw")
    times.append([ 1.00000, 2.60000, 5.60000, 6.50000, 7.40000, 10.50000])
    keys.append([ [ 1.15199, [ 3, -0.33333, 0.00000], [ 3, 0.53333, 0.00000]], [ 1.72571, [ 3, -0.53333, 0.00000], [ 3, 1.00000, 0.00000]], [ 1.07989, [ 3, -1.00000, 0.00511], [ 3, 0.30000, -0.00153]], [ 1.07836, [ 3, -0.30000, 0.00000], [ 3, 0.30000, 0.00000]], [ 1.07989, [ 3, -0.30000, -0.00046], [ 3, 1.03333, 0.00158]], [ 1.08450, [ 3, -1.03333, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RHand")
    times.append([ 1.00000, 2.00000, 2.60000, 4.30000, 5.60000, 6.50000, 7.40000, 10.50000])
    keys.append([ [ 0.00000, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00000, [ 3, -0.33333, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.00032, [ 3, -0.20000, 0.00000], [ 3, 0.56667, 0.00000]], [ 0.00000, [ 3, -0.56667, 0.00000], [ 3, 0.43333, 0.00000]], [ 0.00287, [ 3, -0.43333, -0.00018], [ 3, 0.30000, 0.00013]], [ 0.00300, [ 3, -0.30000, -0.00004], [ 3, 0.30000, 0.00004]], [ 0.00308, [ 3, -0.30000, -0.00006], [ 3, 1.03333, 0.00020]], [ 0.00376, [ 3, -1.03333, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHipYawPitch")
    times.append([ 1.00000, 2.00000, 3.20000, 3.60000, 4.30000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([ [ -0.47090, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00000, [ 3, -0.33333, -0.00643], [ 3, 0.40000, 0.00771]], [ 0.00771, [ 3, -0.40000, 0.00000], [ 3, 0.13333, 0.00000]], [ -0.00000, [ 3, -0.13333, 0.00771], [ 3, 0.23333, -0.01350]], [ -0.65498, [ 3, -0.23333, 0.00000], [ 3, 0.43333, 0.00000]], [ -0.49851, [ 3, -0.43333, 0.00000], [ 3, 0.30000, 0.00000]], [ -0.85900, [ 3, -0.30000, 0.00000], [ 3, 0.30000, 0.00000]], [ -0.69639, [ 3, -0.30000, -0.09135], [ 3, 0.20000, 0.06090]], [ -0.40225, [ 3, -0.20000, 0.00000], [ 3, 0.20000, 0.00000]], [ -0.40225, [ 3, -0.20000, 0.00000], [ 3, 0.63333, 0.00000]], [ -0.23006, [ 3, -0.63333, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHipRoll")
    times.append([ 1.00000, 2.00000, 3.20000, 3.60000, 4.30000, 4.80000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([ [ 0.04453, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00000, [ 3, -0.33333, 0.00000], [ 3, 0.40000, 0.00000]], [ 0.05833, [ 3, -0.40000, 0.00000], [ 3, 0.13333, 0.00000]], [ 0.00000, [ 3, -0.13333, 0.01492], [ 3, 0.23333, -0.02612]], [ -0.06478, [ 3, -0.23333, 0.00000], [ 3, 0.16667, 0.00000]], [ 0.54105, [ 3, -0.16667, 0.00000], [ 3, 0.26667, 0.00000]], [ 0.15498, [ 3, -0.26667, 0.11230], [ 3, 0.30000, -0.12633]], [ -0.17483, [ 3, -0.30000, 0.00000], [ 3, 0.30000, 0.00000]], [ 0.00925, [ 3, -0.30000, -0.07336], [ 3, 0.20000, 0.04891]], [ 0.19199, [ 3, -0.20000, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.17453, [ 3, -0.20000, 0.00321], [ 3, 0.63333, -0.01015]], [ 0.15191, [ 3, -0.63333, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHipPitch")
    times.append([ 1.00000, 2.00000, 3.20000, 3.60000, 4.30000, 4.80000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([ [ 0.25008, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.17453, [ 3, -0.33333, 0.00000], [ 3, 0.40000, 0.00000]], [ 0.37434, [ 3, -0.40000, 0.00000], [ 3, 0.13333, 0.00000]], [ -0.17453, [ 3, -0.13333, 0.18817], [ 3, 0.23333, -0.32930]], [ -1.17808, [ 3, -0.23333, 0.27150], [ 3, 0.16667, -0.19393]], [ -1.57080, [ 3, -0.16667, 0.00000], [ 3, 0.26667, 0.00000]], [ -0.85746, [ 3, -0.26667, -0.23750], [ 3, 0.30000, 0.26719]], [ -0.05672, [ 3, -0.30000, 0.00000], [ 3, 0.30000, 0.00000]], [ -0.45556, [ 3, -0.30000, 0.15970], [ 3, 0.20000, -0.10647]], [ -0.85521, [ 3, -0.20000, 0.00000], [ 3, 0.20000, 0.00000]], [ -0.83599, [ 3, -0.20000, -0.01922], [ 3, 0.63333, 0.06087]], [ 0.21327, [ 3, -0.63333, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LKneePitch")
    times.append([ 1.00000, 2.00000, 3.20000, 3.60000, 4.30000, 4.80000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([ [ 0.09200, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 1.67552, [ 3, -0.33333, -0.28727], [ 3, 0.40000, 0.34472]], [ 2.02024, [ 3, -0.40000, 0.00000], [ 3, 0.13333, 0.00000]], [ 1.67552, [ 3, -0.13333, 0.11424], [ 3, 0.23333, -0.19992]], [ 1.07777, [ 3, -0.23333, 0.00000], [ 3, 0.16667, 0.00000]], [ 1.67552, [ 3, -0.16667, -0.13243], [ 3, 0.26667, 0.21189]], [ 2.11075, [ 3, -0.26667, -0.00135], [ 3, 0.30000, 0.00152]], [ 2.11227, [ 3, -0.30000, -0.00026], [ 3, 0.30000, 0.00026]], [ 2.11253, [ 3, -0.30000, 0.00000], [ 3, 0.20000, 0.00000]], [ 2.11253, [ 3, -0.20000, 0.00000], [ 3, 0.20000, 0.00000]], [ 2.11253, [ 3, -0.20000, 0.00000], [ 3, 0.63333, 0.00000]], [ -0.08901, [ 3, -0.63333, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LAnklePitch")
    times.append([ 1.00000, 2.00000, 3.20000, 3.60000, 4.30000, 4.80000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([ [ 0.82525, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.24435, [ 3, -0.33333, 0.19384], [ 3, 0.40000, -0.23261]], [ -0.45411, [ 3, -0.40000, 0.00000], [ 3, 0.13333, 0.00000]], [ 0.24435, [ 3, -0.13333, -0.13716], [ 3, 0.23333, 0.24003]], [ 0.67748, [ 3, -0.23333, 0.00000], [ 3, 0.16667, 0.00000]], [ 0.66323, [ 3, -0.16667, 0.01425], [ 3, 0.26667, -0.02280]], [ -0.45564, [ 3, -0.26667, 0.27681], [ 3, 0.30000, -0.31141]], [ -1.10145, [ 3, -0.30000, 0.08806], [ 3, 0.30000, -0.08806]], [ -1.18952, [ 3, -0.30000, 0.00000], [ 3, 0.20000, 0.00000]], [ -1.18952, [ 3, -0.20000, 0.00000], [ 3, 0.20000, 0.00000]], [ -1.18952, [ 3, -0.20000, 0.00000], [ 3, 0.63333, 0.00000]], [ 0.08126, [ 3, -0.63333, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LAnkleRoll")
    times.append([ 1.00000, 2.00000, 3.20000, 3.60000, 4.30000, 4.80000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([ [ -0.03371, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00000, [ 3, -0.33333, 0.00000], [ 3, 0.40000, 0.00000]], [ -0.03371, [ 3, -0.40000, 0.00000], [ 3, 0.13333, 0.00000]], [ 0.00000, [ 3, -0.13333, -0.02482], [ 3, 0.23333, 0.04344]], [ 0.17109, [ 3, -0.23333, 0.00000], [ 3, 0.16667, 0.00000]], [ -0.10472, [ 3, -0.16667, 0.07267], [ 3, 0.26667, -0.11627]], [ -0.39573, [ 3, -0.26667, 0.00000], [ 3, 0.30000, 0.00000]], [ -0.09967, [ 3, -0.30000, -0.07312], [ 3, 0.30000, 0.07312]], [ 0.04299, [ 3, -0.30000, -0.04355], [ 3, 0.20000, 0.02904]], [ 0.11810, [ 3, -0.20000, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.08727, [ 3, -0.20000, 0.02037], [ 3, 0.63333, -0.06450]], [ -0.13648, [ 3, -0.63333, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RHipRoll")
    times.append([ 1.00000, 2.00000, 3.20000, 3.60000, 4.30000, 4.80000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([ [ -0.14876, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00000, [ 3, -0.33333, 0.00000], [ 3, 0.40000, 0.00000]], [ -0.02297, [ 3, -0.40000, 0.00000], [ 3, 0.13333, 0.00000]], [ 0.00000, [ 3, -0.13333, -0.01029], [ 3, 0.23333, 0.01800]], [ 0.06190, [ 3, -0.23333, 0.00000], [ 3, 0.16667, 0.00000]], [ -0.54105, [ 3, -0.16667, 0.01080], [ 3, 0.26667, -0.01728]], [ -0.55833, [ 3, -0.26667, 0.01089], [ 3, 0.30000, -0.01225]], [ -0.61049, [ 3, -0.30000, 0.01137], [ 3, 0.30000, -0.01137]], [ -0.62657, [ 3, -0.30000, 0.00000], [ 3, 0.20000, 0.00000]], [ -0.29671, [ 3, -0.20000, -0.10152], [ 3, 0.20000, 0.10152]], [ -0.01745, [ 3, -0.20000, 0.00000], [ 3, 0.63333, 0.00000]], [ -0.06285, [ 3, -0.63333, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RHipPitch")
    times.append([ 1.00000, 2.00000, 3.20000, 3.60000, 4.30000, 4.80000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([ [ 0.18557, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.17453, [ 3, -0.33333, 0.00000], [ 3, 0.40000, 0.00000]], [ 0.28221, [ 3, -0.40000, 0.00000], [ 3, 0.13333, 0.00000]], [ -0.17453, [ 3, -0.13333, 0.17537], [ 3, 0.23333, -0.30689]], [ -1.16456, [ 3, -0.23333, 0.27150], [ 3, 0.16667, -0.19393]], [ -1.57080, [ 3, -0.16667, 0.00000], [ 3, 0.26667, 0.00000]], [ -1.52484, [ 3, -0.26667, 0.00000], [ 3, 0.30000, 0.00000]], [ -1.56012, [ 3, -0.30000, 0.00000], [ 3, 0.30000, 0.00000]], [ -1.02974, [ 3, -0.30000, -0.13086], [ 3, 0.20000, 0.08724]], [ -0.90583, [ 3, -0.20000, 0.00000], [ 3, 0.20000, 0.00000]], [ -0.90583, [ 3, -0.20000, 0.00000], [ 3, 0.63333, 0.00000]], [ 0.20858, [ 3, -0.63333, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RKneePitch")
    times.append([ 1.00000, 2.00000, 3.20000, 3.60000, 4.30000, 4.80000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([ [ 0.19179, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 1.67552, [ 3, -0.33333, -0.27798], [ 3, 0.40000, 0.33357]], [ 2.02645, [ 3, -0.40000, 0.00000], [ 3, 0.13333, 0.00000]], [ 1.67552, [ 3, -0.13333, 0.11304], [ 3, 0.23333, -0.19782]], [ 1.09386, [ 3, -0.23333, 0.00000], [ 3, 0.16667, 0.00000]], [ 1.67552, [ 3, -0.16667, 0.00000], [ 3, 0.26667, 0.00000]], [ 1.22111, [ 3, -0.26667, 0.09029], [ 3, 0.30000, -0.10158]], [ 1.09992, [ 3, -0.30000, 0.01607], [ 3, 0.30000, -0.01607]], [ 1.08385, [ 3, -0.30000, 0.01607], [ 3, 0.20000, -0.01071]], [ 0.87616, [ 3, -0.20000, 0.00000], [ 3, 0.20000, 0.00000]], [ 1.76278, [ 3, -0.20000, 0.00000], [ 3, 0.63333, 0.00000]], [ -0.07666, [ 3, -0.63333, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RAnklePitch")
    times.append([ 1.00000, 2.00000, 3.20000, 3.60000, 4.30000, 4.80000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([ [ 0.46638, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.24435, [ 3, -0.33333, 0.12737], [ 3, 0.40000, -0.15284]], [ -0.37425, [ 3, -0.40000, 0.00000], [ 3, 0.13333, 0.00000]], [ 0.24435, [ 3, -0.13333, -0.13232], [ 3, 0.23333, 0.23156]], [ 0.71737, [ 3, -0.23333, 0.00000], [ 3, 0.16667, 0.00000]], [ 0.66323, [ 3, -0.16667, 0.00000], [ 3, 0.26667, 0.00000]], [ 0.78545, [ 3, -0.26667, 0.00000], [ 3, 0.30000, 0.00000]], [ 0.78392, [ 3, -0.30000, 0.00153], [ 3, 0.30000, -0.00153]], [ 0.44157, [ 3, -0.30000, 0.05760], [ 3, 0.20000, -0.03840]], [ 0.40317, [ 3, -0.20000, 0.03840], [ 3, 0.20000, -0.03840]], [ -0.57945, [ 3, -0.20000, 0.00000], [ 3, 0.63333, 0.00000]], [ 0.08134, [ 3, -0.63333, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RAnkleRoll")
    times.append([ 1.00000, 2.00000, 3.20000, 3.60000, 4.30000, 4.80000, 5.60000, 6.50000, 7.40000, 8.00000, 8.60000, 10.50000])
    keys.append([ [ 0.16725, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00000, [ 3, -0.33333, 0.03138], [ 3, 0.40000, -0.03765]], [ -0.03984, [ 3, -0.40000, 0.00000], [ 3, 0.13333, 0.00000]], [ 0.00000, [ 3, -0.13333, 0.00000], [ 3, 0.23333, 0.00000]], [ -0.16084, [ 3, -0.23333, 0.00000], [ 3, 0.16667, 0.00000]], [ 0.10472, [ 3, -0.16667, 0.00000], [ 3, 0.26667, 0.00000]], [ 0.00925, [ 3, -0.26667, 0.03182], [ 3, 0.30000, -0.03580]], [ -0.09813, [ 3, -0.30000, 0.00000], [ 3, 0.30000, 0.00000]], [ 0.44331, [ 3, -0.30000, -0.15555], [ 3, 0.20000, 0.10370]], [ 0.67960, [ 3, -0.20000, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.27751, [ 3, -0.20000, 0.04933], [ 3, 0.63333, -0.15622]], [ 0.06294, [ 3, -0.63333, 0.00000], [ 3, 0.00000, 0.00000]]])

    motion = ALProxy("ALMotion")
    motion.stiffnessInterpolation("Body", 1.0, 1.0)
    motion.angleInterpolationBezier(names, times, keys)


def belly_to_stand():
    names = list()
    times = list()
    keys = list()

    names.append("HeadYaw")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ 0.17453, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.22689, [ 3, -0.33333, 0.00000], [ 3, 0.46667, 0.00000]], [ 0.28623, [ 3, -0.46667, -0.01333], [ 3, 0.36667, 0.01047]], [ 0.29671, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ -0.49567, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ -0.29671, [ 3, -0.23333, -0.07104], [ 3, 0.36667, 0.11164]], [ 0.05236, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ -0.39095, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.06745, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("HeadPitch")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ -0.57683, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.54768, [ 3, -0.33333, -0.02915], [ 3, 0.46667, 0.04081]], [ 0.10734, [ 3, -0.46667, -0.19834], [ 3, 0.36667, 0.15584]], [ 0.51487, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ 0.38048, [ 3, -0.43333, 0.01726], [ 3, 0.23333, -0.00930]], [ 0.37119, [ 3, -0.23333, 0.00930], [ 3, 0.36667, -0.01461]], [ -0.10472, [ 3, -0.36667, 0.13827], [ 3, 0.43333, -0.16341]], [ -0.53387, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.12741, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LShoulderPitch")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ 0.08433, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -1.51146, [ 3, -0.33333, 0.00000], [ 3, 0.46667, 0.00000]], [ -1.25025, [ 3, -0.46667, -0.26120], [ 3, 0.36667, 0.20523]], [ 0.07206, [ 3, -0.36667, -0.38566], [ 3, 0.43333, 0.45578]], [ 1.27409, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ 0.75573, [ 3, -0.23333, 0.00333], [ 3, 0.36667, -0.00524]], [ 0.75049, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ 1.29154, [ 3, -0.43333, -0.15226], [ 3, 0.36667, 0.12884]], [ 1.59378, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LShoulderRoll")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ 1.55390, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.01683, [ 3, -0.33333, 0.00000], [ 3, 0.46667, 0.00000]], [ 0.07666, [ 3, -0.46667, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.07052, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ 0.15643, [ 3, -0.43333, -0.08590], [ 3, 0.23333, 0.04626]], [ 0.93899, [ 3, -0.23333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.67719, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ 0.84648, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.21779, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LElbowYaw")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ -2.07694, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -1.58006, [ 3, -0.33333, 0.00000], [ 3, 0.46667, 0.00000]], [ -1.60461, [ 3, -0.46667, 0.02454], [ 3, 0.36667, -0.01928]], [ -1.78715, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ -1.32695, [ 3, -0.43333, -0.11683], [ 3, 0.23333, 0.06291]], [ -1.24791, [ 3, -0.23333, -0.04593], [ 3, 0.36667, 0.07218]], [ -0.97260, [ 3, -0.36667, -0.01072], [ 3, 0.43333, 0.01267]], [ -0.95993, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ -1.01862, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LElbowRoll")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ -0.00873, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.35278, [ 3, -0.33333, 0.08741], [ 3, 0.46667, -0.12238]], [ -0.63810, [ 3, -0.46667, 0.09306], [ 3, 0.36667, -0.07312]], [ -0.85133, [ 3, -0.36667, 0.13944], [ 3, 0.43333, -0.16480]], [ -1.55083, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ -0.73304, [ 3, -0.23333, 0.00000], [ 3, 0.36667, 0.00000]], [ -0.73653, [ 3, -0.36667, 0.00349], [ 3, 0.43333, -0.00413]], [ -1.15506, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ -0.68105, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LWristYaw")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ -1.55092, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -1.55092, [ 3, -0.33333, 0.00000], [ 3, 0.46667, 0.00000]], [ -1.51717, [ 3, -0.46667, -0.01919], [ 3, 0.36667, 0.01507]], [ -1.44814, [ 3, -0.36667, -0.01711], [ 3, 0.43333, 0.02022]], [ -1.40519, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ -1.40825, [ 3, -0.23333, 0.00000], [ 3, 0.36667, 0.00000]], [ -1.40825, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ -0.54454, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ -0.71028, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHand")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ 0.00102, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00034, [ 3, -0.33333, 0.00000], [ 3, 0.46667, 0.00000]], [ 0.00071, [ 3, -0.46667, -0.00011], [ 3, 0.36667, 0.00009]], [ 0.00095, [ 3, -0.36667, -0.00004], [ 3, 0.43333, 0.00005]], [ 0.00100, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ 0.00100, [ 3, -0.23333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.00096, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ 0.00100, [ 3, -0.43333, -0.00004], [ 3, 0.36667, 0.00004]], [ 0.00455, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RShoulderPitch")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ -0.02757, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -1.51146, [ 3, -0.33333, 0.00000], [ 3, 0.46667, 0.00000]], [ -1.22256, [ 3, -0.46667, -0.23805], [ 3, 0.36667, 0.18704]], [ -0.23619, [ 3, -0.36667, -0.22007], [ 3, 0.43333, 0.26008]], [ 0.21787, [ 3, -0.43333, -0.14857], [ 3, 0.23333, 0.08000]], [ 0.44950, [ 3, -0.23333, -0.09028], [ 3, 0.36667, 0.14187]], [ 0.91431, [ 3, -0.36667, -0.03894], [ 3, 0.43333, 0.04602]], [ 0.96033, [ 3, -0.43333, -0.04602], [ 3, 0.36667, 0.03894]], [ 1.47882, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RShoulderRoll")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ -1.53558, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.19199, [ 3, -0.33333, -0.07793], [ 3, 0.46667, 0.10911]], [ -0.08288, [ 3, -0.46667, 0.00000], [ 3, 0.36667, 0.00000]], [ -0.08288, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ -0.22707, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ -0.18259, [ 3, -0.23333, -0.02831], [ 3, 0.36667, 0.04448]], [ -0.00870, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ -0.13197, [ 3, -0.43333, 0.01994], [ 3, 0.36667, -0.01687]], [ -0.14884, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RElbowYaw")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ 2.07694, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 1.56157, [ 3, -0.33333, 0.00000], [ 3, 0.46667, 0.00000]], [ 1.61373, [ 3, -0.46667, -0.02319], [ 3, 0.36667, 0.01822]], [ 1.68582, [ 3, -0.36667, -0.05296], [ 3, 0.43333, 0.06259]], [ 1.96041, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ 1.95121, [ 3, -0.23333, 0.00920], [ 3, 0.36667, -0.01445]], [ 0.66571, [ 3, -0.36667, 0.22845], [ 3, 0.43333, -0.26998]], [ 0.39573, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.90962, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RElbowRoll")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ 0.10472, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.38201, [ 3, -0.33333, -0.07367], [ 3, 0.46667, 0.10313]], [ 0.63512, [ 3, -0.46667, -0.21934], [ 3, 0.36667, 0.17234]], [ 1.55705, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ 0.00870, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ 0.00870, [ 3, -0.23333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.42343, [ 3, -0.36667, -0.09786], [ 3, 0.43333, 0.11566]], [ 0.64926, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.39275, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RWristYaw")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ 1.50941, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 1.50941, [ 3, -0.33333, 0.00000], [ 3, 0.46667, 0.00000]], [ 1.49714, [ 3, -0.46667, 0.01227], [ 3, 0.36667, -0.00964]], [ 1.42811, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ 1.43578, [ 3, -0.43333, -0.00266], [ 3, 0.23333, 0.00143]], [ 1.44038, [ 3, -0.23333, -0.00099], [ 3, 0.36667, 0.00156]], [ 1.44345, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ 1.44038, [ 3, -0.43333, 0.00307], [ 3, 0.36667, -0.00260]], [ 1.08603, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RHand")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ 0.00032, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00022, [ 3, -0.33333, 0.00000], [ 3, 0.46667, 0.00000]], [ 0.00046, [ 3, -0.46667, -0.00011], [ 3, 0.36667, 0.00009]], [ 0.00082, [ 3, -0.36667, -0.00004], [ 3, 0.43333, 0.00004]], [ 0.00086, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ 0.00084, [ 3, -0.23333, 0.00000], [ 3, 0.36667, -0.00001]], [ 0.00083, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ 0.00084, [ 3, -0.43333, -0.00002], [ 3, 0.36667, 0.00002]], [ 0.00380, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHipYawPitch")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ -0.03371, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.03491, [ 3, -0.33333, 0.00000], [ 3, 0.46667, 0.00000]], [ -0.43561, [ 3, -0.46667, 0.15197], [ 3, 0.36667, -0.11941]], [ -0.77923, [ 3, -0.36667, 0.09257], [ 3, 0.43333, -0.10940]], [ -1.04154, [ 3, -0.43333, 0.07932], [ 3, 0.23333, -0.04271]], [ -1.14530, [ 3, -0.23333, 0.00000], [ 3, 0.36667, 0.00000]], [ -1.14530, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ -0.56754, [ 3, -0.43333, -0.16414], [ 3, 0.36667, 0.13889]], [ -0.23619, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHipRoll")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ 0.06294, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00004, [ 3, -0.33333, 0.00000], [ 3, 0.46667, 0.00000]], [ 0.00158, [ 3, -0.46667, 0.00000], [ 3, 0.36667, 0.00000]], [ -0.37732, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ -0.29755, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ -0.29755, [ 3, -0.23333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.19486, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ 0.12736, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.14884, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHipPitch")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ 0.06140, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00004, [ 3, -0.33333, 0.06136], [ 3, 0.46667, -0.08590]], [ -1.56924, [ 3, -0.46667, 0.00000], [ 3, 0.36667, 0.00000]], [ -1.28085, [ 3, -0.36667, -0.08132], [ 3, 0.43333, 0.09611]], [ -1.03694, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ -1.15966, [ 3, -0.23333, 0.01464], [ 3, 0.36667, -0.02301]], [ -1.18267, [ 3, -0.36667, 0.01687], [ 3, 0.43333, -0.01994]], [ -1.27011, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.21327, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LKneePitch")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ 0.12043, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 1.98968, [ 3, -0.33333, -0.08775], [ 3, 0.46667, 0.12285]], [ 2.11253, [ 3, -0.46667, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.28221, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ 0.40493, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ 0.35738, [ 3, -0.23333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.71940, [ 3, -0.36667, -0.25311], [ 3, 0.43333, 0.29913]], [ 2.01409, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ -0.09055, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LAnklePitch")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ 0.92189, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -1.02974, [ 3, -0.33333, 0.08628], [ 3, 0.46667, -0.12080]], [ -1.15054, [ 3, -0.46667, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.21625, [ 3, -0.36667, -0.28428], [ 3, 0.43333, 0.33597]], [ 0.71020, [ 3, -0.43333, -0.15307], [ 3, 0.23333, 0.08242]], [ 0.92275, [ 3, -0.23333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.82525, [ 3, -0.36667, 0.09750], [ 3, 0.43333, -0.11522]], [ -0.50166, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.07666, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LAnkleRoll")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ -0.00149, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00004, [ 3, -0.33333, 0.00000], [ 3, 0.46667, 0.00000]], [ -0.00149, [ 3, -0.46667, 0.00153], [ 3, 0.36667, -0.00121]], [ -0.45249, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ -0.30062, [ 3, -0.43333, -0.07246], [ 3, 0.23333, 0.03901]], [ -0.11808, [ 3, -0.23333, -0.03361], [ 3, 0.36667, 0.05281]], [ -0.04138, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ -0.12114, [ 3, -0.43333, 0.01632], [ 3, 0.36667, -0.01381]], [ -0.13495, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RHipRoll")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ 0.03142, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00004, [ 3, -0.33333, 0.00000], [ 3, 0.46667, 0.00000]], [ 0.00158, [ 3, -0.46667, -0.00153], [ 3, 0.36667, 0.00121]], [ 0.31144, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ 0.25469, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ 0.32065, [ 3, -0.23333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.22707, [ 3, -0.36667, 0.06047], [ 3, 0.43333, -0.07146]], [ -0.07512, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ -0.05978, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RHipPitch")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ 0.07666, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -0.00004, [ 3, -0.33333, 0.07670], [ 3, 0.46667, -0.10738]], [ -1.57699, [ 3, -0.46667, 0.10738], [ 3, 0.36667, -0.08437]], [ -1.66136, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ -1.19963, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ -1.59847, [ 3, -0.23333, 0.00000], [ 3, 0.36667, 0.00000]], [ -0.32218, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ -0.71028, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.21012, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RKneePitch")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ -0.07819, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 1.98968, [ 3, -0.33333, -0.06900], [ 3, 0.46667, 0.09660]], [ 2.08628, [ 3, -0.46667, 0.00000], [ 3, 0.36667, 0.00000]], [ 1.74267, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ 2.12019, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ 2.12019, [ 3, -0.23333, 0.00000], [ 3, 0.36667, 0.00000]], [ 2.12019, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ 2.12019, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ -0.07666, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RAnklePitch")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ 0.92965, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ -1.02974, [ 3, -0.33333, 0.07746], [ 3, 0.46667, -0.10844]], [ -1.13819, [ 3, -0.46667, 0.02925], [ 3, 0.36667, -0.02298]], [ -1.18645, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ -1.18645, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ -0.58901, [ 3, -0.23333, 0.00000], [ 3, 0.36667, 0.00000]], [ -1.18645, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ -1.18645, [ 3, -0.43333, 0.00000], [ 3, 0.36667, 0.00000]], [ 0.08595, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RAnkleRoll")
    times.append([ 1.00000, 2.00000, 3.40000, 4.50000, 5.80000, 6.50000, 7.60000, 8.90000, 10.00000])
    keys.append([ [ 0.18850, [ 3, -0.33333, 0.00000], [ 3, 0.33333, 0.00000]], [ 0.00004, [ 3, -0.33333, 0.00000], [ 3, 0.46667, 0.00000]], [ 0.00618, [ 3, -0.46667, 0.00000], [ 3, 0.36667, 0.00000]], [ -0.00456, [ 3, -0.36667, 0.01074], [ 3, 0.43333, -0.01269]], [ -0.09813, [ 3, -0.43333, 0.00000], [ 3, 0.23333, 0.00000]], [ -0.01376, [ 3, -0.23333, 0.00000], [ 3, 0.36667, 0.00000]], [ -0.09507, [ 3, -0.36667, 0.00000], [ 3, 0.43333, 0.00000]], [ 0.03532, [ 3, -0.43333, -0.02825], [ 3, 0.36667, 0.02390]], [ 0.06140, [ 3, -0.36667, 0.00000], [ 3, 0.00000, 0.00000]]])

    motion = ALProxy("ALMotion")
    motion.stiffnessInterpolation("Body", 1.0, 1.0)
    motion.angleInterpolationBezier(names, times, keys);


def crouch_to_stand():
    names = list()
    times = list()
    keys = list()

    names.append("HeadYaw")
    times.append([ 1.50000])
    keys.append([ [ 0.06745, [ 3, -0.50000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("HeadPitch")
    times.append([ 1.50000])
    keys.append([ [ -0.04146, [ 3, -0.50000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LShoulderPitch")
    times.append([ 1.50000])
    keys.append([ [ 1.58611, [ 3, -0.50000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LShoulderRoll")
    times.append([ 1.50000])
    keys.append([ [ 0.22392, [ 3, -0.50000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LElbowYaw")
    times.append([ 1.50000])
    keys.append([ [ -1.02169, [ 3, -0.50000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LElbowRoll")
    times.append([ 1.50000])
    keys.append([ [ -0.65958, [ 3, -0.50000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LWristYaw")
    times.append([ 1.50000])
    keys.append([ [ -0.75170, [ 3, -0.50000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHand")
    times.append([ 1.50000])
    keys.append([ [ 0.00456, [ 3, -0.50000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RShoulderPitch")
    times.append([ 1.50000])
    keys.append([ [ 1.46808, [ 3, -0.50000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RShoulderRoll")
    times.append([ 1.50000])
    keys.append([ [ -0.14731, [ 3, -0.50000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RElbowYaw")
    times.append([ 1.50000])
    keys.append([ [ 0.90962, [ 3, -0.50000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RElbowRoll")
    times.append([ 1.50000])
    keys.append([ [ 0.37127, [ 3, -0.50000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RWristYaw")
    times.append([ 1.50000])
    keys.append([ [ 1.05535, [ 3, -0.50000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RHand")
    times.append([ 1.50000])
    keys.append([ [ 0.00381, [ 3, -0.50000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHipYawPitch")
    times.append([ 1.50000])
    keys.append([ [ -0.23926, [ 3, -0.50000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHipRoll")
    times.append([ 1.50000])
    keys.append([ [ 0.14884, [ 3, -0.50000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHipPitch")
    times.append([ 1.50000])
    keys.append([ [ 0.21173, [ 3, -0.50000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LKneePitch")
    times.append([ 1.50000])
    keys.append([ [ -0.09055, [ 3, -0.50000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LAnklePitch")
    times.append([ 1.50000])
    keys.append([ [ 0.08126, [ 3, -0.50000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LAnkleRoll")
    times.append([ 1.50000])
    keys.append([ [ -0.13342, [ 3, -0.50000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RHipRoll")
    times.append([ 1.50000])
    keys.append([ [ -0.05825, [ 3, -0.50000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RHipPitch")
    times.append([ 1.50000])
    keys.append([ [ 0.21165, [ 3, -0.50000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RKneePitch")
    times.append([ 1.50000])
    keys.append([ [ -0.07666, [ 3, -0.50000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RAnklePitch")
    times.append([ 1.50000])
    keys.append([ [ 0.07981, [ 3, -0.50000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RAnkleRoll")
    times.append([ 1.50000])
    keys.append([ [ 0.05987, [ 3, -0.50000, 0.00000], [ 3, 0.00000, 0.00000]]])

    motion = ALProxy("ALMotion")
    motion.stiffnessInterpolation("Body", 1.0, 1.0)
    motion.angleInterpolationBezier(names, times, keys);


def sit_to_crouch():
    names = list()
    times = list()
    keys = list()

    names.append("HeadYaw")
    times.append([ 0.60000, 1.12000, 1.56000, 2.20000, 3.00000, 3.76000, 5.04000, 7.20000])
    keys.append([ [ 0.00149, [ 3, -0.20000, 0.00000], [ 3, 0.17333, 0.00000]], [ -0.27925, [ 3, -0.17333, 0.06315], [ 3, 0.14667, -0.05343]], [ -0.34826, [ 3, -0.14667, 0.02607], [ 3, 0.21333, -0.03792]], [ -0.47124, [ 3, -0.21333, 0.02598], [ 3, 0.26667, -0.03247]], [ -0.52360, [ 3, -0.26667, 0.00000], [ 3, 0.25333, 0.00000]], [ -0.28690, [ 3, -0.25333, -0.06385], [ 3, 0.42667, 0.10754]], [ -0.00940, [ 3, -0.42667, 0.00000], [ 3, 0.72000, 0.00000]], [ -0.00940, [ 3, -0.72000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("HeadPitch")
    times.append([ 0.60000, 1.12000, 1.56000, 2.20000, 3.00000, 3.76000, 5.04000, 7.20000])
    keys.append([ [ 0.37119, [ 3, -0.20000, 0.00000], [ 3, 0.17333, 0.00000]], [ 0.36965, [ 3, -0.17333, 0.00153], [ 3, 0.14667, -0.00130]], [ 0.22689, [ 3, -0.14667, 0.00000], [ 3, 0.21333, 0.00000]], [ 0.27576, [ 3, -0.21333, 0.00000], [ 3, 0.26667, 0.00000]], [ 0.15708, [ 3, -0.26667, 0.00000], [ 3, 0.25333, 0.00000]], [ 0.34971, [ 3, -0.25333, -0.01731], [ 3, 0.42667, 0.02915]], [ 0.37886, [ 3, -0.42667, 0.00000], [ 3, 0.72000, 0.00000]], [ 0.37886, [ 3, -0.72000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LShoulderPitch")
    times.append([ 0.60000, 1.12000, 1.56000, 2.20000, 2.56000, 3.00000, 3.76000, 4.36000, 5.04000, 7.20000])
    keys.append([ [ 0.49567, [ 3, -0.20000, 0.00000], [ 3, 0.17333, 0.00000]], [ 0.57421, [ 3, -0.17333, -0.02363], [ 3, 0.14667, 0.02000]], [ 0.62657, [ 3, -0.14667, -0.05236], [ 3, 0.21333, 0.07616]], [ 1.01393, [ 3, -0.21333, 0.00000], [ 3, 0.12000, 0.00000]], [ 0.65101, [ 3, -0.12000, 0.00000], [ 3, 0.14667, 0.00000]], [ 0.75162, [ 3, -0.14667, -0.05738], [ 3, 0.25333, 0.09912]], [ 1.12050, [ 3, -0.25333, -0.06632], [ 3, 0.20000, 0.05236]], [ 1.17286, [ 3, -0.20000, -0.04500], [ 3, 0.22667, 0.05100]], [ 1.40848, [ 3, -0.22667, 0.00000], [ 3, 0.72000, 0.00000]], [ 1.06814, [ 3, -0.72000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LShoulderRoll")
    times.append([ 0.60000, 0.84000, 1.12000, 1.56000, 2.20000, 2.56000, 3.00000, 3.76000, 4.36000, 5.04000, 7.20000])
    keys.append([ [ 0.24386, [ 3, -0.20000, 0.00000], [ 3, 0.08000, 0.00000]], [ 0.49393, [ 3, -0.08000, 0.00000], [ 3, 0.09333, 0.00000]], [ 0.41567, [ 3, -0.09333, 0.00000], [ 3, 0.14667, 0.00000]], [ 0.50964, [ 3, -0.14667, -0.04594], [ 3, 0.21333, 0.06683]], [ 0.75398, [ 3, -0.21333, 0.00000], [ 3, 0.12000, 0.00000]], [ 0.61087, [ 3, -0.12000, 0.03648], [ 3, 0.14667, -0.04459]], [ 0.51078, [ 3, -0.14667, 0.06529], [ 3, 0.25333, -0.11278]], [ 0.07666, [ 3, -0.25333, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.15489, [ 3, -0.20000, -0.07823], [ 3, 0.22667, 0.08867]], [ 0.68872, [ 3, -0.22667, 0.00000], [ 3, 0.72000, 0.00000]], [ 0.59208, [ 3, -0.72000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LElbowYaw")
    times.append([ 0.60000, 1.12000, 1.56000, 2.20000, 2.56000, 3.00000, 3.76000, 4.36000, 5.04000, 7.20000])
    keys.append([ [ -0.54461, [ 3, -0.20000, 0.00000], [ 3, 0.17333, 0.00000]], [ -0.71182, [ 3, -0.17333, 0.02901], [ 3, 0.14667, -0.02454]], [ -0.73636, [ 3, -0.14667, 0.01437], [ 3, 0.21333, -0.02091]], [ -0.81766, [ 3, -0.21333, 0.00000], [ 3, 0.12000, 0.00000]], [ -0.29764, [ 3, -0.12000, -0.09825], [ 3, 0.14667, 0.12009]], [ -0.16265, [ 3, -0.14667, 0.00000], [ 3, 0.25333, 0.00000]], [ -0.86982, [ 3, -0.25333, 0.15859], [ 3, 0.20000, -0.12520]], [ -1.01402, [ 3, -0.20000, 0.00000], [ 3, 0.22667, 0.00000]], [ -0.92044, [ 3, -0.22667, -0.05179], [ 3, 0.72000, 0.16451]], [ -0.36513, [ 3, -0.72000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LElbowRoll")
    times.append([ 0.60000, 1.12000, 1.56000, 2.20000, 2.56000, 3.00000, 3.76000, 4.36000, 5.04000, 7.20000])
    keys.append([ [ -1.06302, [ 3, -0.20000, 0.00000], [ 3, 0.17333, 0.00000]], [ -0.93416, [ 3, -0.17333, -0.04875], [ 3, 0.14667, 0.04125]], [ -0.79304, [ 3, -0.14667, 0.00000], [ 3, 0.21333, 0.00000]], [ -0.94183, [ 3, -0.21333, 0.05858], [ 3, 0.12000, -0.03295]], [ -1.06762, [ 3, -0.12000, 0.00000], [ 3, 0.14667, 0.00000]], [ -0.62430, [ 3, -0.14667, 0.00000], [ 3, 0.25333, 0.00000]], [ -0.89121, [ 3, -0.25333, 0.00000], [ 3, 0.20000, 0.00000]], [ -0.85133, [ 3, -0.20000, 0.00000], [ 3, 0.22667, 0.00000]], [ -1.23636, [ 3, -0.22667, 0.00000], [ 3, 0.72000, 0.00000]], [ -1.07836, [ 3, -0.72000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LWristYaw")
    times.append([ 0.60000, 1.12000, 1.56000])
    keys.append([ [ -0.74250, [ 3, -0.20000, 0.00000], [ 3, 0.17333, 0.00000]], [ -0.77164, [ 3, -0.17333, 0.00000], [ 3, 0.14667, 0.00000]], [ -0.73636, [ 3, -0.14667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHand")
    times.append([ 0.60000, 1.12000, 1.56000])
    keys.append([ [ 0.00032, [ 3, -0.20000, 0.00000], [ 3, 0.17333, 0.00000]], [ 0.00116, [ 3, -0.17333, -0.00011], [ 3, 0.14667, 0.00010]], [ 0.00126, [ 3, -0.14667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RShoulderPitch")
    times.append([ 0.60000, 0.84000, 1.12000, 1.56000, 2.20000, 3.00000, 3.40000, 3.76000, 4.36000, 5.04000, 7.20000])
    keys.append([ [ 0.56609, [ 3, -0.20000, 0.00000], [ 3, 0.08000, 0.00000]], [ 0.73304, [ 3, -0.08000, -0.11706], [ 3, 0.09333, 0.13657]], [ 1.32695, [ 3, -0.09333, -0.15991], [ 3, 0.14667, 0.25129]], [ 1.96664, [ 3, -0.14667, -0.08179], [ 3, 0.21333, 0.11896]], [ 2.08560, [ 3, -0.21333, 0.00000], [ 3, 0.26667, 0.00000]], [ 2.06787, [ 3, -0.26667, 0.00000], [ 3, 0.13333, 0.00000]], [ 2.08560, [ 3, -0.13333, 0.00000], [ 3, 0.12000, 0.00000]], [ 2.02799, [ 3, -0.12000, 0.05761], [ 3, 0.20000, -0.09602]], [ 1.61381, [ 3, -0.20000, 0.09444], [ 3, 0.22667, -0.10703]], [ 1.42359, [ 3, -0.22667, 0.03171], [ 3, 0.72000, -0.10073]], [ 1.21650, [ 3, -0.72000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RShoulderRoll")
    times.append([ 0.60000, 1.12000, 1.56000, 1.92000, 2.20000, 3.00000, 3.40000, 3.76000, 4.36000, 5.04000, 7.20000])
    keys.append([ [ -0.35133, [ 3, -0.20000, 0.00000], [ 3, 0.17333, 0.00000]], [ -0.67500, [ 3, -0.17333, 0.00000], [ 3, 0.14667, 0.00000]], [ -0.63819, [ 3, -0.14667, -0.00856], [ 3, 0.12000, 0.00700]], [ -0.62832, [ 3, -0.12000, -0.00987], [ 3, 0.09333, 0.00768]], [ -0.00873, [ 3, -0.09333, 0.00000], [ 3, 0.26667, 0.00000]], [ -0.50933, [ 3, -0.26667, 0.08897], [ 3, 0.13333, -0.04448]], [ -0.55382, [ 3, -0.13333, 0.00969], [ 3, 0.12000, -0.00872]], [ -0.56455, [ 3, -0.12000, 0.01074], [ 3, 0.20000, -0.01790]], [ -0.66580, [ 3, -0.20000, 0.00000], [ 3, 0.22667, 0.00000]], [ -0.57683, [ 3, -0.22667, -0.03220], [ 3, 0.72000, 0.10228]], [ -0.26236, [ 3, -0.72000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RElbowYaw")
    times.append([ 0.60000, 1.12000, 1.56000, 2.20000, 3.00000, 3.40000, 3.76000, 4.36000, 5.04000, 7.20000])
    keys.append([ [ 0.48010, [ 3, -0.20000, 0.00000], [ 3, 0.17333, 0.00000]], [ 1.82235, [ 3, -0.17333, -0.27376], [ 3, 0.14667, 0.23164]], [ 2.05399, [ 3, -0.14667, 0.00000], [ 3, 0.21333, 0.00000]], [ -0.08727, [ 3, -0.21333, 0.00000], [ 3, 0.26667, 0.00000]], [ -0.08134, [ 3, -0.26667, -0.00234], [ 3, 0.13333, 0.00117]], [ -0.07674, [ 3, -0.13333, -0.00269], [ 3, 0.12000, 0.00242]], [ -0.06600, [ 3, -0.12000, -0.01074], [ 3, 0.20000, 0.01790]], [ 0.31596, [ 3, -0.20000, -0.27276], [ 3, 0.22667, 0.30913]], [ 1.67969, [ 3, -0.22667, 0.00000], [ 3, 0.72000, 0.00000]], [ 0.96638, [ 3, -0.72000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RElbowRoll")
    times.append([ 0.60000, 1.12000, 1.56000, 1.92000, 2.20000, 3.00000, 3.40000, 3.76000, 4.36000, 5.04000, 7.20000])
    keys.append([ [ 1.21650, [ 3, -0.20000, 0.00000], [ 3, 0.17333, 0.00000]], [ 1.02936, [ 3, -0.17333, 0.09666], [ 3, 0.14667, -0.08179]], [ 0.68114, [ 3, -0.14667, 0.00000], [ 3, 0.12000, 0.00000]], [ 0.85521, [ 3, -0.12000, 0.00000], [ 3, 0.09333, 0.00000]], [ 0.00873, [ 3, -0.09333, 0.00000], [ 3, 0.26667, 0.00000]], [ 0.07981, [ 3, -0.26667, 0.00000], [ 3, 0.13333, 0.00000]], [ 0.05987, [ 3, -0.13333, 0.01103], [ 3, 0.12000, -0.00993]], [ 0.01692, [ 3, -0.12000, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.33292, [ 3, -0.20000, -0.07502], [ 3, 0.22667, 0.08503]], [ 0.49706, [ 3, -0.22667, -0.05105], [ 3, 0.72000, 0.16217]], [ 0.97260, [ 3, -0.72000, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RWristYaw")
    times.append([ 0.60000, 1.12000, 1.56000])
    keys.append([ [ 1.07529, [ 3, -0.20000, 0.00000], [ 3, 0.17333, 0.00000]], [ 1.09523, [ 3, -0.17333, 0.00000], [ 3, 0.14667, 0.00000]], [ 1.08756, [ 3, -0.14667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RHand")
    times.append([ 0.60000, 1.12000, 1.56000])
    keys.append([ [ 0.00032, [ 3, -0.20000, 0.00000], [ 3, 0.17333, 0.00000]], [ 0.00221, [ 3, -0.17333, -0.00028], [ 3, 0.14667, 0.00023]], [ 0.00244, [ 3, -0.14667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHipYawPitch")
    times.append([ 0.60000, 1.12000, 1.56000, 3.00000, 3.28000, 3.76000, 5.04000, 5.80000, 7.20000])
    keys.append([ [ -0.67645, [ 3, -0.20000, 0.00000], [ 3, 0.17333, 0.00000]], [ -0.65173, [ 3, -0.17333, 0.00000], [ 3, 0.14667, 0.00000]], [ -0.75144, [ 3, -0.14667, 0.00000], [ 3, 0.48000, 0.00000]], [ -0.49909, [ 3, -0.48000, 0.00000], [ 3, 0.09333, 0.00000]], [ -0.64559, [ 3, -0.09333, 0.04420], [ 3, 0.16000, -0.07576]], [ -0.85897, [ 3, -0.16000, 0.00000], [ 3, 0.42667, 0.00000]], [ -0.43408, [ 3, -0.42667, -0.12063], [ 3, 0.25333, 0.07162]], [ -0.28221, [ 3, -0.25333, -0.03059], [ 3, 0.46667, 0.05634]], [ -0.17330, [ 3, -0.46667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHipRoll")
    times.append([ 0.60000, 1.12000, 1.56000, 2.20000, 3.00000, 3.28000, 3.76000, 5.04000, 5.80000, 7.20000])
    keys.append([ [ 0.13964, [ 3, -0.20000, 0.00000], [ 3, 0.17333, 0.00000]], [ 0.14501, [ 3, -0.17333, -0.00152], [ 3, 0.14667, 0.00129]], [ 0.14808, [ 3, -0.14667, -0.00307], [ 3, 0.21333, 0.00446]], [ 0.54105, [ 3, -0.21333, 0.00000], [ 3, 0.26667, 0.00000]], [ 0.15498, [ 3, -0.26667, 0.13983], [ 3, 0.09333, -0.04894]], [ -0.02526, [ 3, -0.09333, 0.04047], [ 3, 0.16000, -0.06937]], [ -0.17453, [ 3, -0.16000, 0.00000], [ 3, 0.42667, 0.00000]], [ 0.18259, [ 3, -0.42667, -0.12859], [ 3, 0.25333, 0.07635]], [ 0.44030, [ 3, -0.25333, 0.00000], [ 3, 0.46667, 0.00000]], [ 0.13043, [ 3, -0.46667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LHipPitch")
    times.append([ 0.60000, 1.12000, 1.56000, 2.20000, 3.00000, 3.28000, 3.76000, 4.36000, 5.04000, 5.80000, 7.20000])
    keys.append([ [ -1.57077, [ 3, -0.20000, 0.00000], [ 3, 0.17333, 0.00000]], [ -1.57080, [ 3, -0.17333, 0.00000], [ 3, 0.14667, 0.00000]], [ -1.57080, [ 3, -0.14667, 0.00000], [ 3, 0.21333, 0.00000]], [ -1.57080, [ 3, -0.21333, 0.00000], [ 3, 0.26667, 0.00000]], [ -0.85706, [ 3, -0.26667, -0.24072], [ 3, 0.09333, 0.08425]], [ -0.59586, [ 3, -0.09333, -0.09882], [ 3, 0.16000, 0.16941]], [ -0.05236, [ 3, -0.16000, 0.00000], [ 3, 0.20000, 0.00000]], [ -0.40143, [ 3, -0.20000, 0.09967], [ 3, 0.22667, -0.11296]], [ -0.69026, [ 3, -0.22667, 0.05561], [ 3, 0.25333, -0.06215]], [ -0.75469, [ 3, -0.25333, 0.00000], [ 3, 0.46667, 0.00000]], [ -0.73014, [ 3, -0.46667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LKneePitch")
    times.append([ 0.60000, 1.12000, 1.56000, 2.20000, 3.00000, 3.28000, 3.76000, 5.04000, 5.80000, 7.20000])
    keys.append([ [ 0.72401, [ 3, -0.20000, 0.00000], [ 3, 0.17333, 0.00000]], [ 0.95923, [ 3, -0.17333, -0.08319], [ 3, 0.14667, 0.07039]], [ 1.18473, [ 3, -0.14667, -0.09727], [ 3, 0.21333, 0.14149]], [ 1.67552, [ 3, -0.21333, -0.13745], [ 3, 0.26667, 0.17182]], [ 2.11255, [ 3, -0.26667, 0.00000], [ 3, 0.09333, 0.00000]], [ 2.11255, [ 3, -0.09333, 0.00000], [ 3, 0.16000, 0.00000]], [ 2.11255, [ 3, -0.16000, 0.00000], [ 3, 0.42667, 0.00000]], [ 2.00182, [ 3, -0.42667, 0.00000], [ 3, 0.25333, 0.00000]], [ 2.11253, [ 3, -0.25333, 0.00000], [ 3, 0.46667, 0.00000]], [ 1.61833, [ 3, -0.46667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LAnklePitch")
    times.append([ 0.60000, 1.12000, 1.56000, 2.20000, 3.00000, 3.28000, 3.76000, 5.04000, 5.80000, 7.20000])
    keys.append([ [ 0.77616, [ 3, -0.20000, 0.00000], [ 3, 0.17333, 0.00000]], [ 0.75542, [ 3, -0.17333, 0.00000], [ 3, 0.14667, 0.00000]], [ 0.75542, [ 3, -0.14667, 0.00000], [ 3, 0.21333, 0.00000]], [ 0.66323, [ 3, -0.21333, 0.09219], [ 3, 0.26667, -0.11524]], [ -0.45379, [ 3, -0.26667, 0.33183], [ 3, 0.09333, -0.11614]], [ -0.68068, [ 3, -0.09333, 0.07931], [ 3, 0.16000, -0.13595]], [ -1.09956, [ 3, -0.16000, 0.03371], [ 3, 0.42667, -0.08988]], [ -1.18944, [ 3, -0.42667, 0.00000], [ 3, 0.25333, 0.00000]], [ -1.18944, [ 3, -0.25333, 0.00000], [ 3, 0.46667, 0.00000]], [ -0.73636, [ 3, -0.46667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("LAnkleRoll")
    times.append([ 0.60000, 1.12000, 1.56000, 2.20000, 3.00000, 3.28000, 3.76000, 5.04000, 5.80000, 7.20000])
    keys.append([ [ -0.05058, [ 3, -0.20000, 0.00000], [ 3, 0.17333, 0.00000]], [ -0.00550, [ 3, -0.17333, -0.01396], [ 3, 0.14667, 0.01181]], [ 0.02671, [ 3, -0.14667, 0.00000], [ 3, 0.21333, 0.00000]], [ -0.17453, [ 3, -0.21333, 0.06258], [ 3, 0.26667, -0.07823]], [ -0.39573, [ 3, -0.26667, 0.00000], [ 3, 0.09333, 0.00000]], [ -0.08681, [ 3, -0.09333, 0.00000], [ 3, 0.16000, 0.00000]], [ -0.10379, [ 3, -0.16000, 0.00000], [ 3, 0.42667, 0.00000]], [ 0.01078, [ 3, -0.42667, 0.00000], [ 3, 0.25333, 0.00000]], [ -0.01683, [ 3, -0.25333, 0.01169], [ 3, 0.46667, -0.02154]], [ -0.08893, [ 3, -0.46667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RHipRoll")
    times.append([ 0.60000, 1.12000, 1.56000, 2.20000, 3.00000, 3.28000, 3.76000, 5.04000, 5.80000, 7.20000])
    keys.append([ [ -0.14415, [ 3, -0.20000, 0.00000], [ 3, 0.17333, 0.00000]], [ -0.13336, [ 3, -0.17333, 0.00000], [ 3, 0.14667, 0.00000]], [ -0.21006, [ 3, -0.14667, 0.05537], [ 3, 0.21333, -0.08053]], [ -0.54105, [ 3, -0.21333, 0.01390], [ 3, 0.26667, -0.01737]], [ -0.55842, [ 3, -0.26667, 0.01737], [ 3, 0.09333, -0.00608]], [ -0.73468, [ 3, -0.09333, 0.00000], [ 3, 0.16000, 0.00000]], [ -0.61087, [ 3, -0.16000, -0.04364], [ 3, 0.42667, 0.11638]], [ -0.25460, [ 3, -0.42667, -0.11077], [ 3, 0.25333, 0.06577]], [ -0.08126, [ 3, -0.25333, -0.00333], [ 3, 0.46667, 0.00614]], [ -0.07512, [ 3, -0.46667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RHipPitch")
    times.append([ 0.60000, 1.12000, 1.56000, 2.20000, 3.00000, 3.28000, 3.76000, 5.04000, 5.80000, 7.20000])
    keys.append([ [ -1.55245, [ 3, -0.20000, 0.00000], [ 3, 0.17333, 0.00000]], [ -1.57080, [ 3, -0.17333, 0.00000], [ 3, 0.14667, 0.00000]], [ -1.57080, [ 3, -0.14667, 0.00000], [ 3, 0.21333, 0.00000]], [ -1.57080, [ 3, -0.21333, 0.00000], [ 3, 0.26667, 0.00000]], [ -1.52484, [ 3, -0.26667, 0.00000], [ 3, 0.09333, 0.00000]], [ -1.57080, [ 3, -0.09333, 0.00000], [ 3, 0.16000, 0.00000]], [ -1.55965, [ 3, -0.16000, -0.01115], [ 3, 0.42667, 0.02973]], [ -0.84988, [ 3, -0.42667, -0.18438], [ 3, 0.25333, 0.10948]], [ -0.67807, [ 3, -0.25333, -0.01582], [ 3, 0.46667, 0.02915]], [ -0.64892, [ 3, -0.46667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RKneePitch")
    times.append([ 0.60000, 1.12000, 1.56000, 2.20000, 3.00000, 3.28000, 3.76000, 5.04000, 5.80000, 7.20000])
    keys.append([ [ 0.84374, [ 3, -0.20000, 0.00000], [ 3, 0.17333, 0.00000]], [ 0.95426, [ 3, -0.17333, -0.06704], [ 3, 0.14667, 0.05673]], [ 1.21504, [ 3, -0.14667, -0.09795], [ 3, 0.21333, 0.14247]], [ 1.67552, [ 3, -0.21333, 0.00000], [ 3, 0.26667, 0.00000]], [ 1.22173, [ 3, -0.26667, 0.00000], [ 3, 0.09333, 0.00000]], [ 1.27333, [ 3, -0.09333, 0.00000], [ 3, 0.16000, 0.00000]], [ 1.09956, [ 3, -0.16000, 0.06165], [ 3, 0.42667, -0.16439]], [ 0.59523, [ 3, -0.42667, 0.00000], [ 3, 0.25333, 0.00000]], [ 1.44047, [ 3, -0.25333, -0.07578], [ 3, 0.46667, 0.13959]], [ 1.58006, [ 3, -0.46667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RAnklePitch")
    times.append([ 0.60000, 1.12000, 1.56000, 2.20000, 3.00000, 3.28000, 3.76000, 4.36000, 4.72000, 5.04000, 5.80000, 7.20000])
    keys.append([ [ 0.78545, [ 3, -0.20000, 0.00000], [ 3, 0.17333, 0.00000]], [ 0.76027, [ 3, -0.17333, 0.00000], [ 3, 0.14667, 0.00000]], [ 0.76027, [ 3, -0.14667, 0.00000], [ 3, 0.21333, 0.00000]], [ 0.66323, [ 3, -0.21333, 0.00000], [ 3, 0.26667, 0.00000]], [ 0.78540, [ 3, -0.26667, 0.00000], [ 3, 0.09333, 0.00000]], [ 0.66976, [ 3, -0.09333, 0.00000], [ 3, 0.16000, 0.00000]], [ 0.78540, [ 3, -0.16000, 0.00000], [ 3, 0.20000, 0.00000]], [ 0.78540, [ 3, -0.20000, 0.00000], [ 3, 0.12000, 0.00000]], [ 0.54105, [ 3, -0.12000, 0.05359], [ 3, 0.10667, -0.04764]], [ 0.48172, [ 3, -0.10667, 0.05933], [ 3, 0.25333, -0.14092]], [ -0.36965, [ 3, -0.25333, 0.14897], [ 3, 0.46667, -0.27442]], [ -0.78843, [ 3, -0.46667, 0.00000], [ 3, 0.00000, 0.00000]]])

    names.append("RAnkleRoll")
    times.append([ 0.60000, 1.12000, 1.56000, 2.20000, 3.00000, 3.28000, 3.52000, 3.76000, 4.36000, 4.72000, 5.04000, 5.80000, 7.20000])
    keys.append([ [ 0.04913, [ 3, -0.20000, 0.00000], [ 3, 0.17333, 0.00000]], [ 0.00073, [ 3, -0.17333, 0.00181], [ 3, 0.14667, -0.00153]], [ -0.00081, [ 3, -0.14667, 0.00000], [ 3, 0.21333, 0.00000]], [ 0.17453, [ 3, -0.21333, 0.00000], [ 3, 0.26667, 0.00000]], [ 0.00929, [ 3, -0.26667, 0.00000], [ 3, 0.09333, 0.00000]], [ 0.07436, [ 3, -0.09333, 0.00000], [ 3, 0.08000, 0.00000]], [ -0.15708, [ 3, -0.08000, 0.00000], [ 3, 0.08000, 0.00000]], [ -0.10472, [ 3, -0.08000, -0.03823], [ 3, 0.20000, 0.09558]], [ 0.24435, [ 3, -0.20000, -0.09454], [ 3, 0.12000, 0.05672]], [ 0.34907, [ 3, -0.12000, -0.03458], [ 3, 0.10667, 0.03074]], [ 0.44030, [ 3, -0.10667, 0.00000], [ 3, 0.25333, 0.00000]], [ 0.42343, [ 3, -0.25333, 0.01687], [ 3, 0.46667, -0.03108]], [ 0.09055, [ 3, -0.46667, 0.00000], [ 3, 0.00000, 0.00000]]])

    motion = ALProxy("ALMotion")
    motion.stiffnessInterpolation("Body", 1.0, 1.0)
    motion.angleInterpolationBezier(names, times, keys);


class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.first_time = False

    def onUnload(self):
        pass

    def onInput_onStop(self):
        self.onUnload()

    def get_current_pose(self):
        # Get current position
        robot_pose = ALProxy("ALRobotPose")
        beginning = time.time()
        pose = ["Unknown", 0.]
        must_stop_robot_pose = False
        while not must_stop_robot_pose:
            pose = robot_pose.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if pose[1] > 0.5 or time.time() - beginning > 1.0:
                must_stop_robot_pose = True
            if not must_stop_robot_pose:
                time.sleep(0.1)
        return pose[0]

    def please_sit_down(self, pose):
        if pose in ["Unknown", "HeadBack"]:
            return
        if pose == "Sit":
            return
        if pose == "Back":
            back_to_sit()
            return
        if pose == "Crouch" or pose == "Stand":
            crouch_to_sit()
            return
        if pose == "Knee" or pose == "Frog" or pose == "Belly":
            belly_to_crouch()
            pose = self.get_current_pose()
            if pose == "Crouch":
                crouch_to_sit()
            return
        if pose == "Left" or pose == "Right":
            side_to_belly()
            pose = self.get_current_pose()
            if pose == "Crouch":
                belly_to_crouch()
                if pose == "Belly":
                    crouch_to_sit()

    def please_stand_up(self, pose):
        if pose in ["Unknown", "HeadBack"]:
            return
        if pose == "Stand":
            return
        if pose == "Back":
            back_to_stand()
            return
        if pose == "Crouch":
            crouch_to_stand()
            return
        if pose == "Sit":
            sit_to_crouch()
            pose = self.get_current_pose()
            if pose == "Crouch" or pose == "Stand":
                crouch_to_stand()
                return
        if pose == "Knee" or pose == "Frog" or pose == "Belly":
            belly_to_stand()
            return
        if pose == "Left" or pose == "Right":
            side_to_belly()
            pose = self.get_current_pose()
            if pose == "Back":
                crouch_to_stand()
            elif pose == "Knee" or pose == "Frog" or pose == "Belly":
                belly_to_stand()

    def onInput_sitdown(self):
        self.retries = self.getParameter("Maximum of tries")
        # Avoid box reintrance
        if self.first_time:
            return
        self.first_time = True
        for i in xrange(self.retries):
            pose = self.get_current_pose()
            self.please_sit_down(pose)
            pose = self.get_current_pose()
            if pose == "Sit":
                self.first_time = False
                return self.success()
        self.first_time = False
        return self.failure()

    def onInput_standup(self):
        self.retries = self.getParameter("Maximum of tries")
        # Avoid box reintrance
        if self.first_time:
            return
        self.first_time = True
        for i in xrange(self.retries):
            pose = self.get_current_pose()
            self.please_stand_up(pose)
            pose = self.get_current_pose()
            if pose == "Stand":
                self.first_time = False
                return self.success()
        self.first_time = False
        return self.failure()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="standup" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="sitdown" type="1" type_size="1" nature="2" inner="0" tooltip="" id="3" />
                                                <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="" id="5" />
                                                <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="1" max="10" tooltip="" id="6" />
                                                <Resource name="All motors" type="Lock" timeout="5" />
                                            </Box>
                                            <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="3" />
                                            <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="4" />
                                            <Link inputowner="7" indexofinput="2" outputowner="4" indexofoutput="4" />
                                            <Link inputowner="5" indexofinput="2" outputowner="3" indexofoutput="5" />
                                            <Link inputowner="5" indexofinput="2" outputowner="3" indexofoutput="6" />
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="5" indexofinput="2" outputowner="8" indexofoutput="4" />
                                            <Link inputowner="8" indexofinput="2" outputowner="3" indexofoutput="3" />
                                            <Link inputowner="4" indexofinput="2" outputowner="8" indexofoutput="5" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="Safety" index="35">
                                        <Diagram scale="62.9961">
                                            <Box name="Say" id="8" tooltip="Say some text. Note that you must open the box to enter the text." x="292" y="22">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="Say Text" id="2" tooltip="Say the text set in parameters." x="422" y="65">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                </Box>
                                                                <Box name="Localized Text" id="5" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                    <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 安全模式，如果你想让我独立自主运行闹生命，请拍一下我的头部。 ",
			"English" : " Safety mode, pat me on the head to go back to the solitary life ",
			"French" : " Sécurité, tape sur ma tête pour relancer la vie autonome ",
			"German" : " Sicherheitsmodus, alle Motoren entlastet. Berühr meinen Kopf, wenn ich wieder die Kontrolle übernehmen soll. ",
			"Italian" : " Ciao ",
			"Japanese" : " 休憩に入ります。頭の軽く叩いてくれれば、休憩から戻ります。 ",
			"Korean" : " 안녕하세요  ",
			"Portuguese" : "  ",
			"Brazilian" : "  ",
			"Spanish" : " Hola ",
			"Arabic" : "  ",
			"Polish" : "  ",
			"Czech" : "  ",
			"Dutch" : "  ",
			"Danish" : "  ",
			"Finnish" : " Turvallisuusmoodi. Kosketa päätäni sitten kun haluat että palaan normaaliin moodiin. ",
			"Swedish" : "  ",
			"Russian" : "  ",
			"Turkish" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <chinese>安全模式，如果你想让我独立自主运行闹生命，请拍一下我的头部。</chinese>
                                                                        <english>Safety mode, pat me on the head to go back to the solitary life</english>
                                                                        <french>Sécurité, tape sur ma tête pour relancer la vie autonome</french>
                                                                        <german>Sicherheitsmodus, alle Motoren entlastet. Berühr meinen Kopf, wenn ich wieder die Kontrolle übernehmen soll.</german>
                                                                        <italian>Ciao</italian>
                                                                        <japanese>休憩に入ります。頭の軽く叩いてくれれば、休憩から戻ります。</japanese>
                                                                        <korean>안녕하세요 </korean>
                                                                        <portuguese></portuguese>
                                                                        <brazilian></brazilian>
                                                                        <spanish>Hola</spanish>
                                                                        <arabic></arabic>
                                                                        <polish></polish>
                                                                        <czech></czech>
                                                                        <dutch></dutch>
                                                                        <danish></danish>
                                                                        <finnish>Turvallisuusmoodi. Kosketa päätäni sitten kun haluat että palaan normaaliin moodiin.</finnish>
                                                                        <swedish></swedish>
                                                                        <russian></russian>
                                                                        <turkish></turkish>
                                                                        <language>15</language>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                </Box>
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Box name="GotoInit" id="1" tooltip="Jump to the frame name set in parameters and stop the parent timeline.&#x0A;&#x0A;!!Warning!! This box does not stop the behavior! It is only the timeline which will&#x0A;stop playing, the keyframes and boxes will still be running." x="439" y="150">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onInput_onGo(self):
        self.gotoAndStopParent(self.getParameter("Frame name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="Init" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                            </Box>
                                            <Box name="HeadTap" id="15" tooltip="Enter tooltip here" x="144" y="149">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Input name="FrontTactilTouched" type="0" type_size="1" nature="4" stm_value_name="FrontTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                                                <Input name="RearTactilTouched" type="0" type_size="1" nature="4" stm_value_name="RearTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" />
                                                <Input name="MiddleTactilTouched" type="0" type_size="1" nature="4" stm_value_name="MiddleTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="6" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="7" />
                                                <Output name="stopApps" type="2" type_size="1" nature="2" inner="0" tooltip="" id="8" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="DelayCompute" id="2" tooltip="Enter tooltip here" x="449" y="73">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.first_tick = -float("inf")

        self.max_delta = float(self.getParameter("delay_max") -
                                        self.getParameter("delay_min"))

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_start(self):
        #~ self.accepted() #~ activate output of the box
        self.first_tick = time.time()

    def onInput_end(self):
        delta = time.time() - self.first_tick

        if (delta > self.getParameter("delay_min") and
            delta <= self.getParameter("delay_max")):
            self.accepted(delta / self.max_delta)]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="start" type="1" type_size="1" nature="1" inner="0" tooltip="" id="2" />
                                                                    <Input name="end" type="1" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                                    <Output name="accepted" type="2" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                    <Parameter name="delay_min" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="20" tooltip="The delay (in second) minimal to accept the event" id="5" />
                                                                    <Parameter name="delay_max" inherits_from_parent="0" content_type="2" value="10" default_value="0" min="0" max="20" tooltip="The delay (in second) maximal to accept the event" id="6" />
                                                                </Box>
                                                                <Box name="PressDetection" id="1" tooltip="Enter tooltip here" x="235" y="71">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    NONE = 0
    PRESSED = 1

    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        self.states =  [(False, 0), (False, 0), (False, 0)]

        self.state = self.NONE
        self.states_len = len(self.states)

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def onInput_front(self, p):
        self.states_compute(0, p)

    def onInput_rear(self, p):
        self.states_compute(1, p)

    def onInput_middle(self, p):
        self.states_compute(2, p)

    def states_compute(self, id, value):
        """
        Call events corresponding to input modifications
        """
        pressed = value == 1
        self.states[id] = (pressed, time.time())

        #How many states are True
        count = 0
        for s in self.states:
            if s[0]:
                count += 1

        # All states are True and current is None:
        if count == self.states_len and self.state == self.NONE:
            mean = reduce(lambda x, y: x + y[1], self.states, 0) / float(self.states_len)
            max_dev = reduce(lambda x, y : max(x, abs(y[1] - mean)), self.states, 0)

            self.log(mean)
            self.log(max_dev)

            if max_dev < 0.1:
                self.state = self.PRESSED
                self.pressed()
        elif count == 0 and self.state == self.PRESSED:
            self.state = self.NONE
            self.released()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Input name="front" type="2" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                                    <Input name="rear" type="2" type_size="1" nature="1" inner="0" tooltip="" id="5" />
                                                                    <Input name="middle" type="2" type_size="1" nature="1" inner="0" tooltip="" id="6" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="7" />
                                                                    <Output name="pressed" type="1" type_size="1" nature="2" inner="0" tooltip="" id="8" />
                                                                    <Output name="released" type="1" type_size="1" nature="2" inner="0" tooltip="" id="9" />
                                                                </Box>
                                                                <Link inputowner="0" indexofinput="8" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="1" indexofinput="4" outputowner="0" indexofoutput="4" />
                                                                <Link inputowner="1" indexofinput="5" outputowner="0" indexofoutput="5" />
                                                                <Link inputowner="1" indexofinput="6" outputowner="0" indexofoutput="6" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="8" />
                                                                <Link inputowner="2" indexofinput="3" outputowner="1" indexofoutput="9" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Box name="Popup" id="25" tooltip="Play the sound, but NOW!&#x0A;v0.6&#x0A;&#x0A;- use preloading of sound, but sadly, it&apos;s notloaded at init but at onload (so at the loading of a timeline, argghhhh)" x="295" y="148">
                                                <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# PlaySoundWithPreloading
# v0.6
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []
        self.loadedSoundID = self.player.loadFile( ALFrameManager.getBehaviorPath(self.behaviorId) + self.getParameter("Sound File") );


    def onUnload(self):
        try:
            self.player.unloadFile(self.loadedSoundID)
        except:
            #self.log("Could not unload the sound")
            pass
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            id = self.player.post.play(self.loadedSoundID,self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()
# PlaySoundWithPreloading - end
pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="5" />
                                                <Parameter name="Panorama" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="6" />
                                                <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="7" />
                                                <Parameter name="Sound File" inherits_from_parent="0" content_type="4" value="/sounds/popup.wav" default_value="" tooltip="select your sound file from project ressource" id="8" />
                                            </Box>
                                            <Box name="Set Stiffness" id="3" tooltip="Stiffen the motors selected in parameters." x="137" y="25">
                                                <bitmap>media/images/box/movement/stiffness.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def setStiffness(self, stiffness):
        self.bIsRunning = True
        duration = self.getParameter("Duration (s)")
        if(self.getParameter("Head")):
            ALMotion.post.stiffnessInterpolation("Head", stiffness, duration)
        if(self.getParameter("Left arm")):
            ALMotion.post.stiffnessInterpolation("LArm", stiffness, duration)
        if(self.getParameter("Right arm")):
            ALMotion.post.stiffnessInterpolation("RArm", stiffness, duration)
        if(self.getParameter("Left leg")):
            ALMotion.post.stiffnessInterpolation("LLeg", stiffness, duration)
        if(self.getParameter("Right leg")):
            ALMotion.post.stiffnessInterpolation("RLeg", stiffness, duration)
        time.sleep(duration)
        self.bIsRunning = False

    def onInput_onSet(self):
        if( self.bIsRunning ):
            return
        self.setStiffness(self.getParameter("Motors stiffness (%)")/100.)
        self.onReady() #~ activate output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="When this input is stimulated, the stiffness of the selected motors is set to&#x0A;the stiffness parameter value." id="2" />
                                                <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when stiffness has been set." id="3" />
                                                <Parameter name="Head" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the head stiffness?" id="4" />
                                                <Parameter name="Left arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left arm stiffness?" id="5" />
                                                <Parameter name="Right arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right arm stiffness?" id="6" />
                                                <Parameter name="Left leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left leg stiffness?" id="7" />
                                                <Parameter name="Right leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right leg stiffness?" id="8" />
                                                <Parameter name="Motors stiffness (%)" inherits_from_parent="0" content_type="1" value="0" default_value="100" min="0" max="100" tooltip="Stiffness value the motors are set to." id="9" />
                                                <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="0.02" default_value="1" min="0.02" max="10" tooltip="How much time to go to the max/min stiffness in seconds." id="10" />
                                            </Box>
                                            <Link inputowner="15" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="25" indexofinput="2" outputowner="15" indexofoutput="8" />
                                            <Link inputowner="1" indexofinput="2" outputowner="25" indexofoutput="4" />
                                            <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="8" indexofinput="2" outputowner="3" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="SystemMenu" index="47">
                                        <Diagram scale="84.0896">
                                            <Box name="Disable SimpleClick" id="1" tooltip="Enter tooltip here" x="483" y="27">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.sentinel = ALProxy("ALSentinel")

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.sentinel.enableDefaultActionSimpleClick(False)
        self.onStopped()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                            </Box>
                                            <Box name="GotoInit" id="4" tooltip="Jump to the frame name set in parameters and stop the parent timeline.&#x0A;&#x0A;!!Warning!! This box does not stop the behavior! It is only the timeline which will&#x0A;stop playing, the keyframes and boxes will still be running." x="623" y="31">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onInput_onGo(self):
        self.gotoAndStopParent(self.getParameter("Frame name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="Init" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                            </Box>
                                            <Box name="System" id="3" tooltip="Last modification:&#x0A;02/08/2011&#x0A;&#x0A;System menu. Let you:&#x0A;- change the language&#x0A;- get the temperature of the hottest articulation&#x0A;- get the ip adress&#x0A;- get the battery level" x="341" y="27">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        pass

    def onInput_onStart(self):
        self.gotoAndStop(1)

    def onInput_onStop(self):
        self.onUnload()
        self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Input name="FrontTactilTouched" type="0" type_size="1" nature="4" stm_value_name="FrontTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                                                <Input name="MiddleTactilTouched" type="0" type_size="1" nature="4" stm_value_name="MiddleTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" />
                                                <Input name="RearTactilTouched" type="0" type_size="1" nature="4" stm_value_name="RearTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="6" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="7" />
                                                <Timeline enable="1" fps="10" start_frame="0" end_frame="-1" size="300">
                                                    <BehaviorLayer name="menu">
                                                        <BehaviorKeyframe name="Intro" index="1">
                                                            <Diagram scale="84.0896">
                                                                <Box name="Say" id="1" tooltip="Say some text. Note that you must open the box to enter the text." x="179" y="22">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Say Text" id="2" tooltip="Say the text set in parameters." x="422" y="65">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="110" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text" id="5" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 我已经进入系统菜单 ",
			"English" : " You are in the system menu. ",
			"French" : " Tu es dans le menu système. ",
			"German" : " Hallo ",
			"Italian" : " Ciao ",
			"Japanese" : " システムメニューに入りました。 ",
			"Korean" : " 안녕하세요  ",
			"Portuguese" : "  ",
			"Brazilian" : "  ",
			"Spanish" : " Estás en el sistema menudo. ",
			"Arabic" : "  ",
			"Polish" : "  ",
			"Czech" : "  ",
			"Dutch" : "  ",
			"Danish" : "  ",
			"Finnish" : " Olet järjestelmävalikossa. ",
			"Swedish" : "  ",
			"Russian" : "  ",
			"Turkish" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <chinese>我已经进入系统菜单</chinese>
                                                                                            <english>You are in the system menu.</english>
                                                                                            <french>Tu es dans le menu système.</french>
                                                                                            <german>Hallo</german>
                                                                                            <italian>Ciao</italian>
                                                                                            <japanese>システムメニューに入りました。</japanese>
                                                                                            <korean>안녕하세요 </korean>
                                                                                            <portuguese></portuguese>
                                                                                            <brazilian></brazilian>
                                                                                            <spanish>Estás en el sistema menudo.</spanish>
                                                                                            <arabic></arabic>
                                                                                            <polish></polish>
                                                                                            <czech></czech>
                                                                                            <dutch></dutch>
                                                                                            <danish></danish>
                                                                                            <finnish>Olet järjestelmävalikossa.</finnish>
                                                                                            <swedish></swedish>
                                                                                            <russian></russian>
                                                                                            <turkish></turkish>
                                                                                            <language>15</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Eyes LEDs" id="2" tooltip="Set the LED color of NAO&apos;s eyes. Note that you must open the box to enter the color." x="173" y="132">
                                                                    <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                    <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                                                                        <Choice value="Both" />
                                                                        <Choice value="Left" />
                                                                        <Choice value="Right" />
                                                                    </Parameter>
                                                                    <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Eyes LEDs" id="15" tooltip="Set the color of LEDs of robot&apos;s eyes." x="281" y="41">
                                                                                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.ids = []

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_color(self, p):
        if( self.getParameter("Side") == "Left" ):
            sGroup = "LeftFaceLeds"
        elif( self.getParameter("Side") == "Right" ):
            sGroup = "RightFaceLeds"
        else:
            sGroup = "FaceLeds"
        id = ALLeds.post.fadeRGB(sGroup, 256*256*p[0] + 256*p[1] + p[2], self.getParameter("Duration (s)"))
        self.ids.append(id)
        ALLeds.wait(id, 0)
        self.ids.remove(id)
        if( self.ids == [] ):
            self.onDone() # activate output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="color" type="2" type_size="3" nature="2" inner="0" tooltip="Color of robot&apos;s eyes." id="2" />
                                                                                        <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                                        <Parameter name="Side" inherits_from_parent="1" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                                                                                            <Choice value="Both" />
                                                                                            <Choice value="Left" />
                                                                                            <Choice value="Right" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Duration (s)" inherits_from_parent="1" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                                                                                    </Box>
                                                                                    <Box name="Color Edit" id="16" tooltip="Transmit a table of number [R,G,B] correponsding to the selected color." plugin="coloredit_plugin" x="105" y="47">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self):
		self.onStopped([0, 0, 0])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <color>#000000</color>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="To send the color on the output." id="2" />
                                                                                        <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="15" indexofinput="2" outputowner="16" indexofoutput="3" />
                                                                                    <Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="0" indexofinput="3" outputowner="15" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="SetFeetLEDs" id="3" tooltip="Set the intensity of the LEDs of a given group." x="309" y="255">
                                                                    <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onSet(self, p):
        ALLeds.fadeRGB(self.getParameter("LEDs group"), 256*256*p[0] + 256*p[1] + p[2], self.getParameter("Duration (s)"))
        self.onReady() # activate output of the box]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onSet" type="2" type_size="3" nature="1" inner="0" tooltip="When this input is stimulated, the intensity of all the LEDs from the group is&#x0A;set to the intensity parameter value." id="2" />
                                                                    <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when LEDs intensity has been set." id="3" />
                                                                    <Parameter name="LEDs group" inherits_from_parent="0" content_type="3" value="FeetLeds" default_value="EarLeds" custom_choice="1" tooltip="The group of LEDs which intensity is to set." id="4">
                                                                        <Choice value="AllLeds" />
                                                                        <Choice value="BrainLeds" />
                                                                        <Choice value="ChestLeds" />
                                                                        <Choice value="EarLeds" />
                                                                        <Choice value="FaceLeds" />
                                                                        <Choice value="FeetLeds" />
                                                                        <Choice value="LeftEarLeds" />
                                                                        <Choice value="LeftFaceLeds" />
                                                                        <Choice value="LeftFootLeds" />
                                                                        <Choice value="RightEarLeds" />
                                                                        <Choice value="RightFaceLeds" />
                                                                        <Choice value="RightFootLeds" />
                                                                    </Parameter>
                                                                    <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="0.5" default_value="1" min="0" max="60" tooltip="How much time to go to the max/min intensity in seconds." id="5" />
                                                                </Box>
                                                                <Box name="Color Edit" id="5" tooltip="Transmit a table of number [R,G,B] correponsding to the selected color." plugin="coloredit_plugin" x="155" y="253">
                                                                    <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self):
		self.onStopped([0, 0, 0])]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <color>#000000</color>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="To send the color on the output." id="2" />
                                                                    <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                                                                </Box>
                                                                <Box name="gotoStart" id="7" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." x="318" y="23">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        pass

    def onInput_onStart(self):
        name = self.getParameter("frame name")
        self.log("%s -> %s" % (self.boxName, name))
        self.gotoAndStopParent(name)

    def onInput_onStop(self):
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame name" inherits_from_parent="0" content_type="3" value="Start" default_value="" custom_choice="0" tooltip="" id="3" />
                                                                </Box>
                                                                <Box name="Stop" id="4" tooltip="Stop the parent timeline at the current frame index.&#x0A;&#x0A;!!Warning!! This box does not stop the behavior! It is only the timeline which will&#x0A;stop playing, the keyframes and boxes will still be running." x="176" y="372">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onInput_onStop(self):
        self.stopTimelineParent()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="7" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="Start" index="30">
                                                            <Diagram scale="100">
                                                                <Box name="Say" id="1" tooltip="Say some text. Note that you must open the box to enter the text." x="93" y="41">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Say Text" id="2" tooltip="Say the text set in parameters." x="422" y="65">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="110" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text" id="5" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 请选择一个需要的设置 ",
			"English" : " What do you want to setup ? ",
			"French" : " Que veux-tu paramétrer ? ",
			"German" : " Hallo ",
			"Italian" : " Ciao ",
			"Japanese" : " 何を設定したいですか？ ",
			"Korean" : " 안녕하세요  ",
			"Portuguese" : "  ",
			"Brazilian" : "  ",
			"Spanish" : " Selecciona una información. ",
			"Arabic" : "  ",
			"Polish" : "  ",
			"Czech" : "  ",
			"Dutch" : "  ",
			"Danish" : "  ",
			"Finnish" : " Mitä asetuksia haluat muuttaa? ",
			"Swedish" : "  ",
			"Russian" : "  ",
			"Turkish" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <chinese>请选择一个需要的设置</chinese>
                                                                                            <english>What do you want to setup ?</english>
                                                                                            <french>Que veux-tu paramétrer ?</french>
                                                                                            <german>Hallo</german>
                                                                                            <italian>Ciao</italian>
                                                                                            <japanese>何を設定したいですか？</japanese>
                                                                                            <korean>안녕하세요 </korean>
                                                                                            <portuguese></portuguese>
                                                                                            <brazilian></brazilian>
                                                                                            <spanish>Selecciona una información.</spanish>
                                                                                            <arabic></arabic>
                                                                                            <polish></polish>
                                                                                            <czech></czech>
                                                                                            <dutch></dutch>
                                                                                            <danish></danish>
                                                                                            <finnish>Mitä asetuksia haluat muuttaa?</finnish>
                                                                                            <swedish></swedish>
                                                                                            <russian></russian>
                                                                                            <turkish></turkish>
                                                                                            <language>15</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="gotoLanguage" id="3" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." x="579" y="7">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        pass

    def onInput_onStart(self):
        name = self.getParameter("frame name")
        self.log("%s -> %s" % (self.boxName, name))
        self.gotoAndStopParent(name)

    def onInput_onStop(self):
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame name" inherits_from_parent="0" content_type="3" value="Language" default_value="" custom_choice="0" tooltip="" id="3" />
                                                                </Box>
                                                                <Box name="gotoTemp" id="4" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." x="583" y="396">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        pass

    def onInput_onStart(self):
        name = self.getParameter("frame name")
        self.log("%s -> %s" % (self.boxName, name))
        self.gotoAndStopParent(name)

    def onInput_onStop(self):
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame name" inherits_from_parent="0" content_type="3" value="Temperature" default_value="" custom_choice="0" tooltip="" id="3" />
                                                                </Box>
                                                                <Box name="gotoAddress" id="5" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." x="579" y="200">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        pass

    def onInput_onStart(self):
        name = self.getParameter("frame name")
        self.log("%s -> %s" % (self.boxName, name))
        self.gotoAndStopParent(name)

    def onInput_onStop(self):
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame name" inherits_from_parent="0" content_type="3" value="Address" default_value="" custom_choice="0" tooltip="" id="3" />
                                                                </Box>
                                                                <Box name="gotoBattery" id="6" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." x="579" y="295">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        pass

    def onInput_onStart(self):
        name = self.getParameter("frame name")
        self.log("%s -> %s" % (self.boxName, name))
        self.gotoAndStopParent(name)

    def onInput_onStop(self):
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame name" inherits_from_parent="0" content_type="3" value="Battery" default_value="" custom_choice="0" tooltip="" id="3" />
                                                                </Box>
                                                                <Box name="Say" id="7" tooltip="Say some text. Note that you must open the box to enter the text." x="233" y="428">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Say Text" id="2" tooltip="Say the text set in parameters." x="422" y="65">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text" id="5" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你可以使用我的头部传感器来进行设置 ",
			"English" : " You can use my head to choose if you prefer ",
			"French" : " Tu peux utiliser ma tête pour choisir si tu préfères. ",
			"German" : " Hallo ",
			"Italian" : " Ciao ",
			"Japanese" : " 選択することが私の頭を使うことができる ",
			"Korean" : " 안녕하세요  ",
			"Portuguese" : " Olá ",
			"Brazilian" : "  ",
			"Spanish" : " Hola ",
			"Arabic" : "  ",
			"Polish" : "  ",
			"Czech" : "  ",
			"Dutch" : "  ",
			"Danish" : "  ",
			"Finnish" : " Voit valita koskettamalla päätäni jos haluat. ",
			"Swedish" : "  ",
			"Russian" : "  ",
			"Turkish" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <chinese>你可以使用我的头部传感器来进行设置</chinese>
                                                                                            <english>You can use my head to choose if you prefer</english>
                                                                                            <french>Tu peux utiliser ma tête pour choisir si tu préfères.</french>
                                                                                            <german>Hallo</german>
                                                                                            <italian>Ciao</italian>
                                                                                            <japanese>選択することが私の頭を使うことができる</japanese>
                                                                                            <korean>안녕하세요 </korean>
                                                                                            <portuguese>Olá</portuguese>
                                                                                            <brazilian></brazilian>
                                                                                            <spanish>Hola</spanish>
                                                                                            <arabic></arabic>
                                                                                            <polish></polish>
                                                                                            <czech></czech>
                                                                                            <dutch></dutch>
                                                                                            <danish></danish>
                                                                                            <finnish>Voit valita koskettamalla päätäni jos haluat.</finnish>
                                                                                            <swedish></swedish>
                                                                                            <russian></russian>
                                                                                            <turkish></turkish>
                                                                                            <language>15</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Choice" id="10" tooltip="Launch the speech recognition waiting for a defined number of predicted answers (written in the table on the box). Available help&#x0A;from NAO which gives some possible answers and attracts attention on the other modalities to answer (head tactile sensor).&#x0A;&#x0A;You can edit a choice by left double-clicking on the line. You can add a choice by right clicking on a line and selecting &apos;Insert a&#x0A;row&apos;. You can delete a choice by right clicking on a line and selecting &apos;Remove a row&apos;. You can also write several alternative&#x0A;answers for the same choice by writing them on the line separated by the character &apos;/&apos;.&#x0A;Ex: apple pie / pie / apple&#x0A;Then if any of these answers (&apos;apple pie&apos;, &apos;pie&apos; or &apos;apple&apos;) are said, the corresponding output will be activated. Indeed, each output&#x0A;which name begins with &apos;output_&apos; correspond to the choice in the list placed just in front of the output.&#x0A;&#x0A;Moreover, you have advanced options appearing when you click on the blue cross. Then you can make NAO calculate the threshold&#x0A;average of choices with the 1/2/3 button. Actually, it will calculate recognition threshold of each alternative answer and put them from&#x0A;highest to smallest threshold. The threshold displayed in front of each choice then is the highest&apos;s." x="261" y="24">
                                                                    <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[#coding=utf-8
# script of the Choice box v8.8
# @author Desktop Application team
# (c) 2011 Aldebaran Robotics

import os
import time
import random
import thread
import mutex
import xml.dom.minidom

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        # PROXIES INITIALIZATION
        self.tts = ALProxy("ALTextToSpeech")
        self.ttsStop = ALProxy("ALTextToSpeech", True) #Create another proxy as wait is blocking if audioout is remote
        self.asr = ALProxy("ALSpeechRecognition")
        self.ad = ALProxy("ALAudioDevice")
        self.player = ALProxy("ALAudioPlayer")
        self.dcm = ALProxy( "DCM" )
        self.leds = ALProxy( "ALLeds" )
        # VARIABLES INITIALIZATION
        self.aIdsTTS = []
        self.bSentencesInitialized = False
        self.bMustStop = False
        self.bIsRunning = False
        self.bGoOut = False
        self.nCountNoReply = 0
        self.nCountFailure = 0
        self.aFrameNumbers = {"end" : 1,
                              "headDown" : 10,
                              "bodyTalk" : 20,
                              "reco" : 30,
                              "headCheck" : 40,
                              "helpTactileSensor" : 50,
                              "notUnderstood" : 70}
        self.nFrameNumber = self.aFrameNumbers["end"]
        self.bInConfirmation = False
        self.bVocabularyLoaded = False
        self.bRecoIsHearingOrAnalysing = False
        self.bRecoIsWaitingForVoice = False
        self.bHasAlreadyHearingEyes = False
        self.bInTactileSensorMenu = False
        self.bExternChoices = False
        self.bBrainAnimPaused = False
        self.rTimeLastChoiceSaid = -1.
        self.bIsSayingChoice = False
        self.nIndexChoice = 0
        self.sRecoInterruption = "" # = "wordRecognised" or "timeout" or "onStop" or "onTactileSensor"
        self.sPreviousAnswer = ""
        self.rTimeWhenActionMadeInTactileMenu = -1.
        # variables used for the tactile sensor
        self.nFront = 0
        self.nMiddle = 0
        self.nRear = 0
        self.bSeqStarted = False
        self.bIsStoringParam = False
        self.bPressed = False
        self.mutexProcessCurrentState = mutex.mutex()
        self.mutexTactilTouched = mutex.mutex()
        self.mutexCheckIfSeqsCorrespondingLeft = mutex.mutex()
        self.bSeqStarted = False
        # assuming that every sequence is after [0, 0, 0]
        # and then start with one tactil sensor activated
        # timeout must be either a number (int or float) not equal to 0 or an array of two numbers not equal to 0, a negative one and a positive one
        # a negative timeout means a minimum time that has to ellapse before the next step
        # a positive timeout means a maximum time before the next step must show up
        self.aSeqs = [{"name" : "Tap", "statesAndTimeout" : [ "1+", 0.35, "2+", 0.45, "0" ]},
                      {"name" : "TapFront", "statesAndTimeout" : [ "F", 1, "0" ]},
                      {"name" : "LongFront", "statesAndTimeout" : [ "F", -1, "F" ]},
                      {"name" : "TapMiddle", "statesAndTimeout" : [ "M", 1, "0" ]},
                      {"name" : "LongMiddle", "statesAndTimeout" : [ "M", -1, "M" ]},
                      {"name" : "TapRear", "statesAndTimeout" : [ "R", 1, "0" ]},
                      {"name" : "LongRear", "statesAndTimeout" : [ "R", -1, "R" ]},
                      {"name" : "CalmDown", "statesAndTimeout" : [ "1+", 0.5, "2+", -1, "2+" ]}]
        # sequences initialization
        aSeqsTemp = []
        for seq in self.aSeqs:
            try: # ensure that the sequence has at least a name and states and timeout defined
                seq["name"]
                seq["statesAndTimeout"]
                aSeqsTemp.append(seq)
            except:
                pass
        self.aSeqs = aSeqsTemp
        for seq in self.aSeqs:
            states = range( len( seq["statesAndTimeout"][0:len(seq["statesAndTimeout"]):2] ) )
            i = 0
            for state in seq["statesAndTimeout"][0:len(seq["statesAndTimeout"]):2]:
                states[i] = self.convertToArrayOfPossibleStates(state)
                i += 1
            seq["statesAndTimeout"][0:len(seq["statesAndTimeout"]):2] = states
        self.aDetectedSeqs = []
        self.aDetectedSeqs.extend(self.aSeqs)
        # end - variables used for the tactile sensor
        self.aChoices = []
        self.aChoiceIndexes = []
        # parameters which can be changed from the parameters edition window
        self.sQuestion = ""
        self.nTimeoutReco = 6
        self.nTimeoutRecoConfirmation = 6
        self.nTimeoutTactile = 10
        self.nMaxCountNoReply = 3
        self.nMaxCountFailure = 5
        self.arUnderstoodThreshold = [0.0, 1.0] # range of self.rUnderstoodThreshold
        self.arConfirmationThreshold = [0.0, 1.0] # range of self.rConfirmationThreshold (must be higher than self.arUnderstoodThreshold)
        self.rUnderstoodThreshold = 0.2
        self.rConfirmationThreshold = 0.4
        self.bActivateEyesLight = True
        self.bActivateEarsLight = True
        self.bActivateBrainLight = True
        self.bActivateHelpWhenFailure = True
        self.bRepeatValidatedChoice = True
        self.bActivateDefaultChoiceHelp = True
        self.bActivateDefaultChoiceRepeat = True
        self.bActivateDefaultChoiceExit = True

# FUNCTIONS ===============================================================================================

    def onLoad(self):
        # initialize sentences for each language
        if( not self.bSentencesInitialized ):
            self.initializeSentences()
            self.bSentencesInitialized = True

# XML PARSER FOR SENTENCES INITIALIZATION
    def initializeSentences(self):
        "Initialize necessary sentences in each language."
        filename = ALFrameManager.getBehaviorPath(self.behaviorId) + self.tryGetParameter( "Sentences file", "/Aldebaran/choice_sentences.xml" )
        if( self.fileExists(filename) ):
            try:
                doc = self.getFileContents( filename )
                dom = xml.dom.minidom.parseString( doc )
            except Exception as e:
                raise Exception( "The " + filename + " file is not in the right format. Check the special characters and that the syntax is correct.\n" + str(e) )
            try:
                tag = "sentences"
                mainBlock = dom.getElementsByTagName( tag )[0]
                tag = "translation"
                aTranslations = mainBlock.getElementsByTagName( tag )
                self.aAllWords = {}
                self.aAllSentences = {}
                for sTranslation in aTranslations:
                    sLanguage = sTranslation.getAttribute("language")
                    tag = "speechReco"
                    blockSpeechReco = sTranslation.getElementsByTagName( tag )[0]
                    # variable used for the speech recognition
                    self.aAllWords[sLanguage] = {}
                    aKinds = ["negative",
                              "positive",
                              "help",
                              "exit",
                              "repeat"]
                    for sKind in aKinds:
                        tag = sKind
                        blockWordsForThisKind = blockSpeechReco.getElementsByTagName( sKind )[0]
                        self.aAllWords[sLanguage][sKind] = blockWordsForThisKind.getAttribute( "text" ).encode("utf-8").split("/")
                    # end - variable used for the speech recognition
                    tag = "tts"
                    blockTTS = sTranslation.getElementsByTagName( tag )[0]
                    # variable used for the Text-To-Speech
                    self.aAllSentences[sLanguage] = {}
                    aKinds = ["confirmation",
                              "enumMarks",
                              "helpEnumChoices",
                              "helpEnumDefault",
                              "helpTactile",
                              "notUnderstood",
                              "noQuestion",
                              "notUnderstoodAnims"]
                    for sKind in aKinds:
                        tag = sKind
                        blockSentencesForThisKind = blockTTS.getElementsByTagName( sKind )[0]
                        self.aAllSentences[sLanguage][sKind] = blockSentencesForThisKind.getAttribute( "text" ).encode("utf-8").split("/")
                    # end - variable used for the Text-To-Speech
            except Exception as e:
                raise Exception( "The " + filename + " file is not in the right format. Check that the '" + tag + "' tag is defined and with the right format.\n" + str(e) )
        else:
            self.logger.warning( "This Choice box is deprecated. Please use the new one supplied in Choregraphe library instead." )
            self.aAllWords = {"English":{"negative": ["no"],
                                         "positive": ["yes"],
                                         "help": ["help"],
                                         "exit": ["exit"],
                                         "repeat": ["repeat"]
                                        },
                              "French":{"negative": ["non"],
                                        "positive": ["oui"],
                                        "help": ["l'aide"],
                                        "exit": ["sortir"],
                                        "repeat": ["répéter"]
                                       },
                              "Spanish":{"negative": ["no"],
                                         "positive": ["si"],
                                         "help": ["ayuda"],
                                         "exit": ["salida"],
                                         "repeat": ["repetir"]
                                        },
                              "Finnish":{"negative": ["ei"],
                                         "positive": ["kyllä"],
                                         "help": ["apua"],
                                         "exit": ["poistu"],
                                         "repeat": ["toista"]
                                        },
                              "Chinese":{"negative": ["不"],
                                         "positive": ["是"],
                                         "help": ["帮助"],
                                         "exit": ["退出"],
                                         "repeat": ["重复"]
                                        },
                              "Japanese":{"negative": ["いいえ"],
                                         "positive": ["はい"],
                                         "help": ["ヘルプ"],
                                         "exit": ["待機"],
                                         "repeat": ["繰り返"]
                                        }
                             }
            self.aAllSentences = {"English":{"confirmation": ["I understood %s. Is it correct?"],
                                             "enumMarks": [", ", " or "],
                                             "helpEnumChoices": ["No answer is really expected. ", "Your answer can be %s. ", "Your answer can be for example %s. ", "%s?"],
                                             "helpEnumDefault": [" you can ask me: %s. "],
                                             "helpTactile": ["You can also use my tactile sensor to choose the answer.", "\Pau=600\ Press front or rear of my skull cap to go through all of the available answers. Press then the circle in the middle to validate your choice."],
                                             "notUnderstood": ["I did not understand. "],
                                             "noQuestion": ["No question has been defined, then I cannot repeat it. "],
                                             "notUnderstoodAnims": ["There is too much noise here! ", "Try to talk to me more distinctly. ", "I don't hear you very well. "]
                                            },
                                  "Finnish":{"confirmation": ["Tarkoititko että %s?"],
                                             "enumMarks": [", ", " tai "],
                                             "helpEnumChoices": ["Vastausta ei oikeastaan tarvita.", "Oletetaan että vastauksesi on %s. ", "Vastauksesi voisi vaikka olla %s. ", "%s?"],
                                             "helpEnumDefault": [" voit kysyä minulta: %s. "],
                                             "helpTactile": ["Voit myös valita vastauksen taputtamalla päätäni.", "\Pau=600\ Paina pääni etu- tai takaosaa käydäksesi eri vaihtoehdot läpi. Sen jälkeen paina keskiosaa vahvistaaksesi vastaus."],
                                             "notUnderstood": ["En ymmärtänyt. "],
                                             "noQuestion": ["En tiedä, mikä kysymys oikeastaan oli, joten en voi toistaa sitä. "],
                                             "notUnderstoodAnims": ["Täällä on liikaa meteliä! ", "Yritä puhua minulle selkeämmin. ", "En kuule sinua kovin hyvin. "]
                                            },
                                  "French":{"confirmation": ["J'ai compris %s. Est-ce correct?"],
                                            "enumMarks": [", ", " ou "],
                                            "helpEnumChoices": ["Aucune réponse précise n'est attendue. ", "Tu peux répondre %s. ", "Tu peux répondre par exemple %s. ", "%s ?"],
                                            "helpEnumDefault": [" tu peux me demander : %s. "],
                                            "helpTactile": ["Tu peux aussi choisir une réponse à l'aide de mon capteur tactile.", "\Pau=600\ Appuie sur l'avant ou l'arrière de ma calotte pour naviguer parmi les réponses possibles. Appuie ensuite sur le rond du milieu pour valider ton choix."],
                                            "notUnderstood": ["Je n'ai pas compris. "],
                                            "noQuestion": ["Il n'y a pas de question prédéfinie, je ne peux donc pas la répéter. "],
                                            "notUnderstoodAnims": ["Il y a trop de bruit ici! ", "Essaye de me parler plus distinctement. ", "Je ne t'entends pas bien. "]
                                           },
                                  "Spanish":{"confirmation": ["He entendido %s. Es correcto?"],
                                             "enumMarks": [", ", " o "],
                                             "helpEnumChoices": ["No espero ninguna respuesta. ", "Puedes responder %s. ", "Puedes responder por ejemplo %s. ", "%s ?"],
                                             "helpEnumDefault": [" me puedes pedir : %s. "],
                                             "helpTactile": ["Tambien puedes utilizar mi sensor tactil para escojer la respuesta.", "\Pau=600\ Toca el sensor de enfrente o el de atras para entender las posibles respuestas. Presiona en medio para validar tu eleccion."],
                                             "notUnderstood": ["No entendi. "],
                                             "noQuestion": ["No me han confirmado su respuesta, por lo tanto no puedo repetirla. "],
                                             "notUnderstoodAnims": ["Hay demasiado ruido, habla mas fuerte! "]
                                            },
                                  "Chinese":{"confirmation": ["我理解是 %s. 对吗?"],
                                             "enumMarks": [", ", " 或者 "],
                                             "helpEnumChoices": ["没有期望的答案. ", "你的答案是 %s. ", "你的答案可以是举个例子 %s. ", "%s?"],
                                             "helpEnumDefault": [" 你能问我: %s. "],
                                             "helpTactile": ["你也可以用我的碰触感应器来选择答案.", "\Pau=600\ 碰触我头部的前面和后面来浏览所有的选项. 碰触当中的感应器来确认你的选择."],
                                             "notUnderstood": ["我不明白. "],
                                             "noQuestion": ["没有定义问题, 我无法重复. "],
                                             "notUnderstoodAnims": ["这里太吵了! ", "尝试说得清楚一些. ", "我听不清你在说什么. "]
                                            },
                                  "Japanese":{"confirmation": ["%sですね。当たってるかな？"],
                                             "enumMarks": ["、","または"],
                                             "helpEnumChoices": ["答えられないよ。", "あなたの答えは%sですね。", "あなたの答えはたぶん%sですね。", "%s？"],
                                             "helpEnumDefault": [" %sと聞いていい。 "],
                                             "helpTactile": ["触覚センサーを使って、答えを選んでください", "\Pau=600\ 頭を触ってメニューを選んでください。前と後ろで選択して、真ん中が決定ボタンです。"],
                                             "notUnderstood": ["すみません。もう一度お願いします "],
                                             "noQuestion": ["質問がないので、繰り返することができない。"],
                                             "notUnderstoodAnims": ["もう少し静かな場所だと嬉しいな ", "もう少しはっきり話してくれると嬉しいな", "もう少し大きな声でゆっくり話してみてね"]
                                            }
                                 }
        # choices
        # !!! don't remove any comments from this variable !!!
        # (they are here to make the plugin work)
        self.aListAllChoices = {"Chinese": ["语言","声音", "地址", "电量", "温度", "版本", "离开", ""], "English": ["language", "volume", "address/i p adress/i p", "battery", "temperature", "version", "Quit/Exit/Stop", ""], "French": ["langage/langue", "volume", "adresse/adresse i p/i p", "batterie", "temperature", "version", "Quitter/Sortir", ""], "German": ["", "", "", "", ""], "Italian": ["", "", "", "", ""], "Japanese": ["言語", "音量", "アドレス", "バッテリー", "温度", "バージョン", "終了", ""], "Spanish": ["lenguaje", "volumen", "direcciÃÂ³n", "baterÃÂ­a", "temperatura", "versión", "salir", ""],"Finnish": ["kieli", "äänenvoimakkuus/voimakkuus/ääni", "osoite/i p osoite/i p", "paristo/akku", "lämpö/lämpötila", "versio", "poistu/lopeta/pois/lopetus/peru", ""]}
        # end - choices

# INPUTS ACTIVATION PROCESSING ------------------------------------------------------------------------------
    def onInput_onStart(self, question=None):
        "Initialize variables and start box behaviour."
        self.logger.debug( "Input onStart stimulated." )
        if( self.bIsRunning): # to avoid starting the process twice
            return
        self.bIsRunning = True
        self.asr.setVisualExpression( False )
        language = self.tts.getLanguage()
        self.asr.setLanguage( language )
        try:
            self.aAllWords[language]
            self.aAllSentences[language]
        except:
            raise Exception( "The current language is not supported by this Choice box. It is probably deprecated. Try to use the one supplied in Choregraphe library instead." )
        self.asNegativeWords = self.aAllWords[language]["negative"]
        self.asPositiveWords = self.aAllWords[language]["positive"]
        self.asHelpWords = self.aAllWords[language]["help"]
        self.asExitWords = self.aAllWords[language]["exit"]
        self.asRepeatWords = self.aAllWords[language]["repeat"]
        self.bGoOut = False
        self.bVocabularyLoaded = False
        self.bRecoIsHearingOrAnalysing = False
        self.bRecoIsWaitingForVoice = False
        self.bHasAlreadyHearingEyes = False
        self.sRecoInterruption = ""
        self.sPreviousAnswer = ""
        self.bMustStop = False
        self.nCountNoReply = 0
        self.nCountFailure = 0
        self.nFrameNumber = self.aFrameNumbers["end"]
        self.beginTime = time.time()
        self.bInConfirmation = False
        self.bInTactileSensorMenu = False
        self.bBrainAnimPaused = False
        self.bPressed = False
        self.rTimeWhenActionMadeInTactileMenu = -1.
        self.nFront = 0
        self.nMiddle = 0
        self.nRear = 0
        self.bSeqStarted = False
        self.bIsStoringParam = False
        self.rUnderstoodThreshold = self.tryGetParameter( "Minimum threshold to understand", 0.2 )
        self.rConfirmationThreshold = self.tryGetParameter( "Minimum threshold to be sure", 0.4 )
        self.nTimeoutReco = self.tryGetParameter( "Speech recognition timeout", 6 )
        self.nTimeoutRecoConfirmation = self.tryGetParameter( "Speech recognition timeout when confirmation", 6 )
        self.nTimeoutTactile = self.tryGetParameter( "Tactile sensor menu timeout", 10 )
        self.nMaxCountNoReply = self.tryGetParameter( "Maximum number of repetition when no reply", 3 )
        self.nMaxCountFailure = self.tryGetParameter( "Maximum number of repetition when failure", 5 )
        self.bActivateEyesLight = self.tryGetParameter( "Activate eyes light", True )
        self.bActivateEarsLight = self.tryGetParameter( "Activate ears light", True )
        self.bActivateBrainLight = self.tryGetParameter( "Activate brain light", True )
        self.bActivateHelpWhenFailure = self.tryGetParameter( "Activate help when failure", True )
        self.bRepeatValidatedChoice = self.tryGetParameter( "Repeat validated choice", True )
        self.bActivateDefaultChoiceHelp = self.tryGetParameter( "Activate help command", True )
        self.bActivateDefaultChoiceRepeat = self.tryGetParameter( "Activate repeat command", True )
        self.bActivateDefaultChoiceExit = self.tryGetParameter( "Activate exit command", True )
        self.aDefaultChoices = []
        if (self.bActivateDefaultChoiceHelp):
            self.aDefaultChoices.append( self.asHelpWords )
        if (self.bActivateDefaultChoiceRepeat):
            self.aDefaultChoices.append( self.asRepeatWords )
        if (self.bActivateDefaultChoiceExit):
            self.aDefaultChoices.append( self.asExitWords )
        if( question == None ):
            question = ""
        self.initQuestionAndChoices( question )
        if( len( self.aChoices ) > len( self.aDefaultChoices ) ): # if there is at least one choice (not a default one)
            self.nIndexChoice = len( self.aDefaultChoices )
        else: # if there are only default words
            self.nIndexChoice = 0
        self.bGoOut = False
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0xFFFFFF, 0.1 )
        # initialize tactile sensor handler
        self.initSeqDetected()
        # subscribe to tactile sensors extractors (launch tactile sensor handler)
        ALMemory.subscribeToEvent( "FrontTactilTouched", self.getName(), "onTactilTouched" )
        ALMemory.subscribeToEvent( "MiddleTactilTouched", self.getName(), "onTactilTouched" )
        ALMemory.subscribeToEvent( "RearTactilTouched", self.getName(), "onTactilTouched" )
        thread.start_new_thread( self.loopLedsBrainTwinkle, () )
        while( not self.bGoOut ):
            self.questionRecognitionReaction()
        if( self.bInTactileSensorMenu ):
            self.nCountNoReply = 0
            if( self.nFrameNumber != self.aFrameNumbers["headDown"] ):
                self.nFrameNumber = self.aFrameNumbers["headDown"]
                try:
                    self.gotoAndStop(self.nFrameNumber)
                except:
                    pass
            self.loopLedsBrainTurn()
        else:
            self.bIsRunning = False

    def onInput_choicesList(self, p):
        "Set choices list."
        self.logger.debug( "Input choicesList stimulated." )
        if( not self.bIsRunning ):
            self.bExternChoices = True
            self.asNegativeWords = self.aAllWords[self.asr.getLanguage()]["negative"]
            self.asPositiveWords = self.aAllWords[self.asr.getLanguage()]["positive"]
            self.asHelpWords = self.aAllWords[self.asr.getLanguage()]["help"]
            self.asExitWords = self.aAllWords[self.asr.getLanguage()]["exit"]
            self.asRepeatWords = self.aAllWords[self.asr.getLanguage()]["repeat"]
            self.bActivateDefaultChoiceHelp = self.tryGetParameter( "Activate help command", True )
            self.bActivateDefaultChoiceRepeat = self.tryGetParameter( "Activate repeat command", True )
            self.bActivateDefaultChoiceExit = self.tryGetParameter( "Activate exit command", True )
            self.aDefaultChoices = []
            if (self.bActivateDefaultChoiceHelp):
                self.aDefaultChoices.append( self.asHelpWords )
            if (self.bActivateDefaultChoiceRepeat):
                self.aDefaultChoices.append( self.asRepeatWords )
            if (self.bActivateDefaultChoiceExit):
                self.aDefaultChoices.append( self.asExitWords )
            self.aChoices = []
            self.aChoiceIndexes = []
            self.aChoices.extend( self.aDefaultChoices )
            index = 0
            for choice in p:
                if( self.isString(choice) ):
                    choice = choice.strip(" \t,;.\n") # remove space or tabs at beginning or end of a choice
                    if( choice != "" ):
                        choice = [ choice ]
                    else:
                        choice = []
                elif( self.isArray(choice) ):
                    if( choice != [] ):
                        for i in range( len( choice ) ):
                            if( self.isString(choice[i]) ):
                                choice[i] = choice[i].strip(" \t,;.\n") # remove space or tabs at beginning or end of a choice
                                if( len( choice[i] ) < 1 ):
                                    del choice[i]
                                    i -= 1 # to parse the good one next loop
                            else:
                                raise Exception( "Error in choices input syntax:\nIt must be an array of choices and each choice can be either a string or an array of strings (several possibilities for one choice)\nEx: ['choice1',['choice2a','choice2b']]\nbut: " + str(p) + " found" )
                else:
                    raise Exception( "Error in choices input syntax:\nIt must be an array of choices and each choice can be either a string or an array of strings (several possibilities for one choice)\nEx: ['choice1',['choice2a','choice2b']]\nbut: " + str(p) + " found" )
                if( len( choice ) > 0 ):
                    for sWord in choice:
                        for aDefaultChoice in self.aDefaultChoices:
                            if( sWord in aDefaultChoice ):
                                raise Exception( "Error in input choices list: You chose a word which is already used for default choices:\n" + str(sWord) + " is used for the default choice: " + str(aDefaultChoice[0]) )
                    self.aChoices.append( choice )
                    self.aChoiceIndexes.append( index )
                index += 1

    def onInput_onStop(self):
        "Stop box behaviour."
        self.logger.debug( "Input onStop stimulated." )
        if( self.bIsRunning ):
            self.goOut( self.asExitWords[0], "onStop" )
            self.sRecoInterruption = "onStop"
        else:
            self.onUnload()

# GENERAL FUNCTIONS ------------------------------------------------------------------------------------------

    def isString(self, strVariable):
        try:
            if( type( strVariable ) == type( "some string" ) ):
                return True
        except:
            pass
        return False

    def isArray(self, aVariable):
        try:
            if( type( aVariable ) == type( ["some array"] ) ):
                return True
        except:
            pass
        return False

    def fileExists(self, strPathFilename ):
        try:
            file = open( strPathFilename, 'r' )
            if( file ):
                file.close()
                return True
        except (IOError, os.error), err:
            pass
        return False

    def getFileContents(self, sFilename ):
        "read a file and return it's contents, or '' if not found, empty, ..."
        try:
            fileContent = open( sFilename )
            aBuf = fileContent.read()
            fileContent.close()
        except:
            try:
                fileContent.close()
            except:
                pass
            return ""
        return aBuf

    def getBrainLedName(self, nNumLed):
        "Get the name of the DCM led device from its number"
        "0 => front left; 1 => next in clock wise; until 11"
        numLed = nNumLed%12
        if( numLed <= 1 ):
            return "Head/Led/Front/Right/%d/Actuator/Value" % (1-numLed)
        elif( numLed >= 10 ):
            return "Head/Led/Front/Left/%d/Actuator/Value" % (numLed-10)
        elif( numLed <= 2 ):
            return "Head/Led/Middle/Right/%d/Actuator/Value" % (2-numLed)
        elif( numLed >= 9 ):
            return "Head/Led/Middle/Left/%d/Actuator/Value" % (numLed-9)
        elif( numLed <= 5 ):
            return "Head/Led/Rear/Right/%d/Actuator/Value" % (numLed-3)
        else:
            return "Head/Led/Rear/Left/%d/Actuator/Value" % (8-numLed)

    def skipTTS(self):
        for idtts in self.aIdsTTS:
            try:
                self.ttsStop.stop(idtts)
            except:
                self.logger.debug( "Warning: The Text-To-Speech could not have been stopped." )

    def tryGetParameter(self, sParameterName, defaultValue):
        try:
            return self.getParameter( sParameterName )
        except:
            return defaultValue

# QUESTION AND CHOICES INITIALIZATION ----------------------------------------------------------------------

    def initQuestionAndChoices(self, p):
        "Initialize the question and the choices."
        # question processing
        if( self.isString(p) ):
            self.sQuestion = p
        else:
            raise Exception( "Error in question input syntax:\nQuestion text\nexpected for example, but:\n" + str(p[0]) + "\nfound" )
        # choices processing
        if( not self.bExternChoices ):
            self.aChoices = []
            self.aChoiceIndexes = []
            self.aChoices.extend( self.aDefaultChoices )
            index = 0
            listChoices = self.aListAllChoices[self.tts.getLanguage()]
            for choice in listChoices:
                aChoice = choice.split( "/" )
                if( aChoice != [] ):
                    for i in range( len( aChoice ) ):
                        aChoice[i] = aChoice[i].strip(" \t,;.\n") # remove space or tabs at beginning or end of a choice
                        if( len( aChoice[i] ) < 1 ):
                            del aChoice[i]
                            i -= 1 # to parse the good one next loop
                if( len( aChoice ) > 0 ):
                    # check if there is a word which is already used for the default choices
                    for sWord in aChoice:
                        for aDefaultChoice in self.aDefaultChoices:
                            if( sWord in aDefaultChoice ):
                                raise Exception( "Error in choices list: You chose a word which is already used for default choices:\n" + str(sWord) + " is used for the default choice: " + str(aDefaultChoice[0]) )
                    # append the choice to the list if everything worked well
                    self.aChoices.append( aChoice )
                    self.aChoiceIndexes.append( index )
                index += 1
        # check that there is at least one choice (a default one or not)
        if( len( self.aChoices ) < 1 ):
            raise Exception( "Error in choices list: It is empty. There is no default choice nor choice entered." )

# QUESTION-RECOGNITION-REACTION -----------------------------------------------------------------------------

    def questionRecognitionReaction(self):
        "Ask question, launch speech recognition and process answer."
        self.ttsQuestionAndRecoInit()
        if( not self.bMustStop ):
            # stop movement animation
            if( self.nFrameNumber != self.aFrameNumbers["reco"] ):
                self.nFrameNumber = self.aFrameNumbers["reco"]
                try:
                    self.gotoAndStop(self.nFrameNumber)
                except:
                    pass
            # start speech recognition
            self.logger.debug( "Speech recognition started." )
            ALMemory.subscribeToEvent( "WordRecognized", self.getName(), "onWordRecognized" )
            self.bRecoIsWaitingForVoice = True
            ALMemory.subscribeToEvent( "SpeechDetected", self.getName(), "onSpeechDetected" )
        # leds during the recognition
        self.loopLedsReco()
        # process the reco loop break
        self.processRecoInterruption()

    def ttsQuestionAndRecoInit(self):
        "Ask question and initialize the speech recognition during the question to gain time in the interaction."
        if( not self.bInConfirmation ):
            # launch TTS
            idTTS = -1
            if( self.sQuestion != ""):
                idTTS = self.tts.post.say( self.sQuestion )
                self.aIdsTTS.append( idTTS )
                self.logger.debug( "Robot says: " + str(self.sQuestion) )
                # launch TTS movement animation
                if( self.nFrameNumber != self.aFrameNumbers["bodyTalk"] ):
                    self.nFrameNumber = self.aFrameNumbers["bodyTalk"]
                    try:
                        self.gotoAndStop(self.nFrameNumber)
                    except:
                        pass
            # prepare speech recognition
            self.asr.setLanguage( self.tts.getLanguage() )
            if( not self.bVocabularyLoaded ):
                aWordsRecognised = []
                for i in range( len( self.aChoices ) ):
                    if( self.aChoices[i] != [] ):
                        aWordsRecognised.extend( self.aChoices[i] )
                sWordsRecognised = "You can say: "
                if( len( aWordsRecognised ) > 1 ):
                    for i in range( len( aWordsRecognised ) - 1 ):
                        sWordsRecognised += "'" + aWordsRecognised[i] + "', "
                if( len( aWordsRecognised ) > 0 ):
                    sWordsRecognised += "'" + aWordsRecognised[len( aWordsRecognised ) - 1] + "'"
                sWordsRecognised += "."
                self.logger.debug( sWordsRecognised )
                self.asr.setWordListAsVocabulary( aWordsRecognised )
                self.bVocabularyLoaded = True
        else:
            # launch TTS
            sentence = self.aAllSentences[self.tts.getLanguage()]["confirmation"][0]
            idTTS = -1
            sentenceToSay = sentence % self.sPreviousAnswer
            if( sentenceToSay != ""):
                idTTS = self.tts.post.say( sentenceToSay )
                self.aIdsTTS.append( idTTS )
                self.logger.debug( "Robot says: " + str(sentenceToSay) )
                # launch TTS movement animation
                if( self.nFrameNumber != self.aFrameNumbers["bodyTalk"] ):
                    self.nFrameNumber = self.aFrameNumbers["bodyTalk"]
                    try:
                        self.gotoAndStop(self.nFrameNumber)
                    except:
                        pass
            # prepare speech recognition
            aWordsRecognised = []
            aWordsRecognised.extend( self.asNegativeWords )
            aWordsRecognised.extend( self.asPositiveWords )
            sWordsRecognised = "You can say: "
            if( len( aWordsRecognised ) > 1 ):
                for i in range( len( aWordsRecognised ) - 1 ):
                    sWordsRecognised += "'" + aWordsRecognised[i] + "', "
            if( len( aWordsRecognised ) > 0 ):
                sWordsRecognised += "'" + aWordsRecognised[len( aWordsRecognised ) - 1] + "'"
            sWordsRecognised += "."
            self.logger.debug( sWordsRecognised )
            self.asr.setWordListAsVocabulary( aWordsRecognised )
            self.bVocabularyLoaded = False
        # wait for the end of the TTS
        if( idTTS != -1 ):
            try:
                self.tts.wait( idTTS, 0 )
            except:
                self.logger.debug( "Warning: Could not wait the TTS." )

    def processRecoInterruption(self):
        "Process speech recognition interruption (timeout, action on tactile sensor, word said, etc...)"
        # wait for the end of the reaction (help, not understood, etc...)
        while( self.sRecoInterruption == "" ):
            time.sleep( 0.2 )
        self.logger.debug( "The speech recognition has been interrupted because of: " + str(self.sRecoInterruption) + "." )
        if( self.sRecoInterruption == "timeout" ): # if recognition interrupted by timeout
            try:
                # stop recognition
                ALMemory.unsubscribeToEvent( "WordRecognized", self.getName() )
                self.bRecoIsWaitingForVoice = False
                self.bRecoIsHearingOrAnalysing = False
                self.logger.debug( "Speech recognition stopped." )
                ALMemory.unsubscribeToEvent( "SpeechDetected", self.getName() )
            except:
                pass
            if( self.bInConfirmation ): # if it was a confirmation question
                # leds noticing that the robot confirm its guessing
                thread.start_new_thread( self.ledsUnderstood, (True, False) )
                # if nothing has been said, we assume that the user agree
                self.bInConfirmation = False
                if( self.sPreviousAnswer in self.asHelpWords ): # if help asked
                    self.helpWhenAsked()
                elif( self.sPreviousAnswer in self.asRepeatWords ): # if repeat asked
                    self.repeatWhenNoQuestion()
                    # repeat the question
                else: # if not repeat nor help asked
                    self.goOut( self.sPreviousAnswer, "wordRecognised" )
            else:
                # reinitialize leds
                self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )
                self.nCountNoReply += 1
                if( self.nCountNoReply >= self.nMaxCountNoReply ):
                    self.goOut( self.asExitWords[0], "timeout" )
        else:
            self.nCountNoReply = 0
            if( self.sRecoInterruption in [ "onStop", "onTorsoClick" ] ):
                self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )
        self.sRecoInterruption = ""

    def repeatWhenNoQuestion(self):
        "Robot's reaction when it is asked to repeat the question when there is no question."
        if( self.sQuestion == "" ):
            sentenceNoQuestion = self.aAllSentences[self.tts.getLanguage()]["noQuestion"][0]
            sentenceNoQuestion += self.enumerateChoices( True ) # True to ask that the introduction is played
            if( len( self.aChoices ) - len( self.aDefaultChoices ) == 0 ): # if there is no choice
                sentenceNoQuestion += self.enumerateDefaultChoices( True ) # True to ask that the introduction is played
            # launch TTS
            idTTS = -1
            if( sentenceNoQuestion != ""):
                if( self.bInTactileSensorMenu ):
                    idTTS = self.tts.post.say( sentenceNoQuestion + "\\Pau=300\\" )
                else:
                    idTTS = self.tts.post.say( sentenceNoQuestion )
                self.aIdsTTS.append( idTTS )
                self.logger.debug( "Robot says: " + str(sentenceNoQuestion) )
                if( not self.bInTactileSensorMenu ):
                    # launch TTS movement animation
                    if( self.nFrameNumber != self.aFrameNumbers["bodyTalk"] ):
                        self.nFrameNumber = self.aFrameNumbers["bodyTalk"]
                        try:
                            self.gotoAndStop(self.nFrameNumber)
                        except:
                            pass
            # wait for the end of the TTS
            if( idTTS != -1 ):
                try:
                    self.tts.wait( idTTS, 0 )
                except:
                    self.logger.debug( "Warning: Could not wait the TTS." )

# RECO OUTPUT PROCESSING --------------------------------------------------------------------------------------

    def onWordRecognized(self, pDataName, pValue, pMessage):
        "Handler for when a word is recognised by the speech recognition system."
        aState = pValue
        self.logger.debug( "The word '" + str(aState[0]) + "' has been recognised with a threshold of " + str(aState[1]) + "." )
        # interrupt loops:
            # - stop reco
            # - stop leds
            # - stop asking the question on and on
        try:
            ALMemory.unsubscribeToEvent( "WordRecognized", self.getName() )
            self.logger.debug( "Speech recognition stopped." )
            ALMemory.unsubscribeToEvent( "SpeechDetected", self.getName() )
        except:
            pass
        self.bRecoIsHearingOrAnalysing = False
        self.bRecoIsWaitingForVoice = False
        if( aState[0] != "" ):
            if( aState[1] >= self.rUnderstoodThreshold ):
                if( self.rUnderstoodThreshold <= self.arUnderstoodThreshold[1] - 0.02 ):
                    self.rUnderstoodThreshold += 0.02
                else:
                    self.rUnderstoodThreshold = self.arUnderstoodThreshold[1]
                if( self.bInConfirmation ):
                    if( aState[0] in self.asNegativeWords ):
                        thread.start_new_thread( self.ledsNegative, () )
                    else:
                        thread.start_new_thread( self.ledsUnderstood, (True, False) )
                else:
                    thread.start_new_thread( self.ledsUnderstood, (True, False) )
                self.reactionWordUnderstood( aState )
            else:
                if( self.rUnderstoodThreshold >= self.arUnderstoodThreshold[0] + 0.05 ):
                    self.rUnderstoodThreshold -= 0.05
                else:
                    self.rUnderstoodThreshold = self.arUnderstoodThreshold[0]
                aCurrentChoice = ""
                for choice in self.aChoices:
                    if( aCurrentChoice == "" ):
                        if( aState[0] in choice ):
                            aCurrentChoice = choice
                if( self.sPreviousAnswer in aCurrentChoice ): # if answer in the same choice as previously
                    # then ask confirmation
                    aState[1] = self.rConfirmationThreshold - 0.01
                    thread.start_new_thread( self.ledsUnderstood, (True, False) )
                    self.reactionWordUnderstood( aState )
                else:
                    # else not understood
                    if( self.bInConfirmation ):
                        thread.start_new_thread( self.ledsUnderstood, (True, False) )
                    else:
                        self.sPreviousAnswer = aState[0]
                        thread.start_new_thread( self.ledsNotUnderstood, () )
                    self.reactionNothingUnderstood()
        else:
            if( self.bInConfirmation ):
                thread.start_new_thread( self.ledsUnderstood, (True, False) )
            else:
                thread.start_new_thread( self.ledsNotUnderstood, () )
            self.reactionNothingUnderstood()
        if( pMessage == "" ):
            self.sRecoInterruption = "wordRecognised"
        else:
            self.sRecoInterruption = pMessage

    def onSpeechDetected(self, pDataName, pValue, pMessage):
        "Handler for when something has been heard by the speech recognition system."
        aState = pValue
        if( aState == 1):
            if( self.bRecoIsWaitingForVoice ):
                # make eyes leds switch from an animation to an other
                self.bRecoIsHearingOrAnalysing = True
                self.bRecoIsWaitingForVoice = False
                try:
                    self.timeToReply(time.time() - self.beginTime)
                except:
                    pass

    def reactionWordUnderstood(self, word):
        "Reaction depending on the word recognised (help, repeat, word in choices, etc...) and its recognition confidence."
        if( self.bInConfirmation ):
            self.bInConfirmation = False
            if( word[0] in self.asNegativeWords ):
                # update number of failures
                self.nCountFailure += 1
                if( self.sPreviousAnswer in self.asHelpWords ):
                    if( self.nCountFailure >= self.nMaxCountFailure ): # if maximum number of failures
                        # skip the question
                        self.goOut( self.asExitWords[0], "notUnderstood" )
                else:
                    self.helpAfterFailure()
            else:
                if( (self.sPreviousAnswer in self.asHelpWords) or (word[0] in self.asHelpWords) ):
                    self.helpWhenAsked()
                elif( self.sPreviousAnswer in self.asRepeatWords or (word[0] in self.asRepeatWords) ):
                    self.repeatWhenNoQuestion()
                    # repeat the question
                else:
                    self.goOut( self.sPreviousAnswer, "wordRecognised" )
                self.sPreviousAnswer = ""
        else:
            self.sPreviousAnswer = word[0]
            if( word[1] >= self.rConfirmationThreshold ):
                if( self.rConfirmationThreshold <= self.arConfirmationThreshold[1] - 0.02 ):
                    self.rConfirmationThreshold += 0.02
                else:
                    self.rConfirmationThreshold = self.arConfirmationThreshold[1]
                if( self.sPreviousAnswer in self.asHelpWords ):
                    self.helpWhenAsked()
                elif( self.sPreviousAnswer in self.asRepeatWords ):
                    self.repeatWhenNoQuestion()
                    # repeat the question
                else:
                    self.goOut( self.sPreviousAnswer, "wordRecognised" )
                self.sPreviousAnswer = ""
            else:
                if( self.rConfirmationThreshold >= self.arConfirmationThreshold[0] + 0.05 ):
                    self.rConfirmationThreshold -= 0.05
                else:
                    self.rConfirmationThreshold = self.arConfirmationThreshold[0]
                self.bInConfirmation = True

    def reactionNothingUnderstood(self):
        "Reaction when nothing has been understood or without an enough confidence."
        if( self.bInConfirmation ):
            # if the robot did not understand, we assume that the user agree
            self.bInConfirmation = False
            if( self.sPreviousAnswer in self.asHelpWords ): # if help asked
                self.helpWhenAsked()
            elif( self.sPreviousAnswer in self.asRepeatWords ): # if repeat asked
                self.repeatWhenNoQuestion()
                # repeat the question
            else: # if not repeat nor help asked
                self.goOut( self.sPreviousAnswer, "wordRecognised" )
        else:
            # update number of failures
            self.nCountFailure += 1
            if( self.nCountFailure <= 1 ): # if first failure
                sentence = self.aAllSentences[self.tts.getLanguage()]["notUnderstood"][0]
            else: # if second failure or more
                sentenceNotUnderstoodAnims = self.aAllSentences[self.tts.getLanguage()]["notUnderstoodAnims"]
                index = random.randint( 0, len( sentenceNotUnderstoodAnims ) - 1 )
                sentence = sentenceNotUnderstoodAnims[index]
                if( self.nFrameNumber != self.aFrameNumbers["notUnderstood"] + 10*index ):
                    self.nFrameNumber = self.aFrameNumbers["notUnderstood"] + 10*index
                    try:
                        self.gotoAndStop(self.nFrameNumber)
                    except:
                        pass
            self.helpAfterFailure( sentence )

# HELP ------------------------------------------------------------------------------------------------------

    def enumerateChoices(self, bIntroToSay):
        "Enumerate choices (only the first word of each choice is taken into account)."
        sentenceHelpEnumChoices = self.aAllSentences[self.tts.getLanguage()]["helpEnumChoices"]
        sentenceHelpEnumMarks = self.aAllSentences[self.tts.getLanguage()]["enumMarks"]
        enumWords = ""
        maxNbEnumChoices = 3
        indexes = []
        for i in range( min(maxNbEnumChoices, len( self.aChoices ) - len( self.aDefaultChoices )) ):
            if( len( self.aChoices ) - len( self.aDefaultChoices ) <= maxNbEnumChoices ):
                index = len( self.aDefaultChoices ) + i
            else:
                while( index in indexes or indexes == [] ):
                    index = random.randint( len( self.aDefaultChoices ), len( self.aChoices ) - 1 )
            indexes.append( index )
            if( len( indexes ) != 1 ): # if it is not the first choice
                if( len( indexes ) != min(maxNbEnumChoices, len( self.aChoices ) - len( self.aDefaultChoices )) ): # if it is not the last choice
                    enumWords += sentenceHelpEnumMarks[0]
                else:
                    enumWords += sentenceHelpEnumMarks[1]
            enumWords += self.aChoices[index][0]
        sentenceTemplate = sentenceHelpEnumChoices[2]
        if( len( self.aChoices ) - len( self.aDefaultChoices ) <= maxNbEnumChoices ): # if there are 3 or less choices
            sentenceTemplate = sentenceHelpEnumChoices[1]
        if( not bIntroToSay ):
            sentenceTemplate = sentenceHelpEnumChoices[3]
        if( len( self.aChoices ) - len( self.aDefaultChoices ) == 0 ): # if there is no choice
            sentence = sentenceHelpEnumChoices[0]
        else:
            sentence = sentenceTemplate % enumWords
        return sentence

    def enumerateDefaultChoices(self, bIntroToSay):
        "Enumerate default choices (only the first word of each choice is taken into account)."
        sentenceHelpEnumChoices = self.aAllSentences[self.tts.getLanguage()]["helpEnumChoices"]
        sentenceHelpEnumDefault = self.aAllSentences[self.tts.getLanguage()]["helpEnumDefault"]
        sentenceHelpEnumMarks = self.aAllSentences[self.tts.getLanguage()]["enumMarks"]
        enumWords = ""
        indexes = []
        for i in range( len( self.aDefaultChoices ) ):
            indexes.append( i )
            if( len( indexes ) != 1 ): # if it is not the first choice
                if( len( indexes ) != len( self.aDefaultChoices ) - 1 ): # if it is not the last choice
                    enumWords += sentenceHelpEnumMarks[0]
                else:
                    enumWords += sentenceHelpEnumMarks[1]
            enumWords += self.aDefaultChoices[i][0]
        sentenceTemplate = sentenceHelpEnumDefault[0]
        if( not bIntroToSay ):
            sentenceTemplate = sentenceHelpEnumChoices[3]
        if( len( self.aDefaultChoices ) == 0 ): # if there is no default choice
            sentence = ""
        else:
            sentence = sentenceTemplate % enumWords
        return sentence

    def explanationTactileSensor(self):
        "Explain the possible interaction with the tactile sensor."
        sentenceHelpTactile = self.aAllSentences[self.tts.getLanguage()]["helpTactile"]
        if( self.bInTactileSensorMenu ):
            sentence = sentenceHelpTactile[1]
        else:
            sentence = sentenceHelpTactile[0]
        return sentence

    def helpWhenAsked(self, sentence = ""):
        "Help when the user asked it: enumerate choices, enumerate default choices and explain tactile sensor possible interaction."
        if( not self.bInTactileSensorMenu ):
            # enumeration of choices
            sentence += self.enumerateChoices( True ) # True to ask that the introduction is played
            # enumeration of default choices
            sentence += self.enumerateDefaultChoices( True ) # True to ask that the introduction is played
        # explanation about alternative modality (tactil sensor, arm motion)
        sentence += self.explanationTactileSensor()
        # launch TTS
        idTTS = -1
        if( sentence != "" ):
            if( self.bInTactileSensorMenu ):
                idTTS = self.tts.post.say( sentence + "\\Pau=300\\" )
            else:
                idTTS = self.tts.post.say( sentence )
            self.aIdsTTS.append( idTTS )
            self.logger.debug( "Robot says: " + str(sentence) )
            # launch TTS movement animation
            if( self.bInTactileSensorMenu ):
                if( self.nFrameNumber != self.aFrameNumbers["helpTactileSensor"] ):
                    self.nFrameNumber = self.aFrameNumbers["helpTactileSensor"]
                    try:
                        self.gotoAndStop(self.nFrameNumber)
                    except:
                        pass
            else:
                if( self.nFrameNumber != self.aFrameNumbers["bodyTalk"] ):
                    self.nFrameNumber = self.aFrameNumbers["bodyTalk"]
                    try:
                        self.gotoAndStop(self.nFrameNumber)
                    except:
                        pass
        # wait for the end of the TTS
        if( idTTS != -1 ):
            try:
                self.tts.wait( idTTS, 0 )
            except:
                self.logger.debug( "Warning: Could not wait the TTS." )
        # repeat the question

    def helpAfterFailure(self, sentence = ""):
        "Help when the speech recognition failed (nothing understood or incorrect answer understood)."
        if( self.nCountFailure < self.nMaxCountFailure ): # if reasonable number of failures
            if( self.bActivateHelpWhenFailure ):
                if( self.nCountFailure in [1, 2] ): # if first or second failure
                    # enumeration of choices, or default words if there is no choice
                    if( len( self.aChoices ) - len( self.aDefaultChoices ) > 0 ): # if there is at least one choice
                        sentence += self.enumerateChoices( self.nCountFailure == 1 ) # the introduction is played if it is the first failure
                    else:
                        sentence += self.enumerateDefaultChoices( self.nCountFailure == 1 ) # the introduction is played if it is the first failure
                    if( self.nCountFailure == 2 ): # if second failure
                        # explanation about alternative modality (tactil sensor, arm motion)
                        sentence += self.explanationTactileSensor()
                # launch TTS
                idTTS = -1
                if( sentence != "" ):
                    idTTS = self.tts.post.say( sentence )
                    self.aIdsTTS.append( idTTS )
                    self.logger.debug( "Robot says: " + str(sentence) )
                    # launch TTS movement animation
                    listPossibleFrames = range( len( self.aAllSentences[self.tts.getLanguage()]["notUnderstoodAnims"] ) )
                    for i in range(len(listPossibleFrames)):
                        listPossibleFrames[i] = listPossibleFrames[i] * 10 + self.aFrameNumbers["notUnderstood"]
                    if( ( self.nFrameNumber != self.aFrameNumbers["bodyTalk"] ) and not ( self.nFrameNumber in listPossibleFrames ) ):
                        try:
                            self.gotoAndStop(self.aFrameNumbers["bodyTalk"])
                        except:
                            pass
                    self.nFrameNumber = self.aFrameNumbers["bodyTalk"]
                # wait for the end of the TTS
                if( idTTS != -1 ):
                    try:
                        self.tts.wait( idTTS, 0 )
                    except:
                        self.logger.debug( "Warning: Could not wait the TTS." )
            # repeat the question
        else: # if maximum number of failures
            # skip the question
            self.goOut( self.asExitWords[0], "notUnderstood" )

# LEDS ---------------------------------------------------------------------------------------------------

    def setLeds(self, eyesLight, earsLight, brainLight):
        "Set all LEDS (eyes, ears and brain lights)."
        rDuration = 1
        if( self.bActivateEyesLight ):
            # set eyes leds
            self.leds.post.fadeRGB( "FaceLeds", eyesLight, rDuration )
        if( self.bActivateEarsLight ):
            # set ears leds
            self.leds.fadeRGB( "EarLeds", earsLight, rDuration )
        if( self.bActivateBrainLight ):
            # set brain leds light
            self.setLedsBrain( brainLight, 500 )

    def ledsUnderstood(self, bFlashEars, bFlashBrain):
        "Sequence of LEDS for eyes, ears and brain when the robot understood what it heard."
        self.bBrainAnimPaused = True
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0x00FF00, rDuration )
        if( self.bActivateEarsLight ):
            if( bFlashEars ):
                self.leds.fadeRGB( "EarLeds", 0x00FF00, rDuration )
        if( self.bActivateBrainLight ):
            if( bFlashBrain ):
                self.setLedsBrain( 0.5, int(rDuration * 1000) )
        time.sleep( 0.3 )
        rDuration = 0.2
        if( self.bActivateEyesLight ):
            if( self.bInTactileSensorMenu ):
                self.leds.fadeRGB( "FaceLeds", 0xFFFFFF, rDuration )
            else:
                self.leds.fadeRGB( "FaceLeds", 0x000000, rDuration )
        if( self.bActivateEarsLight ):
            if( bFlashEars ):
                self.leds.fadeRGB( "EarLeds", 0x000000, rDuration )
        if( self.bActivateBrainLight ):
            if( bFlashBrain ):
                self.setLedsBrain( 0., int(rDuration * 1000) )
        time.sleep( 0.1 )
        if( not self.bInTactileSensorMenu ):
            self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )
        time.sleep( 0.1 )
        self.bBrainAnimPaused = False

    def ledsNotUnderstood(self):
        "Sequence of LEDS for eyes and ears when the robot did not understand what it heard."
        self.bBrainAnimPaused = True
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0xFF0000, rDuration )
        if( self.bActivateEarsLight ):
            self.leds.fadeRGB( "EarLeds", 0xFF0000, rDuration )
        time.sleep( 0.05 )
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0x000000, rDuration )
        if( self.bActivateEarsLight ):
            self.leds.fadeRGB( "EarLeds", 0x000000, rDuration )
        time.sleep( 0.05 )
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0xFF0000, rDuration )
        if( self.bActivateEarsLight ):
            self.leds.fadeRGB( "EarLeds", 0xFF0000, rDuration )
        time.sleep( 0.05 )
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0x000000, rDuration )
        if( self.bActivateEarsLight ):
            self.leds.fadeRGB( "EarLeds", 0x000000, rDuration )
        time.sleep( 0.3 )
        self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )
        self.bBrainAnimPaused = False

    def ledsNegative(self):
        "Sequence of LEDS for eyes and ears when the robot understood 'no'."
        self.bBrainAnimPaused = True
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0xFF0000, rDuration )
        if( self.bActivateEarsLight ):
            self.leds.fadeRGB( "EarLeds", 0xFF0000, rDuration )
        time.sleep( 0.3 )
        rDuration = 0.2
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0x000000, rDuration )
        if( self.bActivateEarsLight ):
            self.leds.fadeRGB( "EarLeds", 0x000000, rDuration )
        time.sleep( 0.1 )
        self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )
        time.sleep( 0.1 )
        self.bBrainAnimPaused = False

    def loopLedsReco(self):
        "LEDS (eyes and ears) process during the speech recognition."
        self.beginTime = time.time()
        if( self.bInConfirmation ):
            timerReco = self.beginTime + self.nTimeoutRecoConfirmation
        else:
            timerReco = self.beginTime + self.nTimeoutReco
        self.bHasAlreadyHearingEyes = False
        nEarLedsNextIndex = 0
        nEyesLed = -1
        while( self.bRecoIsWaitingForVoice or self.bRecoIsHearingOrAnalysing ):
            if( self.bMustStop ):
                try:
                    self.timeToReply(time.time() - self.beginTime)
                except:
                    pass
                break
            if( self.bRecoIsWaitingForVoice ):
                if( timerReco < time.time() ):
                    try:
                        self.timeToReply(timerReco - self.beginTime)
                    except:
                        pass
                    self.sRecoInterruption = "timeout"
                    break
            nEarLedsNextIndex = self.ledsEarsTurnOneStep( nEarLedsNextIndex )
            nEyesLed += 1
            self.ledsEyesTurnOneStep( 0x0055FF, nEyesLed%8 )
            time.sleep( 0.2 )

    def ledsEarsTurnOneStep(self, nEarLedsNextIndex):
        "One step of ears LEDS sequence (turn) when the robot is in speech recognition."
        if( self.bActivateEarsLight ):
            nNbrLedByEars = 10
            rTime = 0.7
            strTemplate = "Ears/Led/%s/%dDeg/Actuator/Value"
            nAngle = (360/nNbrLedByEars) * nEarLedsNextIndex
            # update index before sending movement in case of a fast/concurrent call of the function
            nEarLedsNextIndex -= 1 # more beautiful to turn in this way
            if( nEarLedsNextIndex < 0 ):
                nEarLedsNextIndex = nNbrLedByEars-1
            self.leds.post.fade( strTemplate % ( "Left", nAngle ), 1.0, rTime )
            self.leds.post.fade( strTemplate % ( "Right", nAngle ), 1.0, rTime )
            self.leds.post.fade( strTemplate % ( "Left", nAngle ), 0.0, rTime*1.2 )
            self.leds.post.fade( strTemplate % ( "Right", nAngle ), 0.0, rTime*1.2 )
        return nEarLedsNextIndex

    def ledsEyesTurnOneStep(self, nColor, nLed):
        "One step of eyes LEDS sequence (turn) when the robot is in speech recognition."
        if( self.bActivateEyesLight ):
            rTime = 0.7
            if( self.bRecoIsHearingOrAnalysing ):
                if( not self.bHasAlreadyHearingEyes ):
                    self.leds.fadeRGB( "FaceLeds", 0xF4FF22, 0.1 )
                    # start headcheck animation
                    if( self.nFrameNumber != self.aFrameNumbers["headCheck"] ):
                        self.nFrameNumber = self.aFrameNumbers["headCheck"]
                        try:
                            self.gotoAndStop(self.nFrameNumber)
                        except:
                            pass
                    self.bHasAlreadyHearingEyes = True
            elif( self.bRecoIsWaitingForVoice ):
                self.leds.post.fadeRGB( "FaceLed%d" % (nLed) , nColor, rTime )
                self.leds.post.fadeRGB( "FaceLed%d" % (nLed) , 0x000000, rTime*1.25 )

    def ledsChangeOnTactile(self):
        self.bBrainAnimPaused = True
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0x0055FF, rDuration )
        self.setLedsBrain( 0.5, int(rDuration * 1000) )
        time.sleep( 0.3 )
        rDuration = 0.2
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0xFFFFFF, rDuration )
        self.setLedsBrain( 0., int(rDuration * 1000) )
        time.sleep( 0.2 )
        self.bBrainAnimPaused = False

    def loopLedsBrainTurn(self):
        self.setLeds( 0xFFFFFF, 0xFFFFFF, 0. )
        rIntensity = 0.5
        nTime = 50
        bAlreadyPaused = False
        while( self.bInTactileSensorMenu ):
            if( not self.bBrainAnimPaused ):
                if( self.nFront == 1 or self.nMiddle == 1 or self.nRear == 1 ):
                    if( not bAlreadyPaused ):
                        bAlreadyPaused = True
                        self.setLedsBrain( 0., 50 )
                else:
                    bAlreadyPaused = False
                    if( self.bActivateBrainLight ):
                        for i in range( 12 ):
                            if( not self.bBrainAnimPaused ):
                                riseTime = self.dcm.getTime(nTime)
                                strDeviceName = self.getBrainLedName(i)
                                self.dcm.set( [ strDeviceName, "Merge",  [[ rIntensity, riseTime ]] ] )
                                time.sleep( nTime/1000. )
                                if( not self.bBrainAnimPaused ):
                                    self.dcm.set( [ strDeviceName, "Merge",  [[ 0.0, riseTime + int(nTime)/4 ]] ] )
            time.sleep( nTime/1000. )
        self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )

    def loopLedsBrainTwinkle(self):
        rIntensity = 0.5
        bOnStep = True
        bAlreadyPaused = False
        while( not self.bInTactileSensorMenu and self.bIsRunning ):
            if( not self.bBrainAnimPaused ):
                if( self.nFront == 1 or self.nMiddle == 1 or self.nRear == 1 ):
                    if( not bAlreadyPaused ):
                        bAlreadyPaused = True
                        self.setLedsBrain( 0., 50 )
                else:
                    bAlreadyPaused = False
                    if( bOnStep ):
                        self.setLedsBrain( rIntensity, 700 )
                        bOnStep = False
                    else:
                        self.setLedsBrain( 0.0, 700 )
                        bOnStep = True
            time.sleep( 1 )

    def setLedsBrain(self, rIntensity, rTimeMs):
        "One step of brain LEDS sequence (twinkle) when the robot is in speech recognition."
        if( self.bActivateBrainLight ):
            riseTime = self.dcm.getTime( rTimeMs )
            for i in range( 12 ):
                strDeviceName = self.getBrainLedName(i)
                self.dcm.set( [ strDeviceName, "Merge",  [[ rIntensity, riseTime ]] ] )

# TACTILE SENSOR MENU -------------------------------------------------------------------------------------

    def onAlternativeModalityAction(self, p):
        "Process actions from alternative modalities (sequence from the tactile sensor, simple click on the torso button...)."
        if( not self.bIsRunning ): # if the box is not running
            return # then go out without doing a thing
        if( not self.bInTactileSensorMenu ): # if we are not in the tactile sensor menu (so if we are in the question-recognition-reaction loop)
            if( p in ["TapFront", "TapMiddle", "TapRear", "LongFront", "LongMiddle", "LongRear"] ):
                bTTSRunning = False # to know if TTS is running
                for idTTS in self.aIdsTTS:
                    if( self.tts.isRunning( idTTS )):
                        bTTSRunning = True
                if( bTTSRunning ): # if TTS is running
                    # skip the TTS
                    self.skipTTS()
                else: # if TTS was not running (so if in recognition)
                    # prepare to start the tactile sensor menu
                    self.bInTactileSensorMenu = True
                    # and stop the question-recognition-reaction loop
                    self.goOutOfQuestionRecoReaction()
                    self.sRecoInterruption = "onTactileSensor"
                    # start the tactile sensor menu
                    self.sayCurrentChoice()
                    # start counting timeout
                    self.rTimeWhenActionMadeInTactileMenu = time.time()
                    thread.start_new_thread( self.loopCheckTimeoutInTactileMenu, (self.rTimeWhenActionMadeInTactileMenu,) )
            elif( p in ["Tap", "CalmDown"] ):
                # skip the TTS
                self.skipTTS()
                # then stop everything and cancel the question
                self.goOut( self.asExitWords[0], "onTactileSensor" )
                self.sRecoInterruption = "onTactileSensor"
                self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )
        else: # if we are in the tactile sensor menu
            self.rTimeWhenActionMadeInTactileMenu = -1.
            if( p in ["TapFront"] ):
                bTTSRunning = False # to know if TTS is running
                for idTTS in self.aIdsTTS:
                    if( self.tts.isRunning( idTTS ) ):
                        bTTSRunning = True
                if( self.bIsSayingChoice or not bTTSRunning ): # else just skip the TTS (in the sayCurrentChoice function)
                    # change choice
                    self.nIndexChoice += 1
                    if( self.nIndexChoice >= len( self.aChoices ) ):
                        self.nIndexChoice = 0
                # say the choice in the tactile sensor menu
                self.sayCurrentChoice()
                self.timeoutManagingInTactileMenu()
            elif( p in ["TapRear"] ):
                bTTSRunning = False # to know if TTS is running
                for idTTS in self.aIdsTTS:
                    if( self.tts.isRunning( idTTS )):
                        bTTSRunning = True
                if( self.bIsSayingChoice or not bTTSRunning ): # else just skip the TTS (in the sayCurrentChoice function)
                    # change choice
                    self.nIndexChoice -= 1
                    if( self.nIndexChoice < 0 ):
                        self.nIndexChoice = len( self.aChoices ) - 1
                # say the choice in the tactile sensor menu
                self.sayCurrentChoice()
                self.timeoutManagingInTactileMenu()
            elif( p in ["TapMiddle", "LongMiddle"] ):
                self.rTimeWhenActionMadeInTactileMenu = time.time()
                rTimeForThisAction = self.rTimeWhenActionMadeInTactileMenu
                bWasSayingChoice = self.bIsSayingChoice
                bTTSRunning = False # to know if TTS is running
                for idTTS in self.aIdsTTS:
                    if( self.tts.isRunning( idTTS )):
                        bTTSRunning = True
                # skip the TTS if it is running
                self.skipTTS()
                if( bWasSayingChoice or not bTTSRunning ):
                    # validate choice
                    thread.start_new_thread( self.ledsUnderstood, (False, True) )
                    if( self.aChoices[self.nIndexChoice][0] == self.asRepeatWords[0] ):
                        self.repeatWhenNoQuestion()
                        # launch TTS
                        idTTS = -1
                        if( self.sQuestion != ""):
                            idTTS = self.tts.post.say( self.sQuestion + "\\Pau=300\\" )
                            self.aIdsTTS.append( idTTS )
                            self.logger.debug( "Robot says: " + str(self.sQuestion) )
                        # wait for the end of the TTS
                        if( idTTS != -1 ):
                            try:
                                self.tts.wait( idTTS, 0 )
                            except:
                                self.logger.debug( "Warning: Could not wait the TTS." )
                    else:
                        self.reactionWordUnderstood( [ self.aChoices[self.nIndexChoice][0], 1.0 ] )
                if( self.bIsRunning and rTimeForThisAction == self.rTimeWhenActionMadeInTactileMenu ): #$$$
                    self.rTimeWhenActionMadeInTactileMenu = -1.
                    # say the choice in the tactile sensor menu
                    self.sayCurrentChoice()
                    self.timeoutManagingInTactileMenu()
            elif( p == "LongFront" ):
                if( not self.bPressed ):
                    self.bPressed = True
                    bLastElementSaid = False
                    while( self.bPressed ):
                        if( self.nFront == 0 ):
                            self.bPressed = False
                            break
                        bTTSRunning = False # to know if TTS is running
                        for idTTS in self.aIdsTTS:
                            if( self.tts.isRunning( idTTS )):
                                bTTSRunning = True
                        if( self.bIsSayingChoice or not bTTSRunning ):
                            # change choice
                            self.nIndexChoice += 1
                            if( self.nIndexChoice >= len( self.aChoices ) - 1 ):
                                self.nIndexChoice = len( self.aChoices ) - 1
                                if( not bLastElementSaid ):
                                    bLastElementSaid = True
                                    # say the choice in the tactile sensor menu
                                    thread.start_new_thread( self.sayCurrentChoice, () )
                            else:
                                # say the choice in the tactile sensor menu
                                thread.start_new_thread( self.sayCurrentChoice, () )
                        else:
                            if( self.nIndexChoice == len( self.aChoices ) - 1 ):
                                bLastElementSaid = True
                            # say the choice in the tactile sensor menu
                            thread.start_new_thread( self.sayCurrentChoice, () )
                        for i in range(8):
                            if( self.nFront == 0 ):
                                self.bPressed = False
                                break
                            time.sleep(0.1)
                    for idTTS in self.aIdsTTS:
                        if( self.tts.isRunning( idTTS ) ):
                            try:
                                self.tts.wait( idTTS, 0 )
                            except:
                                self.logger.debug( "Warning: Could not wait the TTS." )
                    self.timeoutManagingInTactileMenu()
            elif( p == "LongRear" ):
                if( not self.bPressed ):
                    self.bPressed = True
                    bFirstElementSaid = False
                    while( self.bPressed ):
                        if( self.nRear == 0 ):
                            self.bPressed = False
                            break
                        bTTSRunning = False # to know if TTS is running
                        for idTTS in self.aIdsTTS:
                            if( self.tts.isRunning( idTTS )):
                                bTTSRunning = True
                        if( self.bIsSayingChoice or not bTTSRunning ):
                            # change choice
                            self.nIndexChoice -= 1
                            if( self.nIndexChoice <= 0 ):
                                self.nIndexChoice = 0
                                if( not bFirstElementSaid ):
                                    bFirstElementSaid = True
                                    # say the choice in the tactile sensor menu
                                    thread.start_new_thread( self.sayCurrentChoice, () )
                            else:
                                # say the choice in the tactile sensor menu
                                thread.start_new_thread( self.sayCurrentChoice, () )
                        else:
                            if( self.nIndexChoice == 0 ):
                                bFirstElementSaid = True
                            # say the choice in the tactile sensor menu
                            thread.start_new_thread( self.sayCurrentChoice, () )
                        for i in range(8):
                            if( self.nRear == 0 ):
                                self.bPressed = False
                                break
                            time.sleep(0.1)
                    for idTTS in self.aIdsTTS:
                        if( self.tts.isRunning( idTTS ) ):
                            try:
                                self.tts.wait( idTTS, 0 )
                            except:
                                self.logger.debug( "Warning: Could not wait the TTS." )
                    self.timeoutManagingInTactileMenu()
            elif( p in ["Tap", "CalmDown"] ):
                # then stop everything and cancel the question
                self.goOut( self.asExitWords[0], "onTactileSensor" )

    def sayCurrentChoice(self):
        "In the tactile sensor menu, make the robot say the current selected choice"
        self.bIsSayingChoice = True
        rTimeCurrent = time.time()
        self.rTimeLastChoiceSaid = rTimeCurrent
        # stop previous TTS
        self.skipTTS()
        # launch TTS
        idTTS = -1
        if( self.aChoices[ self.nIndexChoice ][0] != "" ):
            if( self.nFrameNumber != self.aFrameNumbers["headDown"] ):
                self.nFrameNumber = self.aFrameNumbers["headDown"]
                try:
                    self.gotoAndStop(self.nFrameNumber)
                except:
                    pass
            sentence = self.aChoices[ self.nIndexChoice ][0] + "?"
            idTTS = self.tts.post.say( sentence )
            self.aIdsTTS.append( idTTS )
            self.logger.debug( "Robot says: " + str(sentence) )
            # launch flash leds
            thread.start_new_thread( self.ledsChangeOnTactile, () )
        if( idTTS != -1 ):
            try:
                self.tts.wait( idTTS, 0 )
            except:
                self.logger.debug( "Warning: Could not wait the TTS." )
        if( self.rTimeLastChoiceSaid == rTimeCurrent ):
            self.rTimeLastChoiceSaid = -1.
            self.bIsSayingChoice = False

    def timeoutManagingInTactileMenu(self):
        # check if there has been an other action with tts made while this one was processed
        bTTSRunning = False # to know if TTS is running
        for idTTS in self.aIdsTTS:
            if( self.tts.isRunning( idTTS )):
                bTTSRunning = True
        if( not bTTSRunning ):
            # start counting timeout
            self.rTimeWhenActionMadeInTactileMenu = time.time()
            thread.start_new_thread( self.loopCheckTimeoutInTactileMenu, (self.rTimeWhenActionMadeInTactileMenu,) )

    def loopCheckTimeoutInTactileMenu(self, rTimeForThisAction):
        nTimeout = time.time() + self.nTimeoutTactile
        if( self.rTimeWhenActionMadeInTactileMenu == rTimeForThisAction ):
            while( time.time() < nTimeout and self.rTimeWhenActionMadeInTactileMenu == rTimeForThisAction and self.bIsRunning ):
                time.sleep( 0.1 )
            if( self.rTimeWhenActionMadeInTactileMenu != rTimeForThisAction ):
                self.nCountNoReply = 0
            elif( self.bIsRunning ):
                self.rTimeWhenActionMadeInTactileMenu = -1.
                self.nCountNoReply += 1
                if( self.nCountNoReply >= self.nMaxCountNoReply ):
                    self.goOut( self.asExitWords[0], "timeout" )
                else:
                    bTTSRunning = False # to know if TTS is running
                    for idTTS in self.aIdsTTS:
                        if( self.tts.isRunning( idTTS )):
                            bTTSRunning = True
                    if( not bTTSRunning ):
                        # say the choice in the tactile sensor menu
                        self.sayCurrentChoice()
                        # start counting timeout
                        self.rTimeWhenActionMadeInTactileMenu = time.time()
                        thread.start_new_thread( self.loopCheckTimeoutInTactileMenu, (self.rTimeWhenActionMadeInTactileMenu,) )

# TACTILE SENSOR HANDLER -------------------------------------------------------------------------------

    def initSeqDetected(self):
        "Initialize the sequence handler."
        self.bSeqStarted = False
        self.aDetectedSeqs = []
        self.aDetectedSeqs.extend(self.aSeqs)
        for seq in self.aDetectedSeqs:
            seq["index"] = 0
            seq["previousStepTime"] = 0

    def convertToArrayOfPossibleStates(self, states):
        "Check if the states described in the sequences using a string are in the right syntax, and then convert them to an array of the possible states."
        aStates = []
        aStates3 = [[1, 1, 1]]
        aStates2 = [[0, 1, 1], [1, 0, 1], [1, 1, 0]]
        aStates1 = [[1, 0, 0], [0, 1, 0], [0, 0, 1]]
        aStates0 = [[0, 0, 0]]
        try:
            if( int(states) == states ): # if states is an integer
                states = str(states)
        except:
            pass
        if( self.isString(states) ):
            if( not states in ["*", "0+", "0", "0-", "1+", "1", "1-", "2+", "2", "2-", "3+", "3", "3-", "F+", "F", "F-", "M+", "M", "M-", "R+", "R", "R-"] ):
                raise Exception( "Error in sequences states description syntax: description expected in " + str(["*", "0+", "0", "0-", "1+", "1", "1-", "2+", "2", "2-", "3+", "3", "3-", "F+", "F", "F-", "M+", "M", "M-", "R+", "R", "R-"]) + " but " + str(p) + " found with this type: " + str(type(p)) )
            if( states in ["*", "0+", "1+", "2+", "3+", "3", "3-", "F+", "M+", "R+"] ):
                aStates.extend(aStates3)
            if( states in ["*", "0+", "1+", "2+", "2", "2-", "3-"] ):
                aStates.extend(aStates2)
            if( states in ["*", "0+", "1+", "1", "1-", "2-", "3-"] ):
                aStates.extend(aStates1)
            if( states in ["*", "0+", "0", "0-", "1-", "2-", "3-", "F-", "M-", "R-"] ):
                aStates.extend(aStates0)
            if( states in ["F", "F+", "F-"] ):
                aStates.append([1, 0, 0])
            if( states in ["M", "M+", "M-"] ):
                aStates.append([0, 1, 0])
            if( states in ["R", "R+", "R-"] ):
                aStates.append([0, 0, 1])
            if( states in ["F+", "M+"] ):
                aStates.append([1, 1, 0])
            if( states in ["R+", "M+"] ):
                aStates.append([0, 1, 1])
            if( states in ["F+", "R+"] ):
                aStates.append([1, 0, 1])
        elif( self.isArray(states) ):
            if( self.isArray(states[0]) ):
                aStates = states
            elif( int(states[0]) == states[0] ):
                aStates = [states]
            else:
                raise Exception( "Error in sequences states description syntax: description expected in " + str(["*", "0+", "0", "0-", "1+", "1", "1-", "2+", "2", "2-", "3+", "3", "3-", "F+", "F", "F-", "M+", "M", "M-", "R+", "R", "R-"]) + " but " + str(p) + " found with this type: " + str(type(p)) )
        else:
            raise Exception( "Error in sequences states description syntax:\nstring, array or int expected but " + str(type(p)) + " found" )
        return aStates

    def checkIfSeqsCorrespondingLeft(self, param):
        "If the sequence handler is done (there is no sequence detected left or the first in the list corresponds), then reinitialize the sequence handler, and give the corresponding sequence if there is one."
        if( self.aDetectedSeqs == [] ):
            # then no sequence corresponding in the list
            self.initSeqDetected()
        else:
            if( self.aDetectedSeqs[0]["index"] == -1 ): # if first sequence in left ones corresponds
                # then it is this sequence which is played
                thread.start_new_thread( self.onAlternativeModalityAction, (self.aDetectedSeqs[0]["name"],) )
                self.initSeqDetected()
        self.mutexCheckIfSeqsCorrespondingLeft.unlock()

    def loopCheckTimeoutMax(self, nTimeoutMax, seq, currentState, currentTime):
        "When timeout ellapsed, check the sequence status and process it."
        nPreviousIndex = seq["index"]
        time.sleep(nTimeoutMax + 0.1)
        aSeqsTemp = []
        aSeqsTemp.extend( self.aDetectedSeqs )
        currentState = [self.nFront, self.nMiddle, self.nRear]
        currentTime = time.time()
        if( nPreviousIndex == seq["index"] and not self.mutexProcessCurrentState.test() and not (1 in currentState) ): # if no change in the sequence step but timeout ellapsed and sequence handler is not processing (so if there is no action from the user and the sequence is still at the same point)
            if( seq in aSeqsTemp and seq["index"] != -1 ): # but if sequence is still in the possible ones and not completed
                if( currentState in seq["statesAndTimeout"][seq["index"]] ): # last check if the current state corresponds to the next one
                    # then we go to the next step
                    seq["previousStepTime"] = currentTime
                    seq["index"] += 2
                    if( seq["index"] > len( seq["statesAndTimeout"] ) ): # if there is no more step
                        seq["index"] = -1 # then the sequence is completed
                    else: # if there is at least one step left
                        nTimeoutMin = 0
                        nTimeoutMax = 5
                        if( self.isArray(seq["statesAndTimeout"][seq["index"]-1]) ):
                            if( seq["statesAndTimeout"][seq["index"]-1][0] < 0 ):
                                nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][0]
                                nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][1]
                            else:
                                nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][0]
                                nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][1]
                        else:
                            if( seq["statesAndTimeout"][seq["index"]-1] < 0 ):
                                nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1]
                            else:
                                nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1]
                        thread.start_new_thread( self.loopCheckTimeoutMax, (nTimeoutMax, seq, currentState, currentTime) )
                else:
                    # then remove the sequence from the possible ones
                    aSeqsTemp.remove(seq)
                    self.aDetectedSeqs = aSeqsTemp
                self.mutexCheckIfSeqsCorrespondingLeft.lock( self.checkIfSeqsCorrespondingLeft, None )

    def loopCheckTimeoutMin(self, nTimeoutMin, seq):
        "Wait that the minimum timeout ellapse to check if the new tactile sensor state corresponds to the expected one for this sequence."
        if( nTimeoutMin != 0 ):
            nPreviousIndex = seq["index"]
            time.sleep(nTimeoutMin - time.time() + seq["previousStepTime"])
            currentTime = time.time()
            currentState = [self.nFront, self.nMiddle, self.nRear]
            self.mutexProcessCurrentState.lock( self.processCurrentState, [0, currentState, currentTime] )

    def updateDetectedSeqs(self, seq, aSeqsTemp, currentState, currentTime):
        "Update a detected sequence."
        if( seq["index"] > 0 ): # if not the first step
            nTimeoutMin = 0
            nTimeoutMax = 5
            if( self.isArray(seq["statesAndTimeout"][seq["index"]-1]) ):
                if( seq["statesAndTimeout"][seq["index"]-1][0] < 0 ):
                    nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][0]
                    nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][1]
                else:
                    nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][0]
                    nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][1]
            else:
                if( seq["statesAndTimeout"][seq["index"]-1] < 0 ):
                    nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1]
                else:
                    nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1]
            if( currentTime > nTimeoutMax + seq["previousStepTime"] ): # if timeout of this step ellapsed
                aSeqsTemp.remove(seq) # then it is not this sequence which is played
            elif( not (currentState in seq["statesAndTimeout"][seq["index"]]) ): # if the current state does not correspond to one of the described ones but the timeout of this step did not ellaspe
                # then we check that this state could be an intermediate one
                aIntermediateStates = [[], [], []]
                for i in range( len( currentState ) ):
                    for j in range( len( seq["statesAndTimeout"][seq["index"]] ) ):
                        aIntermediateStates[i].append( seq["statesAndTimeout"][seq["index"]][j][i] )
                    for j in range( len( seq["statesAndTimeout"][seq["index"]-2] ) ):
                        aIntermediateStates[i].append( seq["statesAndTimeout"][seq["index"]-2][j][i] )
                bIsIntermediate = True
                for i in range( len( currentState ) ):
                    bIsIntermediate = bIsIntermediate and ( currentState[i] in aIntermediateStates[i] )
                if( not bIsIntermediate ):
                    aSeqsTemp.remove(seq) # then it is not this sequence which is played
            else: # if the current state correspond to one of the described ones
                if( currentTime > nTimeoutMin + seq["previousStepTime"] ): # if the minimum time to wait the next step is ellapsed
                    # then we go to the next step
                    seq["previousStepTime"] = currentTime
                    seq["index"] += 2
                    if( seq["index"] > len( seq["statesAndTimeout"] ) ): # if there is no more step
                        seq["index"] = -1 # then the sequence is completed
                    else: # if there is at least one step left
                        # start clock to timeout
                        nTimeoutMin = 0
                        nTimeoutMax = 5
                        if( self.isArray(seq["statesAndTimeout"][seq["index"]-1]) ):
                            if( seq["statesAndTimeout"][seq["index"]-1][0] < 0 ):
                                nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][0]
                                nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][1]
                            else:
                                nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][0]
                                nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][1]
                        else:
                            if( seq["statesAndTimeout"][seq["index"]-1] < 0 ):
                                nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1]
                            else:
                                nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1]
                        thread.start_new_thread( self.loopCheckTimeoutMin, (nTimeoutMin, seq) )
                        thread.start_new_thread( self.loopCheckTimeoutMax, (nTimeoutMax, seq, currentState, currentTime) )
                else: # if the minimum time to wait the next step is not ellapsed
                    # then we are going to wait until it is to check then
                    thread.start_new_thread( self.loopCheckTimeoutMin, (nTimeoutMin, seq) )
        elif( seq["index"] == 0 ): # for the first step
            if( currentState in seq["statesAndTimeout"][seq["index"]] ): # if the current state correspond to one of the described ones
                # then we go to the next step
                seq["previousStepTime"] = currentTime
                seq["index"] += 2
                if( seq["index"] > len( seq["statesAndTimeout"] ) ): # if there is no more step
                    seq["index"] = -1 # then the sequence is completed
                else: # if there is at least one step left
                    # start clock to timeout
                    nTimeoutMin = 0
                    nTimeoutMax = 5
                    if( self.isArray(seq["statesAndTimeout"][seq["index"]-1]) ):
                        if( seq["statesAndTimeout"][seq["index"]-1][0] < 0 ):
                            nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][0]
                            nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][1]
                        else:
                            nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][0]
                            nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][1]
                    else:
                        if( seq["statesAndTimeout"][seq["index"]-1] < 0 ):
                            nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1]
                        else:
                            nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1]
                    thread.start_new_thread( self.loopCheckTimeoutMin, (nTimeoutMin, seq) )
                    thread.start_new_thread( self.loopCheckTimeoutMax, (nTimeoutMax, seq, currentState, currentTime) )
            else: # if the current state does not correspond to the first described
                aSeqsTemp.remove(seq) # then it is not this sequence which has just been started

    def updateSeqsHandler(self, currentState, currentTime):
        "Update list of detected sequences."
        aSeqsTemp = []
        aSeqsTemp.extend( self.aDetectedSeqs )
        for seq in self.aDetectedSeqs:
            self.updateDetectedSeqs( seq, aSeqsTemp, currentState, currentTime )
        self.aDetectedSeqs = aSeqsTemp
        self.mutexCheckIfSeqsCorrespondingLeft.lock( self.checkIfSeqsCorrespondingLeft, None )

    def processCurrentState(self, param):
        "Process the current tactile sensor state."
        pValue = param[0]
        currentState = param[1]
        currentTime = param[2]
        if( pValue == 1 and not self.bSeqStarted ):
            self.bSeqStarted = True
            for seq in self.aDetectedSeqs:
                seq["previousStepTime"] = currentTime
        # update sequences handler
        if( self.bSeqStarted ):
            self.updateSeqsHandler(currentState, currentTime)
        self.mutexProcessCurrentState.unlock()

    def onFrontTactilTouched(self, param):
        "Handle an action (touch or release) on the front tactile sensor."
        self.logger.debug( "Change detected on the front tactile sensor: " + str(param[0]) )
        pValue = param[0]
        currentTime = param[1]
        currentState = [pValue, self.nMiddle, self.nRear]
        self.nFront = pValue
        self.mutexProcessCurrentState.lock( self.processCurrentState, [pValue, currentState, currentTime] )
        self.mutexTactilTouched.unlock()

    def onMiddleTactilTouched(self, param):
        "Handle an action (touch or release) on the middle tactile sensor."
        self.logger.debug( "Change detected on the middle tactile sensor: " + str(param[0]) )
        pValue = param[0]
        currentTime = param[1]
        currentState = [self.nFront, pValue, self.nRear]
        self.nMiddle = pValue
        self.mutexProcessCurrentState.lock( self.processCurrentState, [pValue, currentState, currentTime] )
        self.mutexTactilTouched.unlock()

    def onRearTactilTouched(self, param):
        "Handle an action (touch or release) on the rear tactile sensor."
        self.logger.debug( "Change detected on the rear tactile sensor: " + str(param[0]) )
        pValue = param[0]
        currentTime = param[1]
        currentState = [self.nFront, self.nMiddle, pValue]
        self.nRear = pValue
        self.mutexProcessCurrentState.lock( self.processCurrentState, [pValue, currentState, currentTime] )
        self.mutexTactilTouched.unlock()

    def onTactilTouched(self, pDataName, pValue, pMessage):
        "Handle an action (touch or release) on the tactile sensor."
        self.mutexTactilTouched.lock( getattr( self, "on" + pDataName ), [pValue, time.time()] )

# OUTPUTS ACTIVATION --------------------------------------------------------------------------------------

    def goOut(self, outputName, cancelReason = ""):
        "Activate the right output (a choice output or the other output)."
        try:
            ALMemory.unsubscribeToEvent( "FrontTactilTouched", self.getName() )
            ALMemory.unsubscribeToEvent( "MiddleTactilTouched", self.getName() )
            ALMemory.unsubscribeToEvent( "RearTactilTouched", self.getName() )
        except:
            pass
        self.bGoOut = True
        self.bInTactileSensorMenu = False
        if( outputName in self.asExitWords ):
            try:
                self.other( cancelReason )
                self.logger.debug( "Output 'other' stimulated because cancel asked: " + str(cancelReason) + "." )
            except:
                try:
                    self.onStopped( cancelReason )
                    self.logger.debug( "Output 'onStopped' stimulated because cancel asked: " + str(cancelReason) + "." )
                except:
                    try:
                        self.onStopped()
                        self.logger.debug( "Output 'onStopped' stimulated because cancel asked." )
                    except:
                        choregraphe = ALProxy( "ALChoregraphe" )
                        choregraphe.onPythonError( self.getName(), "goOut", "Invalid output: the main output name needs to be 'other', and it needs to be dynamic (because it can be either a string, or an integer)." )
        else:
            nOutput = -1
            for i in range( len (self.aChoices) - len (self.aDefaultChoices) ):
                if( nOutput == -1 ):
                    if( outputName in self.aChoices[i+len( self.aDefaultChoices )] ):
                        nOutput = i
            if( nOutput != -1):
                if( self.bExternChoices ):
                    if( self.bRepeatValidatedChoice ):
                        self.skipTTS()
                        self.tts.say( outputName )
                        self.logger.debug( "Robot says: " + str(outputName) )
                    try:
                        self.other( self.aChoiceIndexes[nOutput] )
                        self.logger.debug( "Output 'other' stimulated with: " + str(self.aChoiceIndexes[nOutput]) + " (corresponding to the choice '" + str(self.aChoices[nOutput+len( self.aDefaultChoices )][0]) + "')." )
                    except:
                        try:
                            self.onStopped( self.aChoiceIndexes[nOutput] )
                            self.logger.debug( "Output 'onStopped' stimulated with: " + str(self.aChoiceIndexes[nOutput]) + " (corresponding to the choice '" + str(self.aChoices[nOutput+len( self.aDefaultChoices )][0]) + "')." )
                        except:
                            choregraphe = ALProxy( "ALChoregraphe" )
                            choregraphe.onPythonError( self.getName(), "goOut", "Invalid type of output: using the input 'choicesList', the main output needs to be dynamic (because it can be either a string, or an integer)." )
                else:
                    if( self.bRepeatValidatedChoice ):
                        self.skipTTS()
                        self.tts.say( outputName )
                        self.logger.debug( "Robot says: " + str(outputName) )
                    try:
                        func = getattr( self, "output_" + str(self.aChoiceIndexes[nOutput]+1) ) #+1 because the first one is output_1 corresponding to the element 0 in the list.
                        func(outputName)
                        self.logger.debug( "Output 'output_" + str(self.aChoiceIndexes[nOutput]+1) + "' stimulated with: " + str(outputName) + "." )
                    except:
                        choregraphe = ALProxy( "ALChoregraphe" )
                        choregraphe.onPythonError( self.getName(), "goOut", "Invalid output: the output 'output_" + str(self.aChoiceIndexes[nOutput]+1) + "' was expected to be stimulated with: " + str(outputName) + " but could not." )
        self.onUnload()
        # come back to an initial position and stop movement animation
        if( self.nFrameNumber != self.aFrameNumbers["end"] ):
            self.nFrameNumber = self.aFrameNumbers["end"]
            try:
                self.gotoAndStop(self.nFrameNumber)
            except:
                pass

# UNLOAD --------------------------------------------------------------------------------------------------

    def goOutOfQuestionRecoReaction(self):
        "Set some variables to go out of the question-recognition-reaction loop and reinitialize other variables which are going to be used again only on the next start of this box."
        self.bGoOut = True
        self.bMustStop = True
        self.nCountFailure = 0
        self.nCountNoReply = 0
        self.bInConfirmation = False
        self.bVocabularyLoaded = False
        self.skipTTS()
        for idTTS in self.aIdsTTS:
            try:
                self.aIdsTTS.remove( idTTS )
            except:
                self.logger.debug( "Warning: The task ID corresponding to the Text-To-Speech could not have been removed from the ID tasks list." )
        try:
            ALMemory.unsubscribeToEvent( "WordRecognized", self.getName() )
            self.bRecoIsWaitingForVoice = False
            self.bRecoIsHearingOrAnalysing = False
            self.logger.debug( "Speech recognition stopped." )
            ALMemory.unsubscribeToEvent( "SpeechDetected", self.getName() )
        except:
            pass

    def onUnload(self):
        "Reinitialize variables to default state."
        self.goOutOfQuestionRecoReaction()
        self.bExternChoices = False
        self.bInTactileSensorMenu = False
        try:
            ALMemory.unsubscribeToEvent( "FrontTactilTouched", self.getName() )
            ALMemory.unsubscribeToEvent( "MiddleTactilTouched", self.getName() )
            ALMemory.unsubscribeToEvent( "RearTactilTouched", self.getName() )
        except:
            pass
        self.bIsRunning = False]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is&#x0A;received on this input. The signal can be&#x0A;either a string so that NAO asks a&#x0A;question before the recognition of a&#x0A;choice, or a bang so that the speech&#x0A;recognition starts immediately without any&#x0A;question." id="2" />
                                                                    <Input name="choicesList" type="0" type_size="1" nature="1" inner="0" tooltip="To have extern choices list (for example,&#x0A;depending on extern variables).&#x0A;!! Warning !! : Must be set before each&#x0A;time the box is started (with onStart&#x0A;input). Otherwise, the choices displayed&#x0A;on the box will be selected." id="3" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip='Box behavior stops when a signal is&#x0A;received on this input, the &apos;other&apos; output is&#x0A;stimulated by &quot;onStop&quot;.' id="4" />
                                                                    <Output name="other" type="0" type_size="1" nature="1" inner="0" tooltip='When the user skipped the question, this output gives how it has been&#x0A;skipped. Gives also the number of the choice chosen in case of external&#x0A;choices.&#x0A;This output can be:&#x0A;- &quot;timeout&quot; if the user has not replied.&#x0A;- &quot;notUnderstood&quot; if the interaction with the speech recognition failed.&#x0A;- &quot;onStop&quot; if the onStop input has been activated.&#x0A;- &quot;wordRecognised&quot; if the exit command has been understood.&#x0A;- &quot;onTactileSensor&quot; if the user has tapped the tactile sensor of NAO.&#x0A;- an integer being the number of the external choice in the input list.' id="5" />
                                                                    <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                                                    <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                                                                    <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="8" />
                                                                    <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="9" />
                                                                    <Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="10" />
                                                                    <Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="" id="11" />
                                                                    <Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="" id="12" />
                                                                    <Parameter name="Activate head" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Head motion activation during the recognition and while NAO is&#x0A;talking." id="13" />
                                                                    <Parameter name="Activate arms" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Arms motion activation while NAO is talking." id="14" />
                                                                    <Parameter name="Activate legs" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Legs motion activation while NAO is talking." id="15" />
                                                                    <Parameter name="Minimum threshold to understand" inherits_from_parent="0" content_type="2" value="0.2" default_value="0.2" min="0" max="1" tooltip="Minimum threshold to get in order to be understood by NAO." id="16" />
                                                                    <Parameter name="Minimum threshold to be sure" inherits_from_parent="0" content_type="2" value="0.3" default_value="0.3" min="0" max="1" tooltip="Minimum threshold to get so that NAO would be sure about the user&apos;s&#x0A;answer. Below this threshold, NAO asks a confirmation about what has been&#x0A;understood." id="17" />
                                                                    <Parameter name="Speech recognition timeout when confirmation" inherits_from_parent="0" content_type="1" value="6" default_value="6" min="1" max="20" tooltip="When NAO asks if what he understood is correct, after this time, if there has been&#x0A;nothing heard, the speech recognition is stopped and the answer understood is&#x0A;considered as correct." id="18" />
                                                                    <Parameter name="Speech recognition timeout" inherits_from_parent="0" content_type="1" value="6" default_value="6" min="1" max="20" tooltip="After this time, if there has been nothing heard, the speech recognition is stopped&#x0A;and the question is repeated or is skipped." id="19" />
                                                                    <Parameter name="Maximum number of repetition when no reply" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="1" max="20" tooltip='After this number of times when the user did not reply, the question is skipped, and&#x0A;the output other is stimulated with &quot;timeout&quot;.' id="20" />
                                                                    <Parameter name="Repeat validated choice" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO repeats the validated choice when it exits the box." id="21" />
                                                                    <Parameter name="Activate ears light" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate ears light animation (turn, flash, etc...)." id="22" />
                                                                    <Parameter name="Activate eyes light" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate eyes light animation (turn, flash, etc...)." id="23" />
                                                                    <Parameter name="Activate brain light" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate brain light animation (turn, flash, etc...)." id="24" />
                                                                    <Parameter name="Tactile sensor menu timeout" inherits_from_parent="0" content_type="1" value="6" default_value="10" min="1" max="20" tooltip="After this time, if there has been no action made on the tactile sensor or the torso&#x0A;button, the choice currently selected is repeated or the question is skipped." id="25" />
                                                                    <Parameter name="Maximum number of repetition when failure" inherits_from_parent="0" content_type="1" value="3" default_value="5" min="1" max="20" tooltip='After this number of times when NAO did not understand the user, the question&#x0A;is skipped, and the output other is stimulated with &quot;notUnderstood&quot;.' id="26" />
                                                                    <Parameter name="Activate help when failure" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="When this parameter is activated, when NAO did not understand the user, he&#x0A;says some help enumerating available choices and attracting attention on the&#x0A;other available modalities (head tactile sensor)." id="27" />
                                                                    <Parameter name="Activate help command" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip='Enable the help command. So you can say &quot;help&quot; during the speech recognition&#x0A;and NAO will tell you more information.&#x0A;You will still be able to ask help by clicking the torso button.' id="28" />
                                                                    <Parameter name="Activate repeat command" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip='Activate the repeat command. So you can say &quot;repeat&quot; during the speech&#x0A;recognition and NAO will repeat the question.' id="29" />
                                                                    <Parameter name="Activate exit command" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip='Enable the exit command. So you can say &quot;exit&quot; during the speech recognition&#x0A;and the box will be stopped and the &apos;other&apos; output will be stimulated with&#x0A;&quot;wordRecognised&quot;.&#x0A;You will still be able to exit the box with&#x0A;the tactile sensor.' id="30" />
                                                                    <Parameter name="Sentences file" inherits_from_parent="0" content_type="4" value="/Aldebaran/choice_sentences.xml" default_value="/Aldebaran/choice_sentences.xml" tooltip="File containing all necessary sentences in each supported language." id="31" />
                                                                </Box>
                                                                <Box name="gotoVolume" id="2" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." x="579" y="105">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        pass

    def onInput_onStart(self):
        name = self.getParameter("frame name")
        self.log("%s -> %s" % (self.boxName, name))
        self.gotoAndStopParent(name)

    def onInput_onStop(self):
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame name" inherits_from_parent="0" content_type="3" value="Volume" default_value="" custom_choice="0" tooltip="" id="3" />
                                                                </Box>
                                                                <Box name="gotoVersion" id="8" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." x="586" y="495">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        pass

    def onInput_onStart(self):
        name = self.getParameter("frame name")
        self.log("%s -> %s" % (self.boxName, name))
        self.gotoAndStopParent(name)

    def onInput_onStop(self):
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame name" inherits_from_parent="0" content_type="3" value="Version" default_value="" custom_choice="0" tooltip="" id="3" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="10" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                <Link inputowner="10" indexofinput="2" outputowner="7" indexofoutput="4" />
                                                                <Link inputowner="7" indexofinput="2" outputowner="10" indexofoutput="5" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="10" indexofoutput="6" />
                                                                <Link inputowner="4" indexofinput="2" outputowner="10" indexofoutput="10" />
                                                                <Link inputowner="6" indexofinput="2" outputowner="10" indexofoutput="9" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="10" indexofoutput="8" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="10" indexofoutput="7" />
                                                                <Link inputowner="8" indexofinput="2" outputowner="10" indexofoutput="11" />
                                                                <Link inputowner="0" indexofinput="7" outputowner="10" indexofoutput="12" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="Language" index="37">
                                                            <Diagram scale="100">
                                                                <Box name="Set Language" id="3" tooltip="Select the language you would like Nao to use. Any following call to ALTextToSpeech (Say box for instance) will use this language." x="409" y="45">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.mynao = ALProxy("ALMyNao")

    def onInput_onStart(self, p):
        asr = ALProxy("ALSpeechRecognition")
        tts = ALProxy("ALTextToSpeech")

        # check if we asked for a new language
        if p == "":
            self.onNoChange()
        else:
            #Check that the language is installed.
            aLanguagesList = tts.getAvailableLanguages()

            if p in aLanguagesList:
                self.mynao.mynaoSet("/nao-life/language", p)
                self.onStopped()
            else:
                self.onNotAvailable()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                    <Output name="onNotAvailable" type="1" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                                    <Output name="onNoChange" type="1" type_size="1" nature="1" inner="0" tooltip="No new language was selected." id="5" />
                                                                </Box>
                                                                <Box name="LocalizedText" id="2" tooltip="LocalizedText" plugin="localizationbox_plugin" x="676" y="28">
                                                                    <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 现在我可以说{lang}了 ",
			"English" : " I now speak in {lang} ",
			"French" : " Je parle maintenant en {lang} ",
			"German" : "  ",
			"Italian" : "  ",
			"Japanese" : " 今話しているのは{lang} ",
			"Korean" : "  ",
			"Portuguese" : "  ",
			"Brazilian" : "  ",
			"Spanish" : " Ahora hablo en {lang} ",
			"Arabic" : "  ",
			"Polish" : "  ",
			"Czech" : "  ",
			"Dutch" : "  ",
			"Danish" : "  ",
			"Finnish" : " Otetaan käyttöön {lang} ",
			"Swedish" : "  ",
			"Russian" : "  ",
			"Turkish" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <chinese>现在我可以说{lang}了</chinese>
                                                                        <english>I now speak in {lang}</english>
                                                                        <french>Je parle maintenant en {lang}</french>
                                                                        <german></german>
                                                                        <italian></italian>
                                                                        <japanese>今話しているのは{lang}</japanese>
                                                                        <korean></korean>
                                                                        <portuguese></portuguese>
                                                                        <brazilian></brazilian>
                                                                        <spanish>Ahora hablo en {lang}</spanish>
                                                                        <arabic></arabic>
                                                                        <polish></polish>
                                                                        <czech></czech>
                                                                        <dutch></dutch>
                                                                        <danish></danish>
                                                                        <finnish>Otetaan käyttöön {lang}</finnish>
                                                                        <swedish></swedish>
                                                                        <russian></russian>
                                                                        <turkish></turkish>
                                                                        <language>2</language>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                </Box>
                                                                <Box name="SayLang" id="5" tooltip="Say the sentence received in the input. See box parameters for fine tuning of the voice." x="976" y="216">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[#coding=utf-8

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote
        self.dLanguages = {"French":"Français", "English":"English", "Spanish":"Español","Chinese":"中文","Finnish":"Suomi","Japanese":"日本語"}

    def onLoad(self):
        #puts code for box cleanup here
        self.ids = []

    def onUnload(self):
        #puts code for box cleanup here
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass

    def onInput_onStart(self, p):
        sLang = self.dLanguages[self.tts.getLanguage()]
        sentence = "\RSPD="+ str( self.getParameter("Speed") )+ "\ "
        sentence += "\VCT="+ str( self.getParameter("Voice Shaping") ) + "\ "
        sentence += str(p)
        sentence +=  "\RST\ "
        id = self.tts.post.say(sentence.format(lang=sLang))
        self.ids.append(id)
        self.tts.wait(id, 0)
        self.ids.remove(id)
        self.onStopped() # activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a string is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="Voice Shaping" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='This tag is used to modify at runtime the voice feature (tone, speed) in way slightly different of what pitch and speed modification does, giving a kind of &quot;gender or age modification &quot; effect.&#x0A;&#x0A;To better tune the effect, one should compensate the speed modification due to the value parameter. For exemple to keep an average constant speed, one should add 20% to speed parameter when decreasing 20% to the Voice Shaping (VCT) parameter :&#x0A;&#x0A;A quite good male derivation of female voice for example could be obtained using the following parameters: VCT=78.' id="5" />
                                                                    <Parameter name="Speed" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice." id="6" />
                                                                </Box>
                                                                <Box name="gotoStart" id="6" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." x="1035" y="56">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        pass

    def onInput_onStart(self):
        name = self.getParameter("frame name")
        self.log("%s -> %s" % (self.boxName, name))
        self.gotoAndStopParent(name)

    def onInput_onStop(self):
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame name" inherits_from_parent="0" content_type="3" value="Start" default_value="" custom_choice="0" tooltip="" id="3" />
                                                                </Box>
                                                                <Box name="AskLang" id="8" tooltip="Say some text. Note that you must open the box to enter the text." x="127" y="21">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Say Text" id="2" tooltip="Say the text set in parameters." x="369" y="50">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                    </Box>
                                                                                    <Box name="LocalizedText" id="8" tooltip="LocalizedText" plugin="localizationbox_plugin" x="86" y="49">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 请选择默认语言 ",
			"English" : " Select the language ",
			"French" : " Selectionnez une langue ",
			"German" : "  ",
			"Italian" : "  ",
			"Japanese" : " 言語を選んで下さい ",
			"Korean" : "  ",
			"Portuguese" : "  ",
			"Brazilian" : "  ",
			"Spanish" : " Escoje el idioma ",
			"Arabic" : "  ",
			"Polish" : "  ",
			"Czech" : "  ",
			"Dutch" : "  ",
			"Danish" : "  ",
			"Finnish" : " Valitse kieli. ",
			"Swedish" : "  ",
			"Russian" : "  ",
			"Turkish" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <chinese>请选择默认语言</chinese>
                                                                                            <english>Select the language</english>
                                                                                            <french>Selectionnez une langue</french>
                                                                                            <german></german>
                                                                                            <italian></italian>
                                                                                            <japanese>言語を選んで下さい</japanese>
                                                                                            <korean></korean>
                                                                                            <portuguese></portuguese>
                                                                                            <brazilian></brazilian>
                                                                                            <spanish>Escoje el idioma</spanish>
                                                                                            <arabic></arabic>
                                                                                            <polish></polish>
                                                                                            <czech></czech>
                                                                                            <dutch></dutch>
                                                                                            <danish></danish>
                                                                                            <finnish>Valitse kieli.</finnish>
                                                                                            <swedish></swedish>
                                                                                            <russian></russian>
                                                                                            <turkish></turkish>
                                                                                            <language>15</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="8" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="8" indexofoutput="4" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="BrainEffects" id="11" tooltip="Can be used as a loading animation." x="440" y="213">
                                                                    <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.bMustStop = False
        self.bIsRunning = False
        self.DCM = ALProxy( "DCM" )

        self.HeadLeds = ["Head/Led/%s/%s/%d/Actuator/Value" % (sPos, sSide, nIdx) for sPos in  ["Front", "Middle", "Rear"] for sSide in ["Right", "Left"] for nIdx in range(3)]
        self.aRotateSequence = [1, 0, 6, 12, 13, 14, 17, 16, 15, 9, 3, 4]
        self.aProgressSequence = [0, 3, 1, 4, 6, 9, 12, 15, 13, 16, 14, 17]
        #~ for i in range(len(self.HeadLeds)):
            #~ self.log("%d, %s" % (i, self.HeadLeds[i]))

    def onLoad(self):
        self.bMustStop = False
        self.bIsRunning = False

    def onUnload(self):
        self.onInput_onStop()

    def onInput_onStart(self):
        if( self.bIsRunning ):
            self.log( self.boxName + ": already started => nothing" )
            return

        self.bIsRunning = True
        self.bMustStop = False

        # Set all leds off
        ALLeds.off("BrainLeds")

        while( not self.bMustStop ):
            value = float(self.getParameter("intensity"))
            nTime = self.getParameter("delay")
            for i in self.aRotateSequence:
                riseTime = self.DCM.getTime(nTime)
                self.DCM.set( [ self.HeadLeds[i], "Merge",  [[value, riseTime ]] ] )
                time.sleep( nTime/1000. )
                self.DCM.set( [ self.HeadLeds[i], "Merge",  [[0.0, riseTime + int(nTime)/4 ]] ] )
        # end while

        self.bIsRunning = False
        # Set all leds on
        ALLeds.on("BrainLeds")
        self.onStopped()

    def onInput_onStop(self):
        self.bMustStop = True]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="2" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Parameter name="delay" inherits_from_parent="0" content_type="1" value="50" default_value="50" min="0" max="1000" tooltip="" id="5" />
                                                                    <Parameter name="intensity" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="1" tooltip="" id="6" />
                                                                </Box>
                                                                <Box name="Text Edit" id="13" tooltip="Send the text you entered when the input is stimulated." plugin="textedit_plugin" x="24" y="330">
                                                                    <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self):
		self.onStopped("Deactivating chinese for the moment.\nReactivate when everything is translated if it is really necessary.")]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <text>Deactivating chinese for the moment.&#x0A;Reactivate when everything is translated if it is really necessary.</text>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the text on the output." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The text you entered." id="3" />
                                                                </Box>
                                                                <Box name="LocalizedText" id="4" tooltip="LocalizedText" plugin="localizationbox_plugin" x="634" y="221">
                                                                    <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 对不起，我还不会说这门语言。 ",
			"English" : " Sorry, this language is not available. ",
			"French" : " Désolé, ce langage n\'est pas disponible. ",
			"German" : "  ",
			"Italian" : "  ",
			"Japanese" : " ごめんなさい。この言葉はまだしゃべれません。 ",
			"Korean" : "  ",
			"Portuguese" : "  ",
			"Brazilian" : "  ",
			"Spanish" : " El idioma que ha seleccionado no se encuentra disponible. ",
			"Arabic" : "  ",
			"Polish" : "  ",
			"Czech" : "  ",
			"Dutch" : "  ",
			"Danish" : "  ",
			"Finnish" : " Se kieli ei ole valitettavasti käytettävissä. ",
			"Swedish" : "  ",
			"Russian" : "  ",
			"Turkish" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <chinese>对不起，我还不会说这门语言。</chinese>
                                                                        <english>Sorry, this language is not available.</english>
                                                                        <french>Désolé, ce langage n&apos;est pas disponible.</french>
                                                                        <german></german>
                                                                        <italian></italian>
                                                                        <japanese>ごめんなさい。この言葉はまだしゃべれません。</japanese>
                                                                        <korean></korean>
                                                                        <portuguese></portuguese>
                                                                        <brazilian></brazilian>
                                                                        <spanish>El idioma que ha seleccionado no se encuentra disponible.</spanish>
                                                                        <arabic></arabic>
                                                                        <polish></polish>
                                                                        <czech></czech>
                                                                        <dutch></dutch>
                                                                        <danish></danish>
                                                                        <finnish>Se kieli ei ole valitettavasti käytettävissä.</finnish>
                                                                        <swedish></swedish>
                                                                        <russian></russian>
                                                                        <turkish></turkish>
                                                                        <language>15</language>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                </Box>
                                                                <Box name="Choice language" id="9" tooltip="Launch speech recognition, and wait for one of a defined number of expected&#x0A;answers (written in the table of the box). NAO will prompt the speaker if he&#x0A;cannot understand and give suggestions as to available answers&#x0A;and other ways of selecting your choice. e.g. The tactile sensor on his&#x0A;head.&#x0A;&#x0A;Note that you must open this box to enter the question text and the&#x0A;available answers." x="157" y="175">
                                                                    <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Output name="answer" type="3" type_size="1" nature="1" inner="0" tooltip="Answer recognized." id="5" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram scale="100">
                                                                                    <Box name="Choice" id="1" tooltip="Launch the speech recognition waiting for a defined number of predicted answers (written in the table on the box). Available help&#x0A;from NAO which gives some possible answers and attracts attention on the other modalities to answer (head tactile sensor).&#x0A;&#x0A;You can edit a choice by left double-clicking on the line. You can add a choice by right clicking on a line and selecting &apos;Insert a&#x0A;row&apos;. You can delete a choice by right clicking on a line and selecting &apos;Remove a row&apos;. You can also write several alternative&#x0A;answers for the same choice by writing them on the line separated by the character &apos;/&apos;.&#x0A;Ex: apple pie / pie / apple&#x0A;Then if any of these answers (&apos;apple pie&apos;, &apos;pie&apos; or &apos;apple&apos;) are said, the corresponding output will be activated. Indeed, each output&#x0A;which name begins with &apos;output_&apos; correspond to the choice in the list placed just in front of the output.&#x0A;&#x0A;Moreover, you have advanced options appearing when you click on the blue cross. Then you can make NAO calculate the threshold&#x0A;average of choices with the 1/2/3 button. Actually, it will calculate recognition threshold of each alternative answer and put them from&#x0A;highest to smallest threshold. The threshold displayed in front of each choice then is the highest&apos;s." plugin="ui_choice_plugin" x="295" y="12">
                                                                                        <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# -*- coding: utf-8 -*-
# script of the Choice box v8.8
# @author Desktop Application team
# (c) 2011 Aldebaran Robotics

import os
import time
import random
import thread
import mutex
import xml.dom.minidom

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

        # PROXIES INITIALIZATION
        self.tts = ALProxy("ALTextToSpeech")
        self.ttsStop = ALProxy("ALTextToSpeech", True) #Create another proxy as wait is blocking if audioout is remote
        self.memory = ALProxy("ALMemory")
        try:
            self.asr = ALProxy("ALSpeechRecognition")
            self.ad = ALProxy("ALAudioDevice")
            self.player = ALProxy("ALAudioPlayer")
            self.dcm = ALProxy( "DCM" )
        except:
            self.logger.warning("cannot find ALSpeechRecognition, choice box will run in simulation mode")
            self.asr = None
            self.ad = None
            self.player = None
            self.dcm = None

        self.leds = ALProxy( "ALLeds" )
        # VARIABLES INITIALIZATION
        self.aIdsTTS = []
        self.bSentencesInitialized = False
        self.bMustStop = False
        self.bIsRunning = False
        self.bGoOut = False
        self.nCountNoReply = 0
        self.nCountFailure = 0
        self.aFrameNumbers = {"end" : 1,
                              "headDown" : 10,
                              "bodyTalk" : 20,
                              "reco" : 30,
                              "headCheck" : 40,
                              "helpTactileSensor" : 50,
                              "notUnderstood" : 70}
        self.nFrameNumber = self.aFrameNumbers["end"]
        self.bInConfirmation = False
        self.bVocabularyLoaded = False
        self.bRecoIsHearingOrAnalysing = False
        self.bRecoIsWaitingForVoice = False
        self.bHasAlreadyHearingEyes = False
        self.bInTactileSensorMenu = False
        self.bExternChoices = False
        self.bBrainAnimPaused = False
        self.rTimeLastChoiceSaid = -1.
        self.bIsSayingChoice = False
        self.nIndexChoice = 0
        self.sRecoInterruption = "" # = "wordRecognised" or "timeout" or "onStop" or "onTactileSensor"
        self.sPreviousAnswer = ""
        self.rTimeWhenActionMadeInTactileMenu = -1.
        # variables used for the tactile sensor
        self.nFront = 0
        self.nMiddle = 0
        self.nRear = 0
        self.bSeqStarted = False
        self.bIsStoringParam = False
        self.bPressed = False
        self.mutexProcessCurrentState = mutex.mutex()
        self.mutexTactilTouched = mutex.mutex()
        self.mutexCheckIfSeqsCorrespondingLeft = mutex.mutex()
        self.bSeqStarted = False
        # assuming that every sequence is after [0, 0, 0]
        # and then start with one tactil sensor activated
        # timeout must be either a number (int or float) not equal to 0 or an array of two numbers not equal to 0, a negative one and a positive one
        # a negative timeout means a minimum time that has to ellapse before the next step
        # a positive timeout means a maximum time before the next step must show up
        self.aSeqs = [{"name" : "Tap", "statesAndTimeout" : [ "1+", 0.35, "2+", 0.45, "0" ]},
                      {"name" : "TapFront", "statesAndTimeout" : [ "F", 1, "0" ]},
                      {"name" : "LongFront", "statesAndTimeout" : [ "F", -1, "F" ]},
                      {"name" : "TapMiddle", "statesAndTimeout" : [ "M", 1, "0" ]},
                      {"name" : "LongMiddle", "statesAndTimeout" : [ "M", -1, "M" ]},
                      {"name" : "TapRear", "statesAndTimeout" : [ "R", 1, "0" ]},
                      {"name" : "LongRear", "statesAndTimeout" : [ "R", -1, "R" ]},
                      {"name" : "CalmDown", "statesAndTimeout" : [ "1+", 0.5, "2+", -1, "2+" ]}]
        # sequences initialization
        aSeqsTemp = []
        for seq in self.aSeqs:
            try: # ensure that the sequence has at least a name and states and timeout defined
                seq["name"]
                seq["statesAndTimeout"]
                aSeqsTemp.append(seq)
            except:
                pass
        self.aSeqs = aSeqsTemp
        for seq in self.aSeqs:
            states = range( len( seq["statesAndTimeout"][0:len(seq["statesAndTimeout"]):2] ) )
            i = 0
            for state in seq["statesAndTimeout"][0:len(seq["statesAndTimeout"]):2]:
                states[i] = self.convertToArrayOfPossibleStates(state)
                i += 1
            seq["statesAndTimeout"][0:len(seq["statesAndTimeout"]):2] = states
        self.aDetectedSeqs = []
        self.aDetectedSeqs.extend(self.aSeqs)
        # end - variables used for the tactile sensor
        self.aChoices = []
        self.aChoiceIndexes = []
        # parameters which can be changed from the parameters edition window
        self.sQuestion = ""
        self.nTimeoutReco = 6
        self.nTimeoutRecoConfirmation = 6
        self.nTimeoutTactile = 10
        self.nMaxCountNoReply = 3
        self.nMaxCountFailure = 5
        self.arUnderstoodThreshold = [0.0, 1.0] # range of self.rUnderstoodThreshold
        self.arConfirmationThreshold = [0.0, 1.0] # range of self.rConfirmationThreshold (must be higher than self.arUnderstoodThreshold)
        self.rUnderstoodThreshold = 0.2
        self.rConfirmationThreshold = 0.4
        self.bActivateEyesLight = True
        self.bActivateEarsLight = True
        self.bActivateBrainLight = True
        self.bActivateHelpWhenFailure = True
        self.bRepeatValidatedChoice = True
        self.bActivateDefaultChoiceHelp = True
        self.bActivateDefaultChoiceRepeat = True
        self.bActivateDefaultChoiceExit = True
        self.BIND_PYTHON(self.getName(), "onTactilTouched")
        self.BIND_PYTHON(self.getName(), "onWordRecognized")
        self.BIND_PYTHON(self.getName(), "onSpeechDetected")


# FUNCTIONS ===============================================================================================

    def onLoad(self):
        # initialize sentences for each language
        if( not self.bSentencesInitialized ):
            self.initializeSentences()
            self.bSentencesInitialized = True

# XML PARSER FOR SENTENCES INITIALIZATION
    def initializeSentences(self):
        "Initialize necessary sentences in each language."
        framemanager = ALProxy("ALFrameManager")
        filename = framemanager.getBehaviorPath(self.behaviorId) + self.tryGetParameter( "Sentences file", "/Aldebaran/choice_sentences.xml" )
        if( self.fileExists(filename) ):
            try:
                doc = self.getFileContents( filename )
                dom = xml.dom.minidom.parseString( doc )
            except Exception as e:
                raise Exception( "The " + filename + " file is not in the right format. Check the special characters and that the syntax is correct.\n" + str(e) )
            try:
                tag = "sentences"
                mainBlock = dom.getElementsByTagName( tag )[0]
                tag = "translation"
                aTranslations = mainBlock.getElementsByTagName( tag )
                self.aAllWords = {}
                self.aAllSentences = {}
                for sTranslation in aTranslations:
                    sLanguage = sTranslation.getAttribute("language")
                    tag = "speechReco"
                    blockSpeechReco = sTranslation.getElementsByTagName( tag )[0]
                    # variable used for the speech recognition
                    self.aAllWords[sLanguage] = {}
                    aKinds = ["negative",
                              "positive",
                              "help",
                              "exit",
                              "repeat"]
                    for sKind in aKinds:
                        tag = sKind
                        blockWordsForThisKind = blockSpeechReco.getElementsByTagName( sKind )[0]
                        self.aAllWords[sLanguage][sKind] = blockWordsForThisKind.getAttribute( "text" ).encode("utf-8").split("/")
                    # end - variable used for the speech recognition
                    tag = "tts"
                    blockTTS = sTranslation.getElementsByTagName( tag )[0]
                    # variable used for the Text-To-Speech
                    self.aAllSentences[sLanguage] = {}
                    aKinds = ["confirmation",
                              "enumMarks",
                              "helpEnumChoices",
                              "helpEnumDefault",
                              "helpTactile",
                              "notUnderstood",
                              "noQuestion",
                              "notUnderstoodAnims"]
                    for sKind in aKinds:
                        tag = sKind
                        blockSentencesForThisKind = blockTTS.getElementsByTagName( sKind )[0]
                        self.aAllSentences[sLanguage][sKind] = blockSentencesForThisKind.getAttribute( "text" ).encode("utf-8").split("/")
                    # end - variable used for the Text-To-Speech
            except Exception as e:
                raise Exception( "The " + filename + " file is not in the right format. Check that the '" + tag + "' tag is defined and with the right format.\n" + str(e) )
        else:
            self.logger.warning( "This Choice box is deprecated. Please use the new one supplied in Choregraphe library instead." )
            self.aAllWords = {"English":{"negative": ["no"],
                                         "positive": ["yes"],
                                         "help": ["help"],
                                         "exit": ["exit"],
                                         "repeat": ["repeat"]
                                        },
                              "French":{"negative": ["non"],
                                        "positive": ["oui"],
                                        "help": ["l'aide"],
                                        "exit": ["sortir"],
                                        "repeat": ["rÃ©pÃ©ter"]
                                       },
                              "Spanish":{"negative": ["no"],
                                         "positive": ["si"],
                                         "help": ["ayuda"],
                                         "exit": ["salida"],
                                         "repeat": ["repetir"]
                                        }
                             }
            self.aAllSentences = {"English":{"confirmation": ["I understood %s. Is it correct?"],
                                             "enumMarks": [", ", " or "],
                                             "helpEnumChoices": ["No answer is really expected. ", "Your answer can be %s. ", "Your answer can be for example %s. ", "%s?"],
                                             "helpEnumDefault": [" you can ask me: %s. "],
                                             "helpTactile": ["You can also use my tactile sensor to choose the answer.", "\Pau=600\ Press front or rear of my skull cap to go through all of the available answers. Press then the circle in the middle to validate your choice."],
                                             "notUnderstood": ["I did not understand. "],
                                             "noQuestion": ["No question has been defined, then I cannot repeat it. "],
                                             "notUnderstoodAnims": ["There is too much noise here! ", "Try to talk to me more distinctly. ", "I don't hear you very well. "]
                                            },
                                  "French":{"confirmation": ["J'ai compris %s. Est-ce correct?"],
                                            "enumMarks": [", ", " ou "],
                                            "helpEnumChoices": ["Aucune rÃ©ponse prÃ©cise n'est attendue. ", "Tu peux rÃ©pondre %s. ", "Tu peux rÃ©pondre par exemple %s. ", "%s ?"],
                                            "helpEnumDefault": [" tu peux me demander : %s. "],
                                            "helpTactile": ["Tu peux aussi choisir une rÃ©ponse Ã  l'aide de mon capteur tactile.", "\Pau=600\ Appuie sur l'avant ou l'arriÃ¨re de ma calotte pour naviguer parmi les rÃ©ponses possibles. Appuie ensuite sur le rond du milieu pour valider ton choix."],
                                            "notUnderstood": ["Je n'ai pas compris. "],
                                            "noQuestion": ["Il n'y a pas de question prÃ©dÃ©finie, je ne peux donc pas la rÃ©pÃ©ter. "],
                                            "notUnderstoodAnims": ["Il y a trop de bruit ici! ", "Essaye de me parler plus distinctement. ", "Je ne t'entends pas bien. "]
                                           },
                                  "Spanish":{"confirmation": ["He entendido %s. Es correcto?"],
                                             "enumMarks": [", ", " o "],
                                             "helpEnumChoices": ["No espero ninguna respuesta. ", "Puedes responder %s. ", "Puedes responder por ejemplo %s. ", "%s ?"],
                                             "helpEnumDefault": [" me puedes pedir : %s. "],
                                             "helpTactile": ["Tambien puedes utilizar mi sensor tactil para escojer la respuesta.", "\Pau=600\ Toca el sensor de enfrente o el de atras para entender las posibles respuestas. Presiona en medio para validar tu eleccion."],
                                             "notUnderstood": ["No entendi. "],
                                             "noQuestion": ["No me han confirmado su respuesta, por lo tanto no puedo repetirla. "],
                                             "notUnderstoodAnims": ["Hay demasiado ruido, habla mas fuerte! "]
                                            }
                                 }
        # choices
        # !!! don't remove any comments from this variable !!!
        # (they are here to make the plugin work)
        self.aListAllChoices = {"Arabic": [], "Brazilian": [], "Chinese": [], "Czech": [], "Danish": [], "Dutch": ["", "", ""], "English": ["", "", ""], "Finnish": [], "French": ["", "", ""], "German": [], "Italian": [], "Japanese": [], "Korean": [], "Polish": [], "Portuguese": [], "Russian": [], "Spanish": ["", "", ""], "Swedish": [], "Turkish": []
                               }
        # end - choices

# INPUTS ACTIVATION PROCESSING ------------------------------------------------------------------------------
    def onInput_onStart(self, question=None):
        "Initialize variables and start box behaviour."
        self.logger.debug( "Input onStart stimulated." )
        if( self.bIsRunning): # to avoid starting the process twice
            return
        self.bIsRunning = True
        if(self.asr != None):
            self.asr.setVisualExpression( False )
        language = self.tts.getLanguage()
        if(self.asr != None):
            self.asr.setLanguage( language )
        try:
            self.aAllWords[language]
            self.aAllSentences[language]
        except:
            raise Exception( "The current language is not supported by this Choice box. It is probably deprecated. Try to use the one supplied in Choregraphe library instead." )
        self.asNegativeWords = self.aAllWords[language]["negative"]
        self.asPositiveWords = self.aAllWords[language]["positive"]
        self.asHelpWords = self.aAllWords[language]["help"]
        self.asExitWords = self.aAllWords[language]["exit"]
        self.asRepeatWords = self.aAllWords[language]["repeat"]
        self.bGoOut = False
        self.bVocabularyLoaded = False
        self.bRecoIsHearingOrAnalysing = False
        self.bRecoIsWaitingForVoice = False
        self.bHasAlreadyHearingEyes = False
        self.sRecoInterruption = ""
        self.sPreviousAnswer = ""
        self.bMustStop = False
        self.nCountNoReply = 0
        self.nCountFailure = 0
        self.nFrameNumber = self.aFrameNumbers["end"]
        self.beginTime = time.time()
        self.bInConfirmation = False
        self.bInTactileSensorMenu = False
        self.bBrainAnimPaused = False
        self.bPressed = False
        self.rTimeWhenActionMadeInTactileMenu = -1.
        self.nFront = 0
        self.nMiddle = 0
        self.nRear = 0
        self.bSeqStarted = False
        self.bIsStoringParam = False
        self.rUnderstoodThreshold = self.tryGetParameter( "Minimum threshold to understand", 0.2 )
        self.rConfirmationThreshold = self.tryGetParameter( "Minimum threshold to be sure", 0.4 )
        self.nTimeoutReco = self.tryGetParameter( "Speech recognition timeout", 6 )
        self.nTimeoutRecoConfirmation = self.tryGetParameter( "Speech recognition timeout when confirmation", 6 )
        self.nTimeoutTactile = self.tryGetParameter( "Tactile sensor menu timeout", 10 )
        self.nMaxCountNoReply = self.tryGetParameter( "Maximum number of repetition when no reply", 3 )
        self.nMaxCountFailure = self.tryGetParameter( "Maximum number of repetition when failure", 5 )
        self.bActivateEyesLight = self.tryGetParameter( "Activate eyes light", True )
        self.bActivateEarsLight = self.tryGetParameter( "Activate ears light", True )
        self.bActivateBrainLight = self.tryGetParameter( "Activate brain light", True )
        self.bActivateHelpWhenFailure = self.tryGetParameter( "Activate help when failure", True )
        self.bRepeatValidatedChoice = self.tryGetParameter( "Repeat validated choice", True )
        self.bActivateDefaultChoiceHelp = self.tryGetParameter( "Activate help command", True )
        self.bActivateDefaultChoiceRepeat = self.tryGetParameter( "Activate repeat command", True )
        self.bActivateDefaultChoiceExit = self.tryGetParameter( "Activate exit command", True )
        self.aDefaultChoices = []
        if (self.bActivateDefaultChoiceHelp):
            self.aDefaultChoices.append( self.asHelpWords )
        if (self.bActivateDefaultChoiceRepeat):
            self.aDefaultChoices.append( self.asRepeatWords )
        if (self.bActivateDefaultChoiceExit):
            self.aDefaultChoices.append( self.asExitWords )
        if( question == None ):
            question = ""
        self.initQuestionAndChoices( question )
        if( len( self.aChoices ) > len( self.aDefaultChoices ) ): # if there is at least one choice (not a default one)
            self.nIndexChoice = len( self.aDefaultChoices )
        else: # if there are only default words
            self.nIndexChoice = 0
        self.bGoOut = False
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0xFFFFFF, 0.1 )
        # initialize tactile sensor handler
        self.initSeqDetected()
        # subscribe to tactile sensors extractors (launch tactile sensor handler)
        self.memory.subscribeToEvent( "FrontTactilTouched", self.getName(), "onTactilTouched" )
        self.memory.subscribeToEvent( "MiddleTactilTouched", self.getName(), "onTactilTouched" )
        self.memory.subscribeToEvent( "RearTactilTouched", self.getName(), "onTactilTouched" )
        thread.start_new_thread( self.loopLedsBrainTwinkle, () )
        while( not self.bGoOut ):
            self.questionRecognitionReaction()
        if( self.bInTactileSensorMenu ):
            self.nCountNoReply = 0
            if( self.nFrameNumber != self.aFrameNumbers["headDown"] ):
                self.nFrameNumber = self.aFrameNumbers["headDown"]
                try:
                    self.getTimeline().goTo(self.nFrameNumber)
                except: # if NAOqi < 1.14
                    try:
                        self.gotoAndStop(self.nFrameNumber)
                    except:
                        pass
            self.loopLedsBrainTurn()
        else:
            self.bIsRunning = False

    def onInput_choicesList(self, p):
        "Set choices list."
        self.logger.debug( "Input choicesList stimulated." )
        if( not self.bIsRunning ):
            self.bExternChoices = True
            language = "English"
            if(self.asr != None):
                language =  self.asr.getLanguage()
            self.asNegativeWords = self.aAllWords[language]["negative"]
            self.asPositiveWords = self.aAllWords[language]["positive"]
            self.asHelpWords = self.aAllWords[language]["help"]
            self.asExitWords = self.aAllWords[language]["exit"]
            self.asRepeatWords = self.aAllWords[language]["repeat"]
            self.bActivateDefaultChoiceHelp = self.tryGetParameter( "Activate help command", True )
            self.bActivateDefaultChoiceRepeat = self.tryGetParameter( "Activate repeat command", True )
            self.bActivateDefaultChoiceExit = self.tryGetParameter( "Activate exit command", True )
            self.aDefaultChoices = []
            if (self.bActivateDefaultChoiceHelp):
                self.aDefaultChoices.append( self.asHelpWords )
            if (self.bActivateDefaultChoiceRepeat):
                self.aDefaultChoices.append( self.asRepeatWords )
            if (self.bActivateDefaultChoiceExit):
                self.aDefaultChoices.append( self.asExitWords )
            self.aChoices = []
            self.aChoiceIndexes = []
            self.aChoices.extend( self.aDefaultChoices )
            index = 0
            for choice in p:
                if( self.isString(choice) ):
                    choice = choice.strip(" \t,;.\n") # remove space or tabs at beginning or end of a choice
                    if( choice != "" ):
                        choice = [ choice ]
                    else:
                        choice = []
                elif( self.isArray(choice) ):
                    if( choice != [] ):
                        for i in range( len( choice ) ):
                            if( self.isString(choice[i]) ):
                                choice[i] = choice[i].strip(" \t,;.\n") # remove space or tabs at beginning or end of a choice
                                if( len( choice[i] ) < 1 ):
                                    del choice[i]
                                    i -= 1 # to parse the good one next loop
                            else:
                                raise Exception( "Error in choices input syntax:\nIt must be an array of choices and each choice can be either a string or an array of strings (several possibilities for one choice)\nEx: ['choice1',['choice2a','choice2b']]\nbut: " + str(p) + " found" )
                else:
                    raise Exception( "Error in choices input syntax:\nIt must be an array of choices and each choice can be either a string or an array of strings (several possibilities for one choice)\nEx: ['choice1',['choice2a','choice2b']]\nbut: " + str(p) + " found" )
                if( len( choice ) > 0 ):
                    for sWord in choice:
                        for aDefaultChoice in self.aDefaultChoices:
                            if( sWord in aDefaultChoice ):
                                raise Exception( "Error in input choices list: You chose a word which is already used for default choices:\n" + str(sWord) + " is used for the default choice: " + str(aDefaultChoice[0]) )
                    self.aChoices.append( choice )
                    self.aChoiceIndexes.append( index )
                index += 1

    def onInput_onStop(self):
        "Stop box behaviour."
        self.logger.debug( "Input onStop stimulated." )
        if( self.bIsRunning ):
            self.goOut( self.asExitWords[0], "onStop" )
            self.sRecoInterruption = "onStop"
        else:
            self.onUnload()
                    
# GENERAL FUNCTIONS ------------------------------------------------------------------------------------------

    def isString(self, strVariable):
        try:
            if( type( strVariable ) == type( "some string" ) ):
                return True
        except:
            pass
        return False

    def isArray(self, aVariable):
        try:
            if( type( aVariable ) == type( ["some array"] ) ):
                return True
        except:
            pass
        return False
            
    def fileExists(self, strPathFilename ):
        try:
            file = open( strPathFilename, 'r' )
            if( file ):
                file.close()
                return True
        except (IOError, os.error), err:
            pass
        return False

    def getFileContents(self, sFilename ):
        "read a file and return it's contents, or '' if not found, empty, ..."
        try:
            fileContent = open( sFilename )
            aBuf = fileContent.read()
            fileContent.close()
        except:
            try:
                fileContent.close()
            except:
                pass
            return ""
        return aBuf
        
    def getBrainLedName(self, nNumLed):
        "Get the name of the DCM led device from its number"
        "0 => front left; 1 => next in clock wise; until 11"
        numLed = nNumLed%12
        if( numLed <= 1 ):
            return "Head/Led/Front/Right/%d/Actuator/Value" % (1-numLed)
        elif( numLed >= 10 ):
            return "Head/Led/Front/Left/%d/Actuator/Value" % (numLed-10)
        elif( numLed <= 2 ):
            return "Head/Led/Middle/Right/%d/Actuator/Value" % (2-numLed)
        elif( numLed >= 9 ):
            return "Head/Led/Middle/Left/%d/Actuator/Value" % (numLed-9)
        elif( numLed <= 5 ):
            return "Head/Led/Rear/Right/%d/Actuator/Value" % (numLed-3)
        else:
            return "Head/Led/Rear/Left/%d/Actuator/Value" % (8-numLed)

    def skipTTS(self):
        for idtts in self.aIdsTTS:
            try:
                self.ttsStop.stop(idtts)
            except:
                self.logger.debug( "Warning: The Text-To-Speech could not have been stopped." )
                
    def tryGetParameter(self, sParameterName, defaultValue):
        try:
            return self.getParameter( sParameterName )
        except:
            return defaultValue

# QUESTION AND CHOICES INITIALIZATION ----------------------------------------------------------------------

    def initQuestionAndChoices(self, p):
        "Initialize the question and the choices."
        # question processing
        if( self.isString(p) ):
            self.sQuestion = p
        else:
            raise Exception( "Error in question input syntax:\nQuestion text\nexpected for example, but:\n" + str(p[0]) + "\nfound" )
        # choices processing
        if( not self.bExternChoices ):
            self.aChoices = []
            self.aChoiceIndexes = []
            self.aChoices.extend( self.aDefaultChoices )
            index = 0
            listChoices = self.aListAllChoices[self.tts.getLanguage()]
            for choice in listChoices:
                aChoice = choice.split( "/" )
                if( aChoice != [] ):
                    for i in range( len( aChoice ) ):
                        aChoice[i] = aChoice[i].strip(" \t,;.\n") # remove space or tabs at beginning or end of a choice
                        if( len( aChoice[i] ) < 1 ):
                            del aChoice[i]
                            i -= 1 # to parse the good one next loop
                if( len( aChoice ) > 0 ):
                    # check if there is a word which is already used for the default choices
                    for sWord in aChoice:
                        for aDefaultChoice in self.aDefaultChoices:
                            if( sWord in aDefaultChoice ):
                                raise Exception( "Error in choices list: You chose a word which is already used for default choices:\n" + str(sWord) + " is used for the default choice: " + str(aDefaultChoice[0]) )
                    # append the choice to the list if everything worked well
                    self.aChoices.append( aChoice )
                    self.aChoiceIndexes.append( index )
                index += 1
        # check that there is at least one choice (a default one or not)
        if( len( self.aChoices ) < 1 ):
            raise Exception( "Error in choices list: It is empty. There is no default choice nor choice entered." )

# QUESTION-RECOGNITION-REACTION -----------------------------------------------------------------------------

    def questionRecognitionReaction(self):
        "Ask question, launch speech recognition and process answer."
        self.ttsQuestionAndRecoInit()
        if( not self.bMustStop ):
            # stop movement animation
            if( self.nFrameNumber != self.aFrameNumbers["reco"] ):
                self.nFrameNumber = self.aFrameNumbers["reco"]
                try:
                    self.getTimeline().goTo(self.nFrameNumber)
                except: # if NAOqi < 1.14
                    try:
                        self.gotoAndStop(self.nFrameNumber)
                    except:
                        pass
            # start speech recognition
            self.logger.debug( "Speech recognition started." )
            self.memory.subscribeToEvent( "WordRecognized", self.getName(), "onWordRecognized" )
            self.bRecoIsWaitingForVoice = True
            self.memory.subscribeToEvent( "SpeechDetected", self.getName(), "onSpeechDetected" )
        # leds during the recognition
        self.loopLedsReco()
        # process the reco loop break
        self.processRecoInterruption()

    def ttsQuestionAndRecoInit(self):
        "Ask question and initialize the speech recognition during the question to gain time in the interaction."
        if( not self.bInConfirmation ):
            # launch TTS
            idTTS = -1
            if( self.sQuestion != ""):
                idTTS = self.tts.post.say( self.sQuestion )
                self.aIdsTTS.append( idTTS )
                self.logger.debug( "Robot says: " + str(self.sQuestion) )
                # launch TTS movement animation
                if( self.nFrameNumber != self.aFrameNumbers["bodyTalk"] ):
                    self.nFrameNumber = self.aFrameNumbers["bodyTalk"]
                    try:
                        self.getTimeline().goTo(self.nFrameNumber)
                    except: # if NAOqi < 1.14
                        try:
                            self.gotoAndStop(self.nFrameNumber)
                        except:
                            pass
            # prepare speech recognition
            if(self.asr != None):
                self.asr.setLanguage( self.tts.getLanguage() )
            if( not self.bVocabularyLoaded ):
                aWordsRecognised = []
                for i in range( len( self.aChoices ) ):
                    if( self.aChoices[i] != [] ):
                        aWordsRecognised.extend( self.aChoices[i] )
                sWordsRecognised = "You can say: "
                if( len( aWordsRecognised ) > 1 ):
                    for i in range( len( aWordsRecognised ) - 1 ):
                        sWordsRecognised += "'" + aWordsRecognised[i] + "', "
                if( len( aWordsRecognised ) > 0 ):
                    sWordsRecognised += "'" + aWordsRecognised[len( aWordsRecognised ) - 1] + "'"
                sWordsRecognised += "."
                self.logger.debug( sWordsRecognised )
                if(self.asr != None):
                    self.asr.setWordListAsVocabulary( aWordsRecognised )
                self.bVocabularyLoaded = True
        else:
            # launch TTS
            sentence = self.aAllSentences[self.tts.getLanguage()]["confirmation"][0]
            idTTS = -1
            sentenceToSay = sentence % self.sPreviousAnswer
            if( sentenceToSay != ""):
                idTTS = self.tts.post.say( sentenceToSay )
                self.aIdsTTS.append( idTTS )
                self.logger.debug( "Robot says: " + str(sentenceToSay) )
                # launch TTS movement animation
                if( self.nFrameNumber != self.aFrameNumbers["bodyTalk"] ):
                    self.nFrameNumber = self.aFrameNumbers["bodyTalk"]
                    try:
                        self.getTimeline().goTo(self.nFrameNumber)
                    except: # if NAOqi < 1.14
                        try:
                            self.gotoAndStop(self.nFrameNumber)
                        except:
                            pass
            # prepare speech recognition
            aWordsRecognised = []
            aWordsRecognised.extend( self.asNegativeWords )
            aWordsRecognised.extend( self.asPositiveWords )
            sWordsRecognised = "You can say: "
            if( len( aWordsRecognised ) > 1 ):
                for i in range( len( aWordsRecognised ) - 1 ):
                    sWordsRecognised += "'" + aWordsRecognised[i] + "', "
            if( len( aWordsRecognised ) > 0 ):
                sWordsRecognised += "'" + aWordsRecognised[len( aWordsRecognised ) - 1] + "'"
            sWordsRecognised += "."
            self.logger.debug( sWordsRecognised )
            if(self.asr != None):
                self.asr.setWordListAsVocabulary( aWordsRecognised )
            self.bVocabularyLoaded = False
        # wait for the end of the TTS
        if( idTTS != -1 ):
            try:
                self.tts.wait( idTTS, 0 )
            except:
                self.logger.debug( "Warning: Could not wait the TTS." )

    def processRecoInterruption(self):
        "Process speech recognition interruption (timeout, action on tactile sensor, word said, etc...)"
        # wait for the end of the reaction (help, not understood, etc...)
        while( self.sRecoInterruption == "" ):
            time.sleep( 0.2 )
        self.logger.debug( "The speech recognition has been interrupted because of: " + str(self.sRecoInterruption) + "." )
        if( self.sRecoInterruption == "timeout" ): # if recognition interrupted by timeout
            try:
                # stop recognition
                self.memory.unsubscribeToEvent( "WordRecognized", self.getName() )
                self.bRecoIsWaitingForVoice = False
                self.bRecoIsHearingOrAnalysing = False
                self.logger.debug( "Speech recognition stopped." )
                self.memory.unsubscribeToEvent( "SpeechDetected", self.getName() )
            except:
                pass
            if( self.bInConfirmation ): # if it was a confirmation question
                # leds noticing that the robot confirm its guessing
                thread.start_new_thread( self.ledsUnderstood, (True, False) )
                # if nothing has been said, we assume that the user agree
                self.bInConfirmation = False
                if( self.sPreviousAnswer in self.asHelpWords ): # if help asked
                    self.helpWhenAsked()
                elif( self.sPreviousAnswer in self.asRepeatWords ): # if repeat asked
                    self.repeatWhenNoQuestion()
                    # repeat the question
                else: # if not repeat nor help asked
                    self.goOut( self.sPreviousAnswer, "wordRecognised" )
            else:
                # reinitialize leds
                self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )
                self.nCountNoReply += 1
                if( self.nCountNoReply >= self.nMaxCountNoReply ):
                    self.goOut( self.asExitWords[0], "timeout" )
        else:
            self.nCountNoReply = 0
            if( self.sRecoInterruption in [ "onStop" ] ):
                self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )
        self.sRecoInterruption = ""
        
    def repeatWhenNoQuestion(self):
        "Robot's reaction when it is asked to repeat the question when there is no question."
        if( self.sQuestion == "" ):
            sentenceNoQuestion = self.aAllSentences[self.tts.getLanguage()]["noQuestion"][0]
            sentenceNoQuestion += self.enumerateChoices( True ) # True to ask that the introduction is played
            if( len( self.aChoices ) - len( self.aDefaultChoices ) == 0 ): # if there is no choice
                sentenceNoQuestion += self.enumerateDefaultChoices( True ) # True to ask that the introduction is played
            # launch TTS
            idTTS = -1
            if( sentenceNoQuestion != ""):
                if( self.bInTactileSensorMenu ):
                    idTTS = self.tts.post.say( sentenceNoQuestion + "\\Pau=300\\" )
                else:
                    idTTS = self.tts.post.say( sentenceNoQuestion )
                self.aIdsTTS.append( idTTS )
                self.logger.debug( "Robot says: " + str(sentenceNoQuestion) )
                if( not self.bInTactileSensorMenu ):
                    # launch TTS movement animation
                    if( self.nFrameNumber != self.aFrameNumbers["bodyTalk"] ):
                        self.nFrameNumber = self.aFrameNumbers["bodyTalk"]
                        try:
                            self.getTimeline().goTo(self.nFrameNumber)
                        except: # if NAOqi < 1.14
                            try:
                                self.gotoAndStop(self.nFrameNumber)
                            except:
                                pass
            # wait for the end of the TTS
            if( idTTS != -1 ):
                try:
                    self.tts.wait( idTTS, 0 )
                except:
                    self.logger.debug( "Warning: Could not wait the TTS." )

# RECO OUTPUT PROCESSING --------------------------------------------------------------------------------------

    def onWordRecognized(self, pDataName, pValue, pMessage):
        "Handler for when a word is recognised by the speech recognition system."
        aState = pValue
        self.logger.debug( "The word '" + str(aState[0]) + "' has been recognised with a threshold of " + str(aState[1]) + "." )
        # interrupt loops:
            # - stop reco
            # - stop leds
            # - stop asking the question on and on
        try:
            self.memory.unsubscribeToEvent( "WordRecognized", self.getName() )
            self.logger.debug( "Speech recognition stopped." )
            self.memory.unsubscribeToEvent( "SpeechDetected", self.getName() )
        except:
            pass
        self.bRecoIsHearingOrAnalysing = False
        self.bRecoIsWaitingForVoice = False
        if( aState[0] != "" ):
            if( aState[1] >= self.rUnderstoodThreshold ):
                if( self.rUnderstoodThreshold <= self.arUnderstoodThreshold[1] - 0.02 ):
                    self.rUnderstoodThreshold += 0.02
                else:
                    self.rUnderstoodThreshold = self.arUnderstoodThreshold[1]
                if( self.bInConfirmation ):
                    if( aState[0] in self.asNegativeWords ):
                        thread.start_new_thread( self.ledsNegative, () )
                    else:
                        thread.start_new_thread( self.ledsUnderstood, (True, False) )
                else:
                    thread.start_new_thread( self.ledsUnderstood, (True, False) )
                self.reactionWordUnderstood( aState )
            else:
                if( self.rUnderstoodThreshold >= self.arUnderstoodThreshold[0] + 0.05 ):
                    self.rUnderstoodThreshold -= 0.05
                else:
                    self.rUnderstoodThreshold = self.arUnderstoodThreshold[0]
                aCurrentChoice = ""
                for choice in self.aChoices:
                    if( aCurrentChoice == "" ):
                        if( aState[0] in choice ):
                            aCurrentChoice = choice
                if( self.sPreviousAnswer in aCurrentChoice ): # if answer in the same choice as previously
                    # then ask confirmation
                    aState[1] = self.rConfirmationThreshold - 0.01
                    thread.start_new_thread( self.ledsUnderstood, (True, False) )
                    self.reactionWordUnderstood( aState )
                else:
                    # else not understood
                    if( self.bInConfirmation ):
                        thread.start_new_thread( self.ledsUnderstood, (True, False) )
                    else:
                        self.sPreviousAnswer = aState[0]
                        thread.start_new_thread( self.ledsNotUnderstood, () )
                    self.reactionNothingUnderstood()
        else:
            if( self.bInConfirmation ):
                thread.start_new_thread( self.ledsUnderstood, (True, False) )
            else:
                thread.start_new_thread( self.ledsNotUnderstood, () )
            self.reactionNothingUnderstood()
        if( pMessage == "" ):
            self.sRecoInterruption = "wordRecognised"
        else:
            self.sRecoInterruption = pMessage
        
    def onSpeechDetected(self, pDataName, pValue, pMessage):
        "Handler for when something has been heard by the speech recognition system."
        aState = pValue
        if( aState == 1):
            if( self.bRecoIsWaitingForVoice ):
                # make eyes leds switch from an animation to an other
                self.bRecoIsHearingOrAnalysing = True
                self.bRecoIsWaitingForVoice = False
                try:
                    self.timeToReply(time.time() - self.beginTime)
                except:
                    pass
    
    def reactionWordUnderstood(self, word):
        "Reaction depending on the word recognised (help, repeat, word in choices, etc...) and its recognition confidence."
        if( self.bInConfirmation ):
            self.bInConfirmation = False
            if( word[0] in self.asNegativeWords ):
                # update number of failures
                self.nCountFailure += 1
                if( self.sPreviousAnswer in self.asHelpWords ):
                    if( self.nCountFailure >= self.nMaxCountFailure ): # if maximum number of failures
                        # skip the question
                        self.goOut( self.asExitWords[0], "notUnderstood" )
                else:
                    self.helpAfterFailure()
            else:
                if( (self.sPreviousAnswer in self.asHelpWords) or (word[0] in self.asHelpWords) ):
                    self.helpWhenAsked()
                elif( self.sPreviousAnswer in self.asRepeatWords or (word[0] in self.asRepeatWords) ):
                    self.repeatWhenNoQuestion()
                    # repeat the question
                else:
                    self.goOut( self.sPreviousAnswer, "wordRecognised" )
                self.sPreviousAnswer = ""
        else:
            self.sPreviousAnswer = word[0]
            if( word[1] >= self.rConfirmationThreshold ):
                if( self.rConfirmationThreshold <= self.arConfirmationThreshold[1] - 0.02 ):
                    self.rConfirmationThreshold += 0.02
                else:
                    self.rConfirmationThreshold = self.arConfirmationThreshold[1]
                if( self.sPreviousAnswer in self.asHelpWords ):
                    self.helpWhenAsked()
                elif( self.sPreviousAnswer in self.asRepeatWords ):
                    self.repeatWhenNoQuestion()
                    # repeat the question
                else:
                    self.goOut( self.sPreviousAnswer, "wordRecognised" )
                self.sPreviousAnswer = ""
            else:
                if( self.rConfirmationThreshold >= self.arConfirmationThreshold[0] + 0.05 ):
                    self.rConfirmationThreshold -= 0.05
                else:
                    self.rConfirmationThreshold = self.arConfirmationThreshold[0]
                self.bInConfirmation = True

    def reactionNothingUnderstood(self):
        "Reaction when nothing has been understood or without an enough confidence."
        if( self.bInConfirmation ):
            # if the robot did not understand, we assume that the user agree
            self.bInConfirmation = False
            if( self.sPreviousAnswer in self.asHelpWords ): # if help asked
                self.helpWhenAsked()
            elif( self.sPreviousAnswer in self.asRepeatWords ): # if repeat asked
                self.repeatWhenNoQuestion()
                # repeat the question
            else: # if not repeat nor help asked
                self.goOut( self.sPreviousAnswer, "wordRecognised" )
        else:
            # update number of failures
            self.nCountFailure += 1
            if( self.nCountFailure <= 1 ): # if first failure
                sentence = self.aAllSentences[self.tts.getLanguage()]["notUnderstood"][0]
            else: # if second failure or more
                sentenceNotUnderstoodAnims = self.aAllSentences[self.tts.getLanguage()]["notUnderstoodAnims"]
                index = random.randint( 0, len( sentenceNotUnderstoodAnims ) - 1 )
                sentence = sentenceNotUnderstoodAnims[index]
                if( self.nFrameNumber != self.aFrameNumbers["notUnderstood"] + 10*index ):
                    self.nFrameNumber = self.aFrameNumbers["notUnderstood"] + 10*index
                    try:
                        self.getTimeline().goTo(self.nFrameNumber)
                    except: # if NAOqi < 1.14
                        try:
                            self.gotoAndStop(self.nFrameNumber)
                        except:
                            pass
            self.helpAfterFailure( sentence )
            
# HELP ------------------------------------------------------------------------------------------------------
        
    def enumerateChoices(self, bIntroToSay):
        "Enumerate choices (only the first word of each choice is taken into account)."
        sentenceHelpEnumChoices = self.aAllSentences[self.tts.getLanguage()]["helpEnumChoices"]
        sentenceHelpEnumMarks = self.aAllSentences[self.tts.getLanguage()]["enumMarks"]
        enumWords = ""
        maxNbEnumChoices = 3
        indexes = []
        for i in range( min(maxNbEnumChoices, len( self.aChoices ) - len( self.aDefaultChoices )) ):
            if( len( self.aChoices ) - len( self.aDefaultChoices ) <= maxNbEnumChoices ):
                index = len( self.aDefaultChoices ) + i
            else:
                index = random.randint( len( self.aDefaultChoices ), len( self.aChoices ) - 1 )
                while( index in indexes ):
                    index = random.randint( len( self.aDefaultChoices ), len( self.aChoices ) - 1 )
            indexes.append( index )
            if( len( indexes ) != 1 ): # if it is not the first choice
                if( len( indexes ) != min(maxNbEnumChoices, len( self.aChoices ) - len( self.aDefaultChoices )) ): # if it is not the last choice
                    enumWords += sentenceHelpEnumMarks[0]
                else:
                    enumWords += sentenceHelpEnumMarks[1]
            enumWords += self.aChoices[index][0]
        sentenceTemplate = sentenceHelpEnumChoices[2]
        if( len( self.aChoices ) - len( self.aDefaultChoices ) <= maxNbEnumChoices ): # if there are 3 or less choices
            sentenceTemplate = sentenceHelpEnumChoices[1]
        if( not bIntroToSay ):
            sentenceTemplate = sentenceHelpEnumChoices[3]
        if( len( self.aChoices ) - len( self.aDefaultChoices ) == 0 ): # if there is no choice
            sentence = sentenceHelpEnumChoices[0]
        else:
            sentence = sentenceTemplate % enumWords
        return sentence
        
    def enumerateDefaultChoices(self, bIntroToSay):
        "Enumerate default choices (only the first word of each choice is taken into account)."
        sentenceHelpEnumChoices = self.aAllSentences[self.tts.getLanguage()]["helpEnumChoices"]
        sentenceHelpEnumDefault = self.aAllSentences[self.tts.getLanguage()]["helpEnumDefault"]
        sentenceHelpEnumMarks = self.aAllSentences[self.tts.getLanguage()]["enumMarks"]
        enumWords = ""
        indexes = []
        for i in range( len( self.aDefaultChoices ) ):
            indexes.append( i )
            if( len( indexes ) != 1 ): # if it is not the first choice
                if( len( indexes ) != len( self.aDefaultChoices ) ): # if it is not the last choice
                    enumWords += sentenceHelpEnumMarks[0]
                else:
                    enumWords += sentenceHelpEnumMarks[1]
            enumWords += self.aDefaultChoices[i][0]
        sentenceTemplate = sentenceHelpEnumDefault[0]
        if( not bIntroToSay ):
            sentenceTemplate = sentenceHelpEnumChoices[3]
        if( len( self.aDefaultChoices ) == 0 ): # if there is no default choice
            sentence = ""
        else:
            sentence = sentenceTemplate % enumWords
        return sentence

    def explanationTactileSensor(self):
        "Explain the possible interaction with the tactile sensor."
        sentenceHelpTactile = self.aAllSentences[self.tts.getLanguage()]["helpTactile"]
        if( self.bInTactileSensorMenu ):
            sentence = sentenceHelpTactile[1]
        else:
            sentence = sentenceHelpTactile[0]
        return sentence
        
    def helpWhenAsked(self, sentence = ""):
        "Help when the user asked it: enumerate choices, enumerate default choices and explain tactile sensor possible interaction."
        if( not self.bInTactileSensorMenu ):
            # enumeration of choices
            sentence += self.enumerateChoices( True ) # True to ask that the introduction is played
            # enumeration of default choices
            sentence += self.enumerateDefaultChoices( True ) # True to ask that the introduction is played
        # explanation about alternative modality (tactil sensor, arm motion)
        sentence += self.explanationTactileSensor()
        # launch TTS
        idTTS = -1
        if( sentence != "" ):
            if( self.bInTactileSensorMenu ):
                idTTS = self.tts.post.say( sentence + "\\Pau=300\\" )
            else:
                idTTS = self.tts.post.say( sentence )
            self.aIdsTTS.append( idTTS )
            self.logger.debug( "Robot says: " + str(sentence) )
            # launch TTS movement animation
            if( self.bInTactileSensorMenu ):
                if( self.nFrameNumber != self.aFrameNumbers["helpTactileSensor"] ):
                    self.nFrameNumber = self.aFrameNumbers["helpTactileSensor"]
                    try:
                        self.getTimeline().goTo(self.nFrameNumber)
                    except: # if NAOqi < 1.14
                        try:
                            self.gotoAndStop(self.nFrameNumber)
                        except:
                            pass
            else:
                if( self.nFrameNumber != self.aFrameNumbers["bodyTalk"] ):
                    self.nFrameNumber = self.aFrameNumbers["bodyTalk"]
                    try:
                        self.getTimeline().goTo(self.nFrameNumber)
                    except: # if NAOqi < 1.14
                        try:
                            self.gotoAndStop(self.nFrameNumber)
                        except:
                            pass
        # wait for the end of the TTS
        if( idTTS != -1 ):
            try:
                self.tts.wait( idTTS, 0 )
            except:
                self.logger.debug( "Warning: Could not wait the TTS." )
        # repeat the question

    def helpAfterFailure(self, sentence = ""):
        "Help when the speech recognition failed (nothing understood or incorrect answer understood)."
        if( self.nCountFailure < self.nMaxCountFailure ): # if reasonable number of failures
            if( self.bActivateHelpWhenFailure ):
                if( self.nCountFailure in [1, 2] ): # if first or second failure
                    # enumeration of choices, or default words if there is no choice
                    if( len( self.aChoices ) - len( self.aDefaultChoices ) > 0 ): # if there is at least one choice
                        sentence += self.enumerateChoices( self.nCountFailure == 1 ) # the introduction is played if it is the first failure
                    else:
                        sentence += self.enumerateDefaultChoices( self.nCountFailure == 1 ) # the introduction is played if it is the first failure
                    if( self.nCountFailure == 2 ): # if second failure
                        # explanation about alternative modality (tactil sensor, arm motion)
                        sentence += self.explanationTactileSensor()
                # launch TTS
                idTTS = -1
                if( sentence != "" ):
                    idTTS = self.tts.post.say( sentence )
                    self.aIdsTTS.append( idTTS )
                    self.logger.debug( "Robot says: " + str(sentence) )
                    # launch TTS movement animation
                    listPossibleFrames = range( len( self.aAllSentences[self.tts.getLanguage()]["notUnderstoodAnims"] ) )
                    for i in range(len(listPossibleFrames)):
                        listPossibleFrames[i] = listPossibleFrames[i] * 10 + self.aFrameNumbers["notUnderstood"]
                    if( ( self.nFrameNumber != self.aFrameNumbers["bodyTalk"] ) and not ( self.nFrameNumber in listPossibleFrames ) ):
                        try:
                            self.getTimeline().goTo(self.aFrameNumbers["bodyTalk"])
                        except: # if NAOqi < 1.14
                            try:
                                self.gotoAndStop(self.aFrameNumbers["bodyTalk"])
                            except:
                                pass
                    self.nFrameNumber = self.aFrameNumbers["bodyTalk"]
                # wait for the end of the TTS
                if( idTTS != -1 ):
                    try:
                        self.tts.wait( idTTS, 0 )
                    except:
                        self.logger.debug( "Warning: Could not wait the TTS." )
            # repeat the question
        else: # if maximum number of failures
            # skip the question
            self.goOut( self.asExitWords[0], "notUnderstood" )

# LEDS ---------------------------------------------------------------------------------------------------
    
    def setLeds(self, eyesLight, earsLight, brainLight):
        "Set all LEDS (eyes, ears and brain lights)."
        rDuration = 1
        if( self.bActivateEyesLight ):
            # set eyes leds
            self.leds.post.fadeRGB( "FaceLeds", eyesLight, rDuration )
        if( self.bActivateEarsLight ):
            # set ears leds
            self.leds.fadeRGB( "EarLeds", earsLight, rDuration )
        if( self.bActivateBrainLight ):
            # set brain leds light
            self.setLedsBrain( brainLight, 500 )

    def ledsUnderstood(self, bFlashEars, bFlashBrain):
        "Sequence of LEDS for eyes, ears and brain when the robot understood what it heard."
        self.bBrainAnimPaused = True
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0x00FF00, rDuration )
        if( self.bActivateEarsLight ):
            if( bFlashEars ):
                self.leds.fadeRGB( "EarLeds", 0x00FF00, rDuration )
        if( self.bActivateBrainLight ):
            if( bFlashBrain ):
                self.setLedsBrain( 0.5, int(rDuration * 1000) )
        time.sleep( 0.3 )
        rDuration = 0.2
        if( self.bActivateEyesLight ):
            if( self.bInTactileSensorMenu ):
                self.leds.fadeRGB( "FaceLeds", 0xFFFFFF, rDuration )
            else:
                self.leds.fadeRGB( "FaceLeds", 0x000000, rDuration )
        if( self.bActivateEarsLight ):
            if( bFlashEars ):
                self.leds.fadeRGB( "EarLeds", 0x000000, rDuration )
        if( self.bActivateBrainLight ):
            if( bFlashBrain ):
                self.setLedsBrain( 0., int(rDuration * 1000) )
        time.sleep( 0.1 )
        if( not self.bInTactileSensorMenu ):
            self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )
        time.sleep( 0.1 )
        self.bBrainAnimPaused = False

    def ledsNotUnderstood(self):
        "Sequence of LEDS for eyes and ears when the robot did not understand what it heard."
        self.bBrainAnimPaused = True
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0xFF0000, rDuration )
        if( self.bActivateEarsLight ):
            self.leds.fadeRGB( "EarLeds", 0xFF0000, rDuration )
        time.sleep( 0.05 )
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0x000000, rDuration )
        if( self.bActivateEarsLight ):
            self.leds.fadeRGB( "EarLeds", 0x000000, rDuration )
        time.sleep( 0.05 )
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0xFF0000, rDuration )
        if( self.bActivateEarsLight ):
            self.leds.fadeRGB( "EarLeds", 0xFF0000, rDuration )
        time.sleep( 0.05 )
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0x000000, rDuration )
        if( self.bActivateEarsLight ):
            self.leds.fadeRGB( "EarLeds", 0x000000, rDuration )
        time.sleep( 0.3 )
        self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )
        self.bBrainAnimPaused = False
        
    def ledsNegative(self):
        "Sequence of LEDS for eyes and ears when the robot understood 'no'."
        self.bBrainAnimPaused = True
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0xFF0000, rDuration )
        if( self.bActivateEarsLight ):
            self.leds.fadeRGB( "EarLeds", 0xFF0000, rDuration )
        time.sleep( 0.3 )
        rDuration = 0.2
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0x000000, rDuration )
        if( self.bActivateEarsLight ):
            self.leds.fadeRGB( "EarLeds", 0x000000, rDuration )
        time.sleep( 0.1 )
        self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )
        time.sleep( 0.1 )
        self.bBrainAnimPaused = False

    def loopLedsReco(self):
        "LEDS (eyes and ears) process during the speech recognition."
        self.beginTime = time.time()
        if( self.bInConfirmation ):
            timerReco = self.beginTime + self.nTimeoutRecoConfirmation
        else:
            timerReco = self.beginTime + self.nTimeoutReco
        self.bHasAlreadyHearingEyes = False
        nEarLedsNextIndex = 0
        nEyesLed = -1
        while( self.bRecoIsWaitingForVoice or self.bRecoIsHearingOrAnalysing ):
            if( self.bMustStop ):
                try:
                    self.timeToReply(time.time() - self.beginTime)
                except:
                    pass
                break
            if( self.bRecoIsWaitingForVoice ):
                if( timerReco < time.time() ):
                    try:
                        self.timeToReply(timerReco - self.beginTime)
                    except:
                        pass
                    self.sRecoInterruption = "timeout"
                    break
            nEarLedsNextIndex = self.ledsEarsTurnOneStep( nEarLedsNextIndex )
            nEyesLed += 1
            self.ledsEyesTurnOneStep( 0x0055FF, nEyesLed%8 )
            time.sleep( 0.2 )
                
    def ledsEarsTurnOneStep(self, nEarLedsNextIndex):
        "One step of ears LEDS sequence (turn) when the robot is in speech recognition."
        if( self.bActivateEarsLight ):
            nNbrLedByEars = 10
            rTime = 0.7
            strTemplate = "Ears/Led/%s/%dDeg/Actuator/Value"
            nAngle = (360/nNbrLedByEars) * nEarLedsNextIndex
            # update index before sending movement in case of a fast/concurrent call of the function
            nEarLedsNextIndex -= 1 # more beautiful to turn in this way
            if( nEarLedsNextIndex < 0 ):
                nEarLedsNextIndex = nNbrLedByEars-1
            self.leds.post.fade( strTemplate % ( "Left", nAngle ), 1.0, rTime )
            self.leds.post.fade( strTemplate % ( "Right", nAngle ), 1.0, rTime )
            self.leds.post.fade( strTemplate % ( "Left", nAngle ), 0.0, rTime*1.2 )
            self.leds.post.fade( strTemplate % ( "Right", nAngle ), 0.0, rTime*1.2 )
        return nEarLedsNextIndex
            
    def ledsEyesTurnOneStep(self, nColor, nLed):
        "One step of eyes LEDS sequence (turn) when the robot is in speech recognition."
        if( self.bActivateEyesLight ):
            rTime = 0.7
            if( self.bRecoIsHearingOrAnalysing ):
                if( not self.bHasAlreadyHearingEyes ):
                    self.leds.fadeRGB( "FaceLeds", 0xF4FF22, 0.1 )
                    # start headcheck animation
                    if( self.nFrameNumber != self.aFrameNumbers["headCheck"] ):
                        self.nFrameNumber = self.aFrameNumbers["headCheck"]
                        try:
                            self.getTimeline().goTo(self.nFrameNumber)
                        except: # if NAOqi < 1.14
                            try:
                                self.gotoAndStop(self.nFrameNumber)
                            except:
                                pass
                    self.bHasAlreadyHearingEyes = True
            elif( self.bRecoIsWaitingForVoice ):
                self.leds.post.fadeRGB( "FaceLed%d" % (nLed) , nColor, rTime )
                self.leds.post.fadeRGB( "FaceLed%d" % (nLed) , 0x000000, rTime*1.25 )

    def ledsChangeOnTactile(self):
        self.bBrainAnimPaused = True
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0x0055FF, rDuration )
        self.setLedsBrain( 0.5, int(rDuration * 1000) )
        time.sleep( 0.3 )
        rDuration = 0.2
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0xFFFFFF, rDuration )
        self.setLedsBrain( 0., int(rDuration * 1000) )
        time.sleep( 0.2 )
        self.bBrainAnimPaused = False

    def loopLedsBrainTurn(self):
        self.setLeds( 0xFFFFFF, 0xFFFFFF, 0. )
        rIntensity = 0.5
        nTime = 50
        bAlreadyPaused = False
        while( self.bInTactileSensorMenu ):
            if( not self.bBrainAnimPaused ):
                if( self.nFront == 1 or self.nMiddle == 1 or self.nRear == 1 ):
                    if( not bAlreadyPaused ):
                        bAlreadyPaused = True
                        self.setLedsBrain( 0., 50 )
                else:
                    bAlreadyPaused = False
                    if( self.bActivateBrainLight ):
                        for i in range( 12 ):
                            if( not self.bBrainAnimPaused and self.dcm != None):
                                riseTime = self.dcm.getTime(nTime)
                                strDeviceName = self.getBrainLedName(i)
                                self.dcm.set( [ strDeviceName, "Merge",  [[ rIntensity, riseTime ]] ] )
                                time.sleep( nTime/1000. )
                                if( not self.bBrainAnimPaused ):
                                    self.dcm.set( [ strDeviceName, "Merge",  [[ 0.0, riseTime + int(nTime)/4 ]] ] )
            time.sleep( nTime/1000. )
        self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )

    def loopLedsBrainTwinkle(self):
        rIntensity = 0.5
        bOnStep = True
        bAlreadyPaused = False
        while( not self.bInTactileSensorMenu and self.bIsRunning ):
            if( not self.bBrainAnimPaused ):
                if( self.nFront == 1 or self.nMiddle == 1 or self.nRear == 1 ):
                    if( not bAlreadyPaused ):
                        bAlreadyPaused = True
                        self.setLedsBrain( 0., 50 )
                else:
                    bAlreadyPaused = False
                    if( bOnStep ):
                        self.setLedsBrain( rIntensity, 700 )
                        bOnStep = False
                    else:
                        self.setLedsBrain( 0.0, 700 )
                        bOnStep = True
            time.sleep( 1 )
        
    def setLedsBrain(self, rIntensity, rTimeMs):
        "One step of brain LEDS sequence (twinkle) when the robot is in speech recognition."
        if( self.bActivateBrainLight and self.dcm != None):
            riseTime = self.dcm.getTime( rTimeMs )
            for i in range( 12 ):
                strDeviceName = self.getBrainLedName(i)
                self.dcm.set( [ strDeviceName, "Merge",  [[ rIntensity, riseTime ]] ] )

# TACTILE SENSOR MENU -------------------------------------------------------------------------------------

    def onAlternativeModalityAction(self, p):
        "Process actions from alternative modalities (sequence from the tactile sensor, simple click on the torso button...)."
        if( not self.bIsRunning ): # if the box is not running
            return # then go out without doing a thing
        if( not self.bInTactileSensorMenu ): # if we are not in the tactile sensor menu (so if we are in the question-recognition-reaction loop)
            if( p in ["TapFront", "TapMiddle", "TapRear", "LongFront", "LongMiddle", "LongRear"] ):
                bTTSRunning = False # to know if TTS is running
                for idTTS in self.aIdsTTS:
                    if( self.tts.isRunning( idTTS )):
                        bTTSRunning = True
                if( bTTSRunning ): # if TTS is running
                    # skip the TTS
                    self.skipTTS()
                else: # if TTS was not running (so if in recognition)
                    # prepare to start the tactile sensor menu
                    self.bInTactileSensorMenu = True
                    # and stop the question-recognition-reaction loop
                    self.goOutOfQuestionRecoReaction()
                    self.sRecoInterruption = "onTactileSensor"
                    # start the tactile sensor menu
                    self.sayCurrentChoice()
                    # start counting timeout
                    self.rTimeWhenActionMadeInTactileMenu = time.time()
                    thread.start_new_thread( self.loopCheckTimeoutInTactileMenu, (self.rTimeWhenActionMadeInTactileMenu,) )
            elif( p in ["Tap", "CalmDown"] ):
                # skip the TTS
                self.skipTTS()
                # then stop everything and cancel the question
                self.goOut( self.asExitWords[0], "onTactileSensor" )
                self.sRecoInterruption = "onTactileSensor"
                self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )
        else: # if we are in the tactile sensor menu
            self.rTimeWhenActionMadeInTactileMenu = -1.
            if( p in ["TapFront"] ):
                bTTSRunning = False # to know if TTS is running
                for idTTS in self.aIdsTTS:
                    if( self.tts.isRunning( idTTS ) ):
                        bTTSRunning = True
                if( self.bIsSayingChoice or not bTTSRunning ): # else just skip the TTS (in the sayCurrentChoice function)
                    # change choice
                    self.nIndexChoice += 1
                    if( self.nIndexChoice >= len( self.aChoices ) ):
                        self.nIndexChoice = 0
                # say the choice in the tactile sensor menu
                self.sayCurrentChoice()
                self.timeoutManagingInTactileMenu()
            elif( p in ["TapRear"] ):
                bTTSRunning = False # to know if TTS is running
                for idTTS in self.aIdsTTS:
                    if( self.tts.isRunning( idTTS )):
                        bTTSRunning = True
                if( self.bIsSayingChoice or not bTTSRunning ): # else just skip the TTS (in the sayCurrentChoice function)
                    # change choice
                    self.nIndexChoice -= 1
                    if( self.nIndexChoice < 0 ):
                        self.nIndexChoice = len( self.aChoices ) - 1
                # say the choice in the tactile sensor menu
                self.sayCurrentChoice()
                self.timeoutManagingInTactileMenu()
            elif( p in ["TapMiddle", "LongMiddle"] ):
                self.rTimeWhenActionMadeInTactileMenu = time.time()
                rTimeForThisAction = self.rTimeWhenActionMadeInTactileMenu
                bWasSayingChoice = self.bIsSayingChoice
                bTTSRunning = False # to know if TTS is running
                for idTTS in self.aIdsTTS:
                    if( self.tts.isRunning( idTTS )):
                        bTTSRunning = True
                # skip the TTS if it is running
                self.skipTTS()
                if( bWasSayingChoice or not bTTSRunning ):
                    # validate choice
                    thread.start_new_thread( self.ledsUnderstood, (False, True) )
                    if( self.aChoices[self.nIndexChoice][0] == self.asRepeatWords[0] ):
                        self.repeatWhenNoQuestion()
                        # launch TTS
                        idTTS = -1
                        if( self.sQuestion != ""):
                            idTTS = self.tts.post.say( self.sQuestion + "\\Pau=300\\" )
                            self.aIdsTTS.append( idTTS )
                            self.logger.debug( "Robot says: " + str(self.sQuestion) )
                        # wait for the end of the TTS
                        if( idTTS != -1 ):
                            try:
                                self.tts.wait( idTTS, 0 )
                            except:
                                self.logger.debug( "Warning: Could not wait the TTS." )
                    else:
                        self.reactionWordUnderstood( [ self.aChoices[self.nIndexChoice][0], 1.0 ] )
                if( self.bIsRunning and rTimeForThisAction == self.rTimeWhenActionMadeInTactileMenu ): #$$$
                    self.rTimeWhenActionMadeInTactileMenu = -1.
                    # say the choice in the tactile sensor menu
                    self.sayCurrentChoice()
                    self.timeoutManagingInTactileMenu()
            elif( p == "LongFront" ):
                if( not self.bPressed ):
                    self.bPressed = True
                    bLastElementSaid = False
                    while( self.bPressed ):
                        if( self.nFront == 0 ):
                            self.bPressed = False
                            break
                        bTTSRunning = False # to know if TTS is running
                        for idTTS in self.aIdsTTS:
                            if( self.tts.isRunning( idTTS )):
                                bTTSRunning = True
                        if( self.bIsSayingChoice or not bTTSRunning ):
                            # change choice
                            self.nIndexChoice += 1
                            if( self.nIndexChoice >= len( self.aChoices ) - 1 ):
                                self.nIndexChoice = len( self.aChoices ) - 1
                                if( not bLastElementSaid ):
                                    bLastElementSaid = True
                                    # say the choice in the tactile sensor menu
                                    thread.start_new_thread( self.sayCurrentChoice, () )
                            else:
                                # say the choice in the tactile sensor menu
                                thread.start_new_thread( self.sayCurrentChoice, () )
                        else:
                            if( self.nIndexChoice == len( self.aChoices ) - 1 ):
                                bLastElementSaid = True
                            # say the choice in the tactile sensor menu
                            thread.start_new_thread( self.sayCurrentChoice, () )
                        for i in range(8):
                            if( self.nFront == 0 ):
                                self.bPressed = False
                                break
                            time.sleep(0.1)
                    for idTTS in self.aIdsTTS:
                        if( self.tts.isRunning( idTTS ) ):
                            try:
                                self.tts.wait( idTTS, 0 )
                            except:
                                self.logger.debug( "Warning: Could not wait the TTS." )
                    self.timeoutManagingInTactileMenu()
            elif( p == "LongRear" ):
                if( not self.bPressed ):
                    self.bPressed = True
                    bFirstElementSaid = False
                    while( self.bPressed ):
                        if( self.nRear == 0 ):
                            self.bPressed = False
                            break
                        bTTSRunning = False # to know if TTS is running
                        for idTTS in self.aIdsTTS:
                            if( self.tts.isRunning( idTTS )):
                                bTTSRunning = True
                        if( self.bIsSayingChoice or not bTTSRunning ):
                            # change choice
                            self.nIndexChoice -= 1
                            if( self.nIndexChoice <= 0 ):
                                self.nIndexChoice = 0
                                if( not bFirstElementSaid ):
                                    bFirstElementSaid = True
                                    # say the choice in the tactile sensor menu
                                    thread.start_new_thread( self.sayCurrentChoice, () )
                            else:
                                # say the choice in the tactile sensor menu
                                thread.start_new_thread( self.sayCurrentChoice, () )
                        else:
                            if( self.nIndexChoice == 0 ):
                                bFirstElementSaid = True
                            # say the choice in the tactile sensor menu
                            thread.start_new_thread( self.sayCurrentChoice, () )
                        for i in range(8):
                            if( self.nRear == 0 ):
                                self.bPressed = False
                                break
                            time.sleep(0.1)
                    for idTTS in self.aIdsTTS:
                        if( self.tts.isRunning( idTTS ) ):
                            try:
                                self.tts.wait( idTTS, 0 )
                            except:
                                self.logger.debug( "Warning: Could not wait the TTS." )
                    self.timeoutManagingInTactileMenu()
            elif( p in ["Tap", "CalmDown"] ):
                # then stop everything and cancel the question
                self.goOut( self.asExitWords[0], "onTactileSensor" )
        
    def sayCurrentChoice(self):
        "In the tactile sensor menu, make the robot say the current selected choice"
        self.bIsSayingChoice = True
        rTimeCurrent = time.time()
        self.rTimeLastChoiceSaid = rTimeCurrent
        # stop previous TTS
        self.skipTTS()
        # launch TTS
        idTTS = -1
        if( self.aChoices[ self.nIndexChoice ][0] != "" ):
            if( self.nFrameNumber != self.aFrameNumbers["headDown"] ):
                self.nFrameNumber = self.aFrameNumbers["headDown"]
                try:
                    self.getTimeline().goTo(self.nFrameNumber)
                except: # if NAOqi < 1.14
                    try:
                        self.gotoAndStop(self.nFrameNumber)
                    except:
                        pass
            sentence = self.aChoices[ self.nIndexChoice ][0] + "?"
            idTTS = self.tts.post.say( sentence )
            self.aIdsTTS.append( idTTS )
            self.logger.debug( "Robot says: " + str(sentence) )
            # launch flash leds
            thread.start_new_thread( self.ledsChangeOnTactile, () )
        if( idTTS != -1 ):
            try:
                self.tts.wait( idTTS, 0 )
            except:
                self.logger.debug( "Warning: Could not wait the TTS." )
        if( self.rTimeLastChoiceSaid == rTimeCurrent ):
            self.rTimeLastChoiceSaid = -1.
            self.bIsSayingChoice = False

    def timeoutManagingInTactileMenu(self):
        # check if there has been an other action with tts made while this one was processed
        bTTSRunning = False # to know if TTS is running
        for idTTS in self.aIdsTTS:
            if( self.tts.isRunning( idTTS )):
                bTTSRunning = True
        if( not bTTSRunning ):
            # start counting timeout
            self.rTimeWhenActionMadeInTactileMenu = time.time()
            thread.start_new_thread( self.loopCheckTimeoutInTactileMenu, (self.rTimeWhenActionMadeInTactileMenu,) )

    def loopCheckTimeoutInTactileMenu(self, rTimeForThisAction):
        nTimeout = time.time() + self.nTimeoutTactile
        if( self.rTimeWhenActionMadeInTactileMenu == rTimeForThisAction ):
            while( time.time() < nTimeout and self.rTimeWhenActionMadeInTactileMenu == rTimeForThisAction and self.bIsRunning ):
                time.sleep( 0.1 )
            if( self.rTimeWhenActionMadeInTactileMenu != rTimeForThisAction ):
                self.nCountNoReply = 0
            elif( self.bIsRunning ):
                self.rTimeWhenActionMadeInTactileMenu = -1.
                self.nCountNoReply += 1
                if( self.nCountNoReply >= self.nMaxCountNoReply ):
                    self.goOut( self.asExitWords[0], "timeout" )
                else:
                    bTTSRunning = False # to know if TTS is running
                    for idTTS in self.aIdsTTS:
                        if( self.tts.isRunning( idTTS )):
                            bTTSRunning = True
                    if( not bTTSRunning ):
                        # say the choice in the tactile sensor menu
                        self.sayCurrentChoice()
                        # start counting timeout
                        self.rTimeWhenActionMadeInTactileMenu = time.time()
                        thread.start_new_thread( self.loopCheckTimeoutInTactileMenu, (self.rTimeWhenActionMadeInTactileMenu,) )
        
# TACTILE SENSOR HANDLER -------------------------------------------------------------------------------

    def initSeqDetected(self):
        "Initialize the sequence handler."
        self.bSeqStarted = False
        self.aDetectedSeqs = []
        self.aDetectedSeqs.extend(self.aSeqs)
        for seq in self.aDetectedSeqs:
            seq["index"] = 0
            seq["previousStepTime"] = 0
        
    def convertToArrayOfPossibleStates(self, states):
        "Check if the states described in the sequences using a string are in the right syntax, and then convert them to an array of the possible states."
        aStates = []
        aStates3 = [[1, 1, 1]]
        aStates2 = [[0, 1, 1], [1, 0, 1], [1, 1, 0]]
        aStates1 = [[1, 0, 0], [0, 1, 0], [0, 0, 1]]
        aStates0 = [[0, 0, 0]]
        try:
            if( int(states) == states ): # if states is an integer
                states = str(states)
        except:
            pass
        if( self.isString(states) ):
            if( not states in ["*", "0+", "0", "0-", "1+", "1", "1-", "2+", "2", "2-", "3+", "3", "3-", "F+", "F", "F-", "M+", "M", "M-", "R+", "R", "R-"] ):
                raise Exception( "Error in sequences states description syntax: description expected in " + str(["*", "0+", "0", "0-", "1+", "1", "1-", "2+", "2", "2-", "3+", "3", "3-", "F+", "F", "F-", "M+", "M", "M-", "R+", "R", "R-"]) + " but " + str(p) + " found with this type: " + str(type(p)) )
            if( states in ["*", "0+", "1+", "2+", "3+", "3", "3-", "F+", "M+", "R+"] ):
                aStates.extend(aStates3)
            if( states in ["*", "0+", "1+", "2+", "2", "2-", "3-"] ):
                aStates.extend(aStates2)
            if( states in ["*", "0+", "1+", "1", "1-", "2-", "3-"] ):
                aStates.extend(aStates1)
            if( states in ["*", "0+", "0", "0-", "1-", "2-", "3-", "F-", "M-", "R-"] ):
                aStates.extend(aStates0)
            if( states in ["F", "F+", "F-"] ):
                aStates.append([1, 0, 0])
            if( states in ["M", "M+", "M-"] ):
                aStates.append([0, 1, 0])
            if( states in ["R", "R+", "R-"] ):
                aStates.append([0, 0, 1])
            if( states in ["F+", "M+"] ):
                aStates.append([1, 1, 0])
            if( states in ["R+", "M+"] ):
                aStates.append([0, 1, 1])
            if( states in ["F+", "R+"] ):
                aStates.append([1, 0, 1])
        elif( self.isArray(states) ):
            if( self.isArray(states[0]) ):
                aStates = states
            elif( int(states[0]) == states[0] ):
                aStates = [states]
            else:
                raise Exception( "Error in sequences states description syntax: description expected in " + str(["*", "0+", "0", "0-", "1+", "1", "1-", "2+", "2", "2-", "3+", "3", "3-", "F+", "F", "F-", "M+", "M", "M-", "R+", "R", "R-"]) + " but " + str(p) + " found with this type: " + str(type(p)) )
        else:
            raise Exception( "Error in sequences states description syntax:\nstring, array or int expected but " + str(type(p)) + " found" )
        return aStates

    def checkIfSeqsCorrespondingLeft(self, param):
        "If the sequence handler is done (there is no sequence detected left or the first in the list corresponds), then reinitialize the sequence handler, and give the corresponding sequence if there is one."
        if( self.aDetectedSeqs == [] ):
            # then no sequence corresponding in the list
            self.initSeqDetected()
        else:
            if( self.aDetectedSeqs[0]["index"] == -1 ): # if first sequence in left ones corresponds
                # then it is this sequence which is played
                thread.start_new_thread( self.onAlternativeModalityAction, (self.aDetectedSeqs[0]["name"],) )
                self.initSeqDetected()
        self.mutexCheckIfSeqsCorrespondingLeft.unlock()

    def loopCheckTimeoutMax(self, nTimeoutMax, seq, currentState, currentTime):
        "When timeout ellapsed, check the sequence status and process it."
        nPreviousIndex = seq["index"]
        time.sleep(nTimeoutMax + 0.1)
        aSeqsTemp = []
        aSeqsTemp.extend( self.aDetectedSeqs )
        currentState = [self.nFront, self.nMiddle, self.nRear]
        currentTime = time.time()
        if( nPreviousIndex == seq["index"] and not self.mutexProcessCurrentState.test() and not (1 in currentState) ): # if no change in the sequence step but timeout ellapsed and sequence handler is not processing (so if there is no action from the user and the sequence is still at the same point)
            if( seq in aSeqsTemp and seq["index"] != -1 ): # but if sequence is still in the possible ones and not completed
                if( currentState in seq["statesAndTimeout"][seq["index"]] ): # last check if the current state corresponds to the next one
                    # then we go to the next step
                    seq["previousStepTime"] = currentTime
                    seq["index"] += 2
                    if( seq["index"] > len( seq["statesAndTimeout"] ) ): # if there is no more step
                        seq["index"] = -1 # then the sequence is completed
                    else: # if there is at least one step left
                        nTimeoutMin = 0
                        nTimeoutMax = 5
                        if( self.isArray(seq["statesAndTimeout"][seq["index"]-1]) ):
                            if( seq["statesAndTimeout"][seq["index"]-1][0] < 0 ):
                                nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][0]
                                nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][1]
                            else:
                                nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][0]
                                nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][1]
                        else:
                            if( seq["statesAndTimeout"][seq["index"]-1] < 0 ):
                                nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1]
                            else:
                                nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1]
                        thread.start_new_thread( self.loopCheckTimeoutMax, (nTimeoutMax, seq, currentState, currentTime) )
                else:
                    # then remove the sequence from the possible ones
                    aSeqsTemp.remove(seq)
                    self.aDetectedSeqs = aSeqsTemp
                self.mutexCheckIfSeqsCorrespondingLeft.lock( self.checkIfSeqsCorrespondingLeft, None )

    def loopCheckTimeoutMin(self, nTimeoutMin, seq):
        "Wait that the minimum timeout ellapse to check if the new tactile sensor state corresponds to the expected one for this sequence."
        if( nTimeoutMin != 0 ):
            nPreviousIndex = seq["index"]
            time.sleep(nTimeoutMin - time.time() + seq["previousStepTime"])
            currentTime = time.time()
            currentState = [self.nFront, self.nMiddle, self.nRear]
            self.mutexProcessCurrentState.lock( self.processCurrentState, [0, currentState, currentTime] )
            
    def updateDetectedSeqs(self, seq, aSeqsTemp, currentState, currentTime):
        "Update a detected sequence."
        if( seq["index"] > 0 ): # if not the first step
            nTimeoutMin = 0
            nTimeoutMax = 5
            if( self.isArray(seq["statesAndTimeout"][seq["index"]-1]) ):
                if( seq["statesAndTimeout"][seq["index"]-1][0] < 0 ):
                    nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][0]
                    nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][1]
                else:
                    nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][0]
                    nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][1]
            else:
                if( seq["statesAndTimeout"][seq["index"]-1] < 0 ):
                    nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1]
                else:
                    nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1]
            if( currentTime > nTimeoutMax + seq["previousStepTime"] ): # if timeout of this step ellapsed
                aSeqsTemp.remove(seq) # then it is not this sequence which is played
            elif( not (currentState in seq["statesAndTimeout"][seq["index"]]) ): # if the current state does not correspond to one of the described ones but the timeout of this step did not ellaspe
                # then we check that this state could be an intermediate one
                aIntermediateStates = [[], [], []]
                for i in range( len( currentState ) ):
                    for j in range( len( seq["statesAndTimeout"][seq["index"]] ) ):
                        aIntermediateStates[i].append( seq["statesAndTimeout"][seq["index"]][j][i] )
                    for j in range( len( seq["statesAndTimeout"][seq["index"]-2] ) ):
                        aIntermediateStates[i].append( seq["statesAndTimeout"][seq["index"]-2][j][i] )
                bIsIntermediate = True
                for i in range( len( currentState ) ):
                    bIsIntermediate = bIsIntermediate and ( currentState[i] in aIntermediateStates[i] )
                if( not bIsIntermediate ):
                    aSeqsTemp.remove(seq) # then it is not this sequence which is played
            else: # if the current state correspond to one of the described ones
                if( currentTime > nTimeoutMin + seq["previousStepTime"] ): # if the minimum time to wait the next step is ellapsed
                    # then we go to the next step
                    seq["previousStepTime"] = currentTime
                    seq["index"] += 2
                    if( seq["index"] > len( seq["statesAndTimeout"] ) ): # if there is no more step
                        seq["index"] = -1 # then the sequence is completed
                    else: # if there is at least one step left
                        # start clock to timeout
                        nTimeoutMin = 0
                        nTimeoutMax = 5
                        if( self.isArray(seq["statesAndTimeout"][seq["index"]-1]) ):
                            if( seq["statesAndTimeout"][seq["index"]-1][0] < 0 ):
                                nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][0]
                                nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][1]
                            else:
                                nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][0]
                                nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][1]
                        else:
                            if( seq["statesAndTimeout"][seq["index"]-1] < 0 ):
                                nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1]
                            else:
                                nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1]
                        thread.start_new_thread( self.loopCheckTimeoutMin, (nTimeoutMin, seq) )
                        thread.start_new_thread( self.loopCheckTimeoutMax, (nTimeoutMax, seq, currentState, currentTime) )
                else: # if the minimum time to wait the next step is not ellapsed
                    # then we are going to wait until it is to check then
                    thread.start_new_thread( self.loopCheckTimeoutMin, (nTimeoutMin, seq) )
        elif( seq["index"] == 0 ): # for the first step
            if( currentState in seq["statesAndTimeout"][seq["index"]] ): # if the current state correspond to one of the described ones
                # then we go to the next step
                seq["previousStepTime"] = currentTime
                seq["index"] += 2
                if( seq["index"] > len( seq["statesAndTimeout"] ) ): # if there is no more step
                    seq["index"] = -1 # then the sequence is completed
                else: # if there is at least one step left
                    # start clock to timeout
                    nTimeoutMin = 0
                    nTimeoutMax = 5
                    if( self.isArray(seq["statesAndTimeout"][seq["index"]-1]) ):
                        if( seq["statesAndTimeout"][seq["index"]-1][0] < 0 ):
                            nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][0]
                            nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][1]
                        else:
                            nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][0]
                            nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][1]
                    else:
                        if( seq["statesAndTimeout"][seq["index"]-1] < 0 ):
                            nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1]
                        else:
                            nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1]
                    thread.start_new_thread( self.loopCheckTimeoutMin, (nTimeoutMin, seq) )
                    thread.start_new_thread( self.loopCheckTimeoutMax, (nTimeoutMax, seq, currentState, currentTime) )
            else: # if the current state does not correspond to the first described
                aSeqsTemp.remove(seq) # then it is not this sequence which has just been started

    def updateSeqsHandler(self, currentState, currentTime):
        "Update list of detected sequences."
        aSeqsTemp = []
        aSeqsTemp.extend( self.aDetectedSeqs )
        for seq in self.aDetectedSeqs:
            self.updateDetectedSeqs( seq, aSeqsTemp, currentState, currentTime )
        self.aDetectedSeqs = aSeqsTemp
        self.mutexCheckIfSeqsCorrespondingLeft.lock( self.checkIfSeqsCorrespondingLeft, None )

    def processCurrentState(self, param):
        "Process the current tactile sensor state."
        pValue = param[0]
        currentState = param[1]
        currentTime = param[2]
        if( pValue == 1 and not self.bSeqStarted ):
            self.bSeqStarted = True
            for seq in self.aDetectedSeqs:
                seq["previousStepTime"] = currentTime
        # update sequences handler
        if( self.bSeqStarted ):
            self.updateSeqsHandler(currentState, currentTime)
        self.mutexProcessCurrentState.unlock()

    def onFrontTactilTouched(self, param):
        "Handle an action (touch or release) on the front tactile sensor."
        self.logger.debug( "Change detected on the front tactile sensor: " + str(param[0]) )
        pValue = param[0]
        currentTime = param[1]
        currentState = [pValue, self.nMiddle, self.nRear]
        self.nFront = pValue
        self.mutexProcessCurrentState.lock( self.processCurrentState, [pValue, currentState, currentTime] )
        self.mutexTactilTouched.unlock()
        
    def onMiddleTactilTouched(self, param):
        "Handle an action (touch or release) on the middle tactile sensor."
        self.logger.debug( "Change detected on the middle tactile sensor: " + str(param[0]) )
        pValue = param[0]
        currentTime = param[1]
        currentState = [self.nFront, pValue, self.nRear]
        self.nMiddle = pValue
        self.mutexProcessCurrentState.lock( self.processCurrentState, [pValue, currentState, currentTime] )
        self.mutexTactilTouched.unlock()

    def onRearTactilTouched(self, param):
        "Handle an action (touch or release) on the rear tactile sensor."
        self.logger.debug( "Change detected on the rear tactile sensor: " + str(param[0]) )
        pValue = param[0]
        currentTime = param[1]
        currentState = [self.nFront, self.nMiddle, pValue]
        self.nRear = pValue
        self.mutexProcessCurrentState.lock( self.processCurrentState, [pValue, currentState, currentTime] )
        self.mutexTactilTouched.unlock()
        
    def onTactilTouched(self, pDataName, pValue, pMessage):
        "Handle an action (touch or release) on the tactile sensor."
        self.mutexTactilTouched.lock( getattr( self, "on" + pDataName ), [pValue, time.time()] )
            
# OUTPUTS ACTIVATION --------------------------------------------------------------------------------------

    def goOut(self, outputName, cancelReason = ""):
        "Activate the right output (a choice output or the other output)."
        try:
            self.memory.unsubscribeToEvent( "FrontTactilTouched", self.getName() )
            self.memory.unsubscribeToEvent( "MiddleTactilTouched", self.getName() )
            self.memory.unsubscribeToEvent( "RearTactilTouched", self.getName() )
        except:
            pass

        self.bGoOut = True
        self.bInTactileSensorMenu = False
        if( outputName in self.asExitWords ):
            try:
                self.other( cancelReason )
                self.logger.debug( "Output 'other' stimulated because cancel asked: " + str(cancelReason) + "." )
            except:
                try:
                    self.onStopped( cancelReason )
                    self.logger.debug( "Output 'onStopped' stimulated because cancel asked: " + str(cancelReason) + "." )
                except:
                    try:
                        self.onStopped()
                        self.logger.debug( "Output 'onStopped' stimulated because cancel asked." )
                    except:
                        choregraphe = ALProxy( "ALChoregraphe" )
                        choregraphe.onPythonError( self.getName(), "goOut", "Invalid output: the main output name needs to be 'other', and it needs to be dynamic (because it can be either a string, or an integer)." )
        else:
            nOutput = -1
            for i in range( len (self.aChoices) - len (self.aDefaultChoices) ):
                if( nOutput == -1 ):
                    if( outputName in self.aChoices[i+len( self.aDefaultChoices )] ):
                        nOutput = i
            if( nOutput != -1):
                if( self.bExternChoices ):
                    if( self.bRepeatValidatedChoice ):
                        self.skipTTS()
                        self.tts.say( outputName )
                        self.logger.debug( "Robot says: " + str(outputName) )
                    try:
                        self.other( self.aChoiceIndexes[nOutput] )
                        self.logger.debug( "Output 'other' stimulated with: " + str(self.aChoiceIndexes[nOutput]) + " (corresponding to the choice '" + str(self.aChoices[nOutput+len( self.aDefaultChoices )][0]) + "')." )
                    except:
                        try:
                            self.onStopped( self.aChoiceIndexes[nOutput] )
                            self.logger.debug( "Output 'onStopped' stimulated with: " + str(self.aChoiceIndexes[nOutput]) + " (corresponding to the choice '" + str(self.aChoices[nOutput+len( self.aDefaultChoices )][0]) + "')." )
                        except:
                            choregraphe = ALProxy( "ALChoregraphe" )
                            choregraphe.onPythonError( self.getName(), "goOut", "Invalid type of output: using the input 'choicesList', the main output needs to be dynamic (because it can be either a string, or an integer)." )
                else:
                    if( self.bRepeatValidatedChoice ):
                        self.skipTTS()
                        self.tts.say( outputName )
                        self.logger.debug( "Robot says: " + str(outputName) )
                    try:
                        func = getattr( self, "output_" + str(self.aChoiceIndexes[nOutput]+1) ) #+1 because the first one is output_1 corresponding to the element 0 in the list.
                        func(outputName)
                        self.logger.debug( "Output 'output_" + str(self.aChoiceIndexes[nOutput]+1) + "' stimulated with: " + str(outputName) + "." )
                    except:
                        choregraphe = ALProxy( "ALChoregraphe" )
                        choregraphe.onPythonError( self.getName(), "goOut", "Invalid output: the output 'output_" + str(self.aChoiceIndexes[nOutput]+1) + "' was expected to be stimulated with: " + str(outputName) + " but could not." )
        self.onUnload()
        # come back to an initial position and stop movement animation
        if( self.nFrameNumber != self.aFrameNumbers["end"] ):
            self.nFrameNumber = self.aFrameNumbers["end"]
            try:
                self.getTimeline().goTo(self.nFrameNumber)
            except: # if NAOqi < 1.14
                try:
                    self.gotoAndStop(self.nFrameNumber)
                except:
                    pass

# UNLOAD --------------------------------------------------------------------------------------------------

    def goOutOfQuestionRecoReaction(self):
        "Set some variables to go out of the question-recognition-reaction loop and reinitialize other variables which are going to be used again only on the next start of this box."
        self.bGoOut = True
        self.bMustStop = True
        self.nCountFailure = 0
        self.nCountNoReply = 0
        self.bInConfirmation = False
        self.bVocabularyLoaded = False
        self.skipTTS()
        for idTTS in self.aIdsTTS:
            try:
                self.aIdsTTS.remove( idTTS )
            except:
                self.logger.debug( "Warning: The task ID corresponding to the Text-To-Speech could not have been removed from the ID tasks list." )
        try:
            self.memory.unsubscribeToEvent( "WordRecognized", self.getName() )
            self.bRecoIsWaitingForVoice = False
            self.bRecoIsHearingOrAnalysing = False
            self.logger.debug( "Speech recognition stopped." )
            self.memory.unsubscribeToEvent( "SpeechDetected", self.getName() )
        except:
            pass

    def onUnload(self):
        "Reinitialize variables to default state."
        self.goOutOfQuestionRecoReaction()
        self.bExternChoices = False
        self.bInTactileSensorMenu = False
        try:
            self.memory.unsubscribeToEvent( "FrontTactilTouched", self.getName() )
            self.memory.unsubscribeToEvent( "MiddleTactilTouched", self.getName() )
            self.memory.unsubscribeToEvent( "RearTactilTouched", self.getName() )
        except:
            pass
        self.bIsRunning = False]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <arabic />
                                                                                            <brazilian />
                                                                                            <chinese />
                                                                                            <czech />
                                                                                            <danish />
                                                                                            <dutch>
                                                                                                <keyword></keyword>
                                                                                                <keyword></keyword>
                                                                                                <keyword></keyword>
                                                                                            </dutch>
                                                                                            <english>
                                                                                                <keyword></keyword>
                                                                                                <keyword></keyword>
                                                                                                <keyword></keyword>
                                                                                            </english>
                                                                                            <finnish />
                                                                                            <french>
                                                                                                <keyword></keyword>
                                                                                                <keyword></keyword>
                                                                                                <keyword></keyword>
                                                                                            </french>
                                                                                            <german />
                                                                                            <italian />
                                                                                            <japanese />
                                                                                            <korean />
                                                                                            <polish />
                                                                                            <portuguese />
                                                                                            <russian />
                                                                                            <spanish>
                                                                                                <keyword></keyword>
                                                                                                <keyword></keyword>
                                                                                                <keyword></keyword>
                                                                                            </spanish>
                                                                                            <swedish />
                                                                                            <turkish />
                                                                                            <language>dutch</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is&#x0A;received on this input. The signal can be&#x0A;either a string so that NAO asks a&#x0A;question before the recognition of a&#x0A;choice, or a bang so that the speech&#x0A;recognition starts immediately without any&#x0A;question." id="2" />
                                                                                        <Input name="choicesList" type="0" type_size="1" nature="1" inner="0" tooltip="To have extern choices list (for example,&#x0A;depending on extern variables).&#x0A;!! Warning !! : Must be set before each&#x0A;time the box is started (with onStart&#x0A;input). Otherwise, the choices displayed&#x0A;on the box will be selected." id="3" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip='Box behavior stops when a signal is&#x0A;received on this input, the &apos;other&apos; output is&#x0A;stimulated by &quot;onStop&quot;.' id="4" />
                                                                                        <Output name="other" type="0" type_size="1" nature="1" inner="0" tooltip='When the user skipped the question, this output gives how it has been&#x0A;skipped. Gives also the number of the choice chosen in case of external&#x0A;choices.&#x0A;This output can be:&#x0A;- &quot;timeout&quot; if the user has not replied.&#x0A;- &quot;notUnderstood&quot; if the interaction with the speech recognition failed.&#x0A;- &quot;onStop&quot; if the onStop input has been activated.&#x0A;- &quot;wordRecognised&quot; if the exit command has been understood.&#x0A;- &quot;onTactileSensor&quot; if the user has tapped the tactile sensor of NAO.&#x0A;- an integer being the number of the external choice in the input list.' id="5" />
                                                                                        <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                                                                        <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                                                                                        <Parameter name="Activate head" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Head motion activation during the recognition and while NAO is&#x0A;talking." id="8" />
                                                                                        <Parameter name="Activate arms" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Arms motion activation while NAO is talking." id="9" />
                                                                                        <Parameter name="Activate legs" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Legs motion activation while NAO is talking." id="10" />
                                                                                        <Parameter name="Minimum threshold to understand" inherits_from_parent="0" content_type="2" value="0.2" default_value="0.2" min="0" max="1" tooltip="Minimum threshold to get in order to be understood by NAO." id="11" />
                                                                                        <Parameter name="Minimum threshold to be sure" inherits_from_parent="0" content_type="2" value="0.3" default_value="0.3" min="0" max="1" tooltip="Minimum threshold to get so that NAO would be sure about the user&apos;s&#x0A;answer. Below this threshold, NAO asks a confirmation about what has been&#x0A;understood." id="12" />
                                                                                        <Parameter name="Speech recognition timeout when confirmation" inherits_from_parent="0" content_type="1" value="6" default_value="6" min="1" max="20" tooltip="When NAO asks if what he understood is correct, after this time, if there has been&#x0A;nothing heard, the speech recognition is stopped and the answer understood is&#x0A;considered as correct." id="13" />
                                                                                        <Parameter name="Speech recognition timeout" inherits_from_parent="0" content_type="1" value="6" default_value="6" min="1" max="20" tooltip="After this time, if there has been nothing heard, the speech recognition is stopped&#x0A;and the question is repeated or is skipped." id="14" />
                                                                                        <Parameter name="Maximum number of repetition when no reply" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="1" max="20" tooltip='After this number of times when the user did not reply, the question is skipped, and&#x0A;the output other is stimulated with &quot;timeout&quot;.' id="15" />
                                                                                        <Parameter name="Repeat validated choice" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO repeats the validated choice when it exits the box." id="16" />
                                                                                        <Parameter name="Activate ears light" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate ears light animation (turn, flash, etc...)." id="17" />
                                                                                        <Parameter name="Activate eyes light" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate eyes light animation (turn, flash, etc...)." id="18" />
                                                                                        <Parameter name="Activate brain light" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate brain light animation (turn, flash, etc...)." id="19" />
                                                                                        <Parameter name="Tactile sensor menu timeout" inherits_from_parent="0" content_type="1" value="10" default_value="10" min="1" max="20" tooltip="After this time, if there has been no action made on the tactile sensor or the torso&#x0A;button, the choice currently selected is repeated or the question is skipped." id="20" />
                                                                                        <Parameter name="Maximum number of repetition when failure" inherits_from_parent="0" content_type="1" value="5" default_value="5" min="1" max="20" tooltip='After this number of times when NAO did not understand the user, the question&#x0A;is skipped, and the output other is stimulated with &quot;notUnderstood&quot;.' id="21" />
                                                                                        <Parameter name="Activate help when failure" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="When this parameter is activated, when NAO did not understand the user, he&#x0A;says some help enumerating available choices and attracting attention on the&#x0A;other available modalities (head tactile sensor)." id="22" />
                                                                                        <Parameter name="Activate help command" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip='Enable the help command. So you can say &quot;help&quot; during the speech recognition&#x0A;and NAO will tell you more information.&#x0A;You will still be able to ask help by clicking the torso button.' id="23" />
                                                                                        <Parameter name="Activate repeat command" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip='Activate the repeat command. So you can say &quot;repeat&quot; during the speech&#x0A;recognition and NAO will repeat the question.' id="24" />
                                                                                        <Parameter name="Activate exit command" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip='Enable the exit command. So you can say &quot;exit&quot; during the speech recognition&#x0A;and the box will be stopped and the &apos;other&apos; output will be stimulated with&#x0A;&quot;wordRecognised&quot;.&#x0A;You will still be able to exit the box with&#x0A;the tactile sensor.' id="25" />
                                                                                        <Parameter name="Sentences file" inherits_from_parent="0" content_type="4" value="/Aldebaran/choice_sentences.xml" default_value="/Aldebaran/choice_sentences.xml" tooltip="File containing all necessary sentences in each supported language." id="26" />
                                                                                    </Box>
                                                                                    <Box name="Extract languages" id="2" tooltip="Enter tooltip here" x="78" y="58">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[#coding=utf-8

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy("ALTextToSpeech")
        self.asr = ALProxy("ALSpeechRecognition")

        self.languageToIndex = [
            "English",
            "French",
            "Spanish",
            "Chinese",
            "Japanese",
            "Finnish",
            "German",
            "Italian",
            "Korean",
        ]

        self.traductions = {
            "english": ["English", "Anglais", "Inglés", "英语", "英語"],
            "french": ["French", "Français", "Francés", "法语", "フランス語"],
            "spanish": ["Spanish", "Espagnol", "Español", "西班牙语", "スペイン語"],
            "chinese": ["Chinese", "Chinois", "Chino", "中文", "中国語"],
            "japanese": ["Japanese", "japonais", "japonés", "日本", "日本語"],
            "finnish": ["Finnish", "Finnois", "Finés", "芬兰语", "フィンランド語", "Suomi"]
        }

    def onLoad(self):
        #~ puts code for box initialization here
        self.log(self.tts.getAvailableLanguages())
        self.log(self.asr.getAvailableLanguages())
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        speakList = self.tts.getAvailableLanguages()
        recoList = self.asr.getAvailableLanguages()

        output_list = []
        matching_list = []
        i = self.languageToIndex.index(self.asr.getLanguage())
        for s in speakList:
            if s in recoList:
                try:
                    output_list.append([self.traductions[s.lower()][i]])
                except Exception as e:
                    self.log("Unknown language, using the default value (%s)" % str(e))
                    output_list.append(s.lower())
                matching_list.append(s)

        self.matchingLanguages(matching_list)
        self.availableLanguages(output_list)
        time.sleep(0.1)
        self.onStopped()

    def onInput_onStop(self):
        pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Output name="availableLanguages" type="0" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                                                        <Output name="matchingLanguages" type="0" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                                                                                    </Box>
                                                                                    <Box name="Selected Language" id="3" tooltip="Enter tooltip here" x="660" y="67">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.languageList = []

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        self.log("Language = %s" % p)
        try:
            if p == "wordRecognized":
                self.onStopped("")
            else:
                index = int(p)
                self.onStopped(self.languageList[index])
        except:
            self.onStopped("")

    def onInput_onMatchingList(self, p):
        self.languageList = p]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onMatchingList" type="0" type_size="1" nature="1" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="5" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="1" indexofinput="3" outputowner="2" indexofoutput="5" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="0" indexofinput="5" outputowner="3" indexofoutput="4" />
                                                                                    <Link inputowner="3" indexofinput="3" outputowner="2" indexofoutput="6" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Disable SimpleClick" id="1" tooltip="Enter tooltip here" x="412" y="339">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.sentinel = ALProxy("ALSentinel")

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.sentinel.enableDefaultActionSimpleClick(False)

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                </Box>
                                                                <Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="6" indexofinput="2" outputowner="5" indexofoutput="4" />
                                                                <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="4" indexofoutput="4" />
                                                                <Link inputowner="8" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                <Link inputowner="11" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                <Link inputowner="9" indexofinput="2" outputowner="8" indexofoutput="4" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="9" indexofoutput="5" />
                                                                <Link inputowner="11" indexofinput="3" outputowner="9" indexofoutput="5" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="9" indexofoutput="4" />
                                                                <Link inputowner="6" indexofinput="2" outputowner="3" indexofoutput="5" />
                                                                <Link inputowner="11" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                <Link inputowner="11" indexofinput="2" outputowner="3" indexofoutput="5" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="Address" index="47">
                                                            <Diagram scale="100">
                                                                <Box name="IpAddress" id="2" tooltip="Enter tooltip here" x="72" y="134">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import socket
import fcntl
import struct

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)



    def get_ip_address(self, ifname):
        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        try:
            ip = socket.inet_ntoa(fcntl.ioctl(s.fileno(), 0x8915, struct.pack('256s', ifname[:15]))[20:24])
        except:
            ip = None
        return ip

    def onLoad(self):
        pass

    def onUnload(self):
        pass

    def onInput_onStart(self):
        ip = self.get_ip_address("eth0") or self.get_ip_address("wlan0")

        if ip is not None:
            self.onStopped(ip)
        else:
            self.noConnection()


    def onInput_onStop(self):
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Input name="onNone" type="1" type_size="1" nature="3" inner="0" tooltip="" id="4" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                                                                    <Output name="noConnection" type="1" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                                                                </Box>
                                                                <Box name="Localized Text" id="3" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="321" y="25">
                                                                    <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 我的网络地址是{ip} ",
			"English" : " My internet address is {ip} ",
			"French" : " Mon adresse internet est {ip} ",
			"German" : " Hallo ",
			"Italian" : " Ciao ",
			"Japanese" : " インターネットアドレスは{IP}です ",
			"Korean" : " 안녕하세요  ",
			"Portuguese" : "  ",
			"Brazilian" : "  ",
			"Spanish" : " Mi dirección ip es {ip}  ",
			"Arabic" : "  ",
			"Polish" : "  ",
			"Czech" : "  ",
			"Dutch" : "  ",
			"Danish" : "  ",
			"Finnish" : " I P-osoitteeni on {ip} ",
			"Swedish" : "  ",
			"Russian" : "  ",
			"Turkish" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <chinese>我的网络地址是{ip}</chinese>
                                                                        <english>My internet address is {ip}</english>
                                                                        <french>Mon adresse internet est {ip}</french>
                                                                        <german>Hallo</german>
                                                                        <italian>Ciao</italian>
                                                                        <japanese>インターネットアドレスは{IP}です</japanese>
                                                                        <korean>안녕하세요 </korean>
                                                                        <portuguese></portuguese>
                                                                        <brazilian></brazilian>
                                                                        <spanish>Mi dirección ip es {ip} </spanish>
                                                                        <arabic></arabic>
                                                                        <polish></polish>
                                                                        <czech></czech>
                                                                        <dutch></dutch>
                                                                        <danish></danish>
                                                                        <finnish>I P-osoitteeni on {ip}</finnish>
                                                                        <swedish></swedish>
                                                                        <russian></russian>
                                                                        <turkish></turkish>
                                                                        <language>15</language>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                </Box>
                                                                <Box name="gotoStart" id="4" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." x="789" y="170">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        pass

    def onInput_onStart(self):
        name = self.getParameter("frame name")
        self.log("%s -> %s" % (self.boxName, name))
        self.gotoAndStopParent(name)

    def onInput_onStop(self):
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame name" inherits_from_parent="0" content_type="3" value="Start" default_value="" custom_choice="0" tooltip="" id="3" />
                                                                </Box>
                                                                <Box name="SayAddress" id="5" tooltip="Say the sentence received in the input. See box parameters for fine tuning of the voice." x="609" y="99">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass

    def onInput_onStart(self, p):
        sentence = "\RSPD="+ str( self.getParameter("Speed") )+ "\ "
        sentence += "\VCT="+ str( self.getParameter("Voice Shaping") ) + "\ "
        sentence += str(p)
        sentence +=  "\RST\ "
        id = self.tts.post.say(sentence.format(ip=self.sAddress))
        self.ids.append(id)
        self.tts.wait(id, 0)
        self.ids.remove(id)
        self.onStopped() # activate output of the box

    def onInput_onAddress(self, p):
        self.sAddress = p

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a string is received on this Input." id="2" />
                                                                    <Input name="onAddress" type="0" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="4" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="5" />
                                                                    <Parameter name="Voice Shaping" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='This tag is used to modify at runtime the voice feature (tone, speed) in way slightly different of what pitch and speed modification does, giving a kind of &quot;gender or age modification &quot; effect.&#x0A;&#x0A;To better tune the effect, one should compensate the speed modification due to the value parameter. For exemple to keep an average constant speed, one should add 20% to speed parameter when decreasing 20% to the Voice Shaping (VCT) parameter :&#x0A;&#x0A;A quite good male derivation of female voice for example could be obtained using the following parameters: VCT=78.' id="6" />
                                                                    <Parameter name="Speed" inherits_from_parent="0" content_type="1" value="110" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice." id="7" />
                                                                </Box>
                                                                <Box name="Wait" id="1" tooltip="Wait a moment before sending a signal on the output. The wait can be stopped any&#x0A;time. You may restart it any time, and it will start again." x="200" y="25">
                                                                    <bitmap>media/images/box/wait.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import threading # opkg install python-threading
class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def triggerOutput( self, rPeriod = 1 ):
        self.onUnload() # to clean everything
        self.timerOutput()

    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] )
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Timeout (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning ):
            self.timerOutput()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                                                                    <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is ellapsed, or if the box is stopped." id="4" />
                                                                    <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="0.1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                                                                </Box>
                                                                <Box name="Localized Text" id="6" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="303" y="238">
                                                                    <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 我没有连接到英特网 ",
			"English" : " I\'m not connected to the internet ",
			"French" : " Je ne suis pas connecté à internet ",
			"German" : " Hallo ",
			"Italian" : " Ciao ",
			"Japanese" : " インターネットに接続していないです ",
			"Korean" : " 안녕하세요  ",
			"Portuguese" : "  ",
			"Brazilian" : "  ",
			"Spanish" : " I\'m not connected to the internet ",
			"Arabic" : "  ",
			"Polish" : "  ",
			"Czech" : "  ",
			"Dutch" : "  ",
			"Danish" : "  ",
			"Finnish" : " Minulla ei ole Internet-yhteyttä. ",
			"Swedish" : "  ",
			"Russian" : "  ",
			"Turkish" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <chinese>我没有连接到英特网</chinese>
                                                                        <english>I&apos;m not connected to the internet</english>
                                                                        <french>Je ne suis pas connecté à internet</french>
                                                                        <german>Hallo</german>
                                                                        <italian>Ciao</italian>
                                                                        <japanese>インターネットに接続していないです</japanese>
                                                                        <korean>안녕하세요 </korean>
                                                                        <portuguese></portuguese>
                                                                        <brazilian></brazilian>
                                                                        <spanish>I&apos;m not connected to the internet</spanish>
                                                                        <arabic></arabic>
                                                                        <polish></polish>
                                                                        <czech></czech>
                                                                        <dutch></dutch>
                                                                        <danish></danish>
                                                                        <finnish>Minulla ei ole Internet-yhteyttä.</finnish>
                                                                        <swedish></swedish>
                                                                        <russian></russian>
                                                                        <turkish></turkish>
                                                                        <language>15</language>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                </Box>
                                                                <Box name="Say Text" id="8" tooltip="Say the text received on its input." x="608" y="240">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                <Link inputowner="5" indexofinput="3" outputowner="2" indexofoutput="5" />
                                                                <Link inputowner="4" indexofinput="2" outputowner="5" indexofoutput="5" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="5" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                <Link inputowner="8" indexofinput="2" outputowner="6" indexofoutput="3" />
                                                                <Link inputowner="4" indexofinput="2" outputowner="8" indexofoutput="4" />
                                                                <Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="6" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="Battery" index="56">
                                                            <Diagram>
                                                                <Box name="Read" id="5" tooltip="Read a data from ALMemory" x="60" y="109">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        try:
            p = ALMemory.getData(self.getParameter("var name"))
            self.onStopped(p)
        except:
            self.log("%s not found" % self.getParameter("var name"))
            self.onStopped(None)]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Value of the read data" id="3" />
                                                                    <Parameter name="var name" inherits_from_parent="0" content_type="3" value="ALSentinel/BatteryLevel" default_value="" custom_choice="0" tooltip="Name of the data to read from memory" id="4" />
                                                                </Box>
                                                                <Box name="Localized Text" id="3" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="212" y="11">
                                                                    <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 电池电量，目前达到{level}级 ",
			"English" : " Battery level is {level} of 5 ",
			"French" : " Le niveau de ma batterie est {level} ",
			"German" : " Hallo ",
			"Italian" : " Ciao ",
			"Japanese" : " バッテリーレベルは５分の {level}です ",
			"Korean" : " 안녕하세요  ",
			"Portuguese" : "  ",
			"Brazilian" : "  ",
			"Spanish" : " El nivel de batería es {level} ",
			"Arabic" : "  ",
			"Polish" : "  ",
			"Czech" : "  ",
			"Dutch" : "  ",
			"Danish" : "  ",
			"Finnish" : " Akun lataustaso on {level} viidestä. ",
			"Swedish" : "  ",
			"Russian" : "  ",
			"Turkish" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <chinese>电池电量，目前达到{level}级</chinese>
                                                                        <english>Battery level is {level} of 5</english>
                                                                        <french>Le niveau de ma batterie est {level}</french>
                                                                        <german>Hallo</german>
                                                                        <italian>Ciao</italian>
                                                                        <japanese>バッテリーレベルは５分の {level}です</japanese>
                                                                        <korean>안녕하세요 </korean>
                                                                        <portuguese></portuguese>
                                                                        <brazilian></brazilian>
                                                                        <spanish>El nivel de batería es {level}</spanish>
                                                                        <arabic></arabic>
                                                                        <polish></polish>
                                                                        <czech></czech>
                                                                        <dutch></dutch>
                                                                        <danish></danish>
                                                                        <finnish>Akun lataustaso on {level} viidestä.</finnish>
                                                                        <swedish></swedish>
                                                                        <russian></russian>
                                                                        <turkish></turkish>
                                                                        <language>15</language>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                </Box>
                                                                <Box name="SayBattery" id="1" tooltip="Say the sentence received in the input. See box parameters for fine tuning of the voice." x="503" y="109">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass

    def onInput_onStart(self, p):
        sentence = "\RSPD="+ str( self.getParameter("Speed") )+ "\ "
        sentence += "\VCT="+ str( self.getParameter("Voice Shaping") ) + "\ "
        sentence += str(p)
        sentence +=  "\RST\ "
        id = self.tts.post.say(sentence.format(level=self.getParameter("Battery level")))
        self.ids.append(id)
        self.tts.wait(id, 0)
        self.ids.remove(id)
        self.onStopped() # activate output of the box

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a string is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="Voice Shaping" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='This tag is used to modify at runtime the voice feature (tone, speed) in way slightly different of what pitch and speed modification does, giving a kind of &quot;gender or age modification &quot; effect.&#x0A;&#x0A;To better tune the effect, one should compensate the speed modification due to the value parameter. For exemple to keep an average constant speed, one should add 20% to speed parameter when decreasing 20% to the Voice Shaping (VCT) parameter :&#x0A;&#x0A;A quite good male derivation of female voice for example could be obtained using the following parameters: VCT=78.' id="5" />
                                                                    <Parameter name="Speed" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice." id="6" />
                                                                    <Parameter name="Battery level" inherits_from_parent="0" content_type="1" value="0" default_value="0" min="0" max="100" tooltip="" id="7" />
                                                                </Box>
                                                                <Box name="gotoStart" id="2" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." x="646" y="109">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        pass

    def onInput_onStart(self):
        name = self.getParameter("frame name")
        self.log("%s -> %s" % (self.boxName, name))
        self.gotoAndStopParent(name)

    def onInput_onStop(self):
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame name" inherits_from_parent="0" content_type="3" value="Start" default_value="" custom_choice="0" tooltip="" id="3" />
                                                                </Box>
                                                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="1" indexofinput="7" outputowner="5" indexofoutput="3" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="Temperature" index="65">
                                                            <Diagram>
                                                                <Box name="Temperatures" id="1" tooltip="Enter tooltip here" x="61" y="114">
                                                                    <bitmap>media/images/box/icons_appu/hot.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        pass

    def onInput_onStart(self):
        sTemplate = "Device/SubDeviceList/%s/Temperature/Sensor/Value"
        aJointNames = ALMotion.getJointNames("Body")
        # when using dcm: remove RHipYawPitch joint
        try:
            aJointNames.remove("RHipYawPitch")
        except:
            self.log("RHipYawPitch not in the list")

        aDataNames = [sTemplate % name for name in aJointNames]
        aTemps = ALMemory.getListData(aDataNames)
        # Combine joint temperatures and joint names
        aTemperatures = zip(aTemps, aJointNames)

        highest = [0, ""]
        for item in aTemperatures:
            if item[0]>highest[0]:
                highest[0] = item[0]
                highest[1] = item[1]

        self.onStopped(highest)


    def onInput_onStop(self):
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                                    <Parameter name="hot" inherits_from_parent="0" content_type="1" value="75" default_value="75" min="0" max="100" tooltip="" id="5" />
                                                                    <Parameter name="cool" inherits_from_parent="0" content_type="1" value="70" default_value="65" min="0" max="100" tooltip="" id="6" />
                                                                </Box>
                                                                <Box name="SayTemp" id="2" tooltip="Say the sentence received in the input. See box parameters for fine tuning of the voice." x="512" y="114">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.sJoint = None
        self.sTemp = None
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass

    def onInput_onStart(self, p):
        sentence = "\RSPD="+ str( self.getParameter("Speed") )+ "\ "
        sentence += "\VCT="+ str( self.getParameter("Voice Shaping") ) + "\ "
        sentence += str(p)
        sentence +=  "\RST\ "

        #to be sure these values had the time to be updated
        if self.sJoint == None or self.sTemp == None:
            time.sleep(0.5)

        id = self.tts.post.say(sentence.format(joint=self.sJoint, temp=self.sTemp))
        self.ids.append(id)
        self.tts.wait(id, 0)
        self.ids.remove(id)
        self.onStopped() # activate output of the box

    def onInput_onTemperature(self, p):
        self.sJoint = p[1]
        self.sTemp = int(p[0])

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a string is received on this Input." id="2" />
                                                                    <Input name="onTemperature" type="0" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="4" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="5" />
                                                                    <Parameter name="Voice Shaping" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='This tag is used to modify at runtime the voice feature (tone, speed) in way slightly different of what pitch and speed modification does, giving a kind of &quot;gender or age modification &quot; effect.&#x0A;&#x0A;To better tune the effect, one should compensate the speed modification due to the value parameter. For exemple to keep an average constant speed, one should add 20% to speed parameter when decreasing 20% to the Voice Shaping (VCT) parameter :&#x0A;&#x0A;A quite good male derivation of female voice for example could be obtained using the following parameters: VCT=78.' id="6" />
                                                                    <Parameter name="Speed" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice." id="7" />
                                                                </Box>
                                                                <Box name="Localized Text" id="3" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="228" y="18">
                                                                    <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 关节{joint}的温度是{temp}度 ",
			"English" : " The joint {joint} has a temperature of {temp} degrees ",
			"French" : " L\'articulation {joint} est à {temp} degrés ",
			"German" : " Hallo ",
			"Italian" : " Ciao ",
			"Japanese" : " {joint}の温度は{temp} 度です ",
			"Korean" : " 안녕하세요  ",
			"Portuguese" : "  ",
			"Brazilian" : "  ",
			"Spanish" : " La articulación {joint} está a {temp} grados ",
			"Arabic" : "  ",
			"Polish" : "  ",
			"Czech" : "  ",
			"Dutch" : "  ",
			"Danish" : "  ",
			"Finnish" : " Nivelen {joint} lämpötila on {temp} astetta. ",
			"Swedish" : "  ",
			"Russian" : "  ",
			"Turkish" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <chinese>关节{joint}的温度是{temp}度</chinese>
                                                                        <english>The joint {joint} has a temperature of {temp} degrees</english>
                                                                        <french>L&apos;articulation {joint} est à {temp} degrés</french>
                                                                        <german>Hallo</german>
                                                                        <italian>Ciao</italian>
                                                                        <japanese>{joint}の温度は{temp} 度です</japanese>
                                                                        <korean>안녕하세요 </korean>
                                                                        <portuguese></portuguese>
                                                                        <brazilian></brazilian>
                                                                        <spanish>La articulación {joint} está a {temp} grados</spanish>
                                                                        <arabic></arabic>
                                                                        <polish></polish>
                                                                        <czech></czech>
                                                                        <dutch></dutch>
                                                                        <danish></danish>
                                                                        <finnish>Nivelen {joint} lämpötila on {temp} astetta.</finnish>
                                                                        <swedish></swedish>
                                                                        <russian></russian>
                                                                        <turkish></turkish>
                                                                        <language>15</language>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                </Box>
                                                                <Box name="gotoStart" id="4" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." x="641" y="114">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        pass

    def onInput_onStart(self):
        name = self.getParameter("frame name")
        self.log("%s -> %s" % (self.boxName, name))
        self.gotoAndStopParent(name)

    def onInput_onStop(self):
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame name" inherits_from_parent="0" content_type="3" value="Start" default_value="" custom_choice="0" tooltip="" id="3" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="2" indexofinput="3" outputowner="1" indexofoutput="4" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="5" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="Volume" index="76">
                                                            <Diagram scale="74.9154">
                                                                <Box name="VolumeDelta" id="1" tooltip="Enter tooltip here" x="592" y="352">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        self.memory = ALProxy("ALMemory")
        self.delta = int(self.getParameter("delta"))

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_init(self):
        #Load current volume (avoid mynao reset when we're in this menu)
        try:
            self.volume = int(self.memory.getData("/nao-life/volume"))
        except:
            self.volume = ALProxy("ALAudioDevice").getOutputVolume()

    def onInput_variation(self):
        self.volume = min(100, max(0, self.volume + self.delta))

        self.currentVolume(self.volume)

    def onInput_inputDeltaVolume(self, v):
        self.volume = v]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="init" type="1" type_size="1" nature="2" inner="0" tooltip="" id="2" />
                                                                    <Input name="variation" type="1" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                                    <Input name="inputDeltaVolume" type="2" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                                    <Output name="currentVolume" type="2" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                                    <Parameter name="delta" inherits_from_parent="0" content_type="1" value="-15" default_value="20" min="-100" max="100" tooltip="" id="6" />
                                                                </Box>
                                                                <Box name="Say Text" id="4" tooltip="Say the text received on its input." x="1076" y="386">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                </Box>
                                                                <Box name="SetVolumeAndRandomSpeak" id="3" tooltip="Enter tooltip here" x="807" y="392">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[#coding=utf-8
import random

class MyClass(GeneratedClass):
    SENTENCES = {
        "english": [
            "Is it ok like this ?",
            "Does the volume suits you ?",
            "Can you hear me ?",
        ],
        "french": [
            "Cela te convient-il ?",
            "C'est assez fort ?",
            "C'est bon comme ça ?",
            "Tu m'entends bien ?",
            "Hé Ho ?",
        ],
         "chinese": [
            "这样可以吗?",
            "音量适合吗?",
            "你能够听到我吗?",
            "调试音量!",
        ],
        "japanese": [
            "聞こえますか？",
            "これはどうですか？",
            "これでどう？",
            "これでいいですか？",
        ],
        "finnish": [
            "Onko näin hyvä? ",
            "Sopiiko tämä voimakkuus? ",
            "Kuulostaako hyvältä? ",
            "Sopiiko tämä ?",
            "Miltä tämä kuulostaa?",
            "Onko nyt hyvä?"
        ]
    }

    DEFAULT = "english"
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.memory = ALProxy("ALMemory")
        self.mynao = ALProxy("ALMyNao")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, v):

        self.mynao.mynaoSet("/nao-life/volume", v)

        try:
            l = self.memory.getData("/nao-life/language").lower()
        except:
            l = ALProxy("ALTextToSpeech").getLanguage().lower()

        if l in self.SENTENCES:
            s = random.choice(self.SENTENCES[l])
        else:
            s = random.choice(self.SENTENCES[self.DEFAULT])

        self.onStopped(s)]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="2" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                </Box>
                                                                <Box name="gotoStart" id="6" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." x="498" y="169">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        pass

    def onInput_onStart(self):
        name = self.getParameter("frame name")
        self.log("%s -> %s" % (self.boxName, name))
        self.gotoAndStopParent(name)

    def onInput_onStop(self):
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame name" inherits_from_parent="0" content_type="3" value="Start" default_value="" custom_choice="0" tooltip="" id="3" />
                                                                </Box>
                                                                <Box name="Say" id="7" tooltip="Say some text. Note that you must open the box to enter the text." x="364" y="46">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Say Text" id="2" tooltip="Say the text received on its input." x="422" y="65">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text" id="5" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 使用我头顶前方和后方的触觉感应器来调整声音大小。使用头部中间触觉感应器可以进入系统菜单。 ",
			"English" : " use my front and rear tactile pad to change the volume. Use the middle button to go back to the system menu ",
			"French" : " Utilise les boutons avant et arrière de ma tête pour règler le volume. Appuye sur le bouton central pour revenir au menu système ",
			"German" : " Hallo ",
			"Italian" : " Ciao ",
			"Japanese" : " 音量を変更するために私のフロントとリアの触覚ボタンを使用して下さい。システムメニューに戻るために中のボタンを使用してください。 ",
			"Korean" : " 안녕하세요  ",
			"Portuguese" : " Olá ",
			"Brazilian" : "  ",
			"Spanish" : " Hola ",
			"Arabic" : "  ",
			"Polish" : "  ",
			"Czech" : "  ",
			"Dutch" : "  ",
			"Danish" : "  ",
			"Finnish" : " Vaihda äänenvoimakkuuttani pääni etu- ja takakosketusnäppäimillä. Keskinäppäimellä palaan järjestelmävalikkoon. ",
			"Swedish" : "  ",
			"Russian" : "  ",
			"Turkish" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <chinese>使用我头顶前方和后方的触觉感应器来调整声音大小。使用头部中间触觉感应器可以进入系统菜单。</chinese>
                                                                                            <english>use my front and rear tactile pad to change the volume. Use the middle button to go back to the system menu</english>
                                                                                            <french>Utilise les boutons avant et arrière de ma tête pour règler le volume. Appuye sur le bouton central pour revenir au menu système</french>
                                                                                            <german>Hallo</german>
                                                                                            <italian>Ciao</italian>
                                                                                            <japanese>音量を変更するために私のフロントとリアの触覚ボタンを使用して下さい。システムメニューに戻るために中のボタンを使用してください。</japanese>
                                                                                            <korean>안녕하세요 </korean>
                                                                                            <portuguese>Olá</portuguese>
                                                                                            <brazilian></brazilian>
                                                                                            <spanish>Hola</spanish>
                                                                                            <arabic></arabic>
                                                                                            <polish></polish>
                                                                                            <czech></czech>
                                                                                            <dutch></dutch>
                                                                                            <danish></danish>
                                                                                            <finnish>Vaihda äänenvoimakkuuttani pääni etu- ja takakosketusnäppäimillä. Keskinäppäimellä palaan järjestelmävalikkoon.</finnish>
                                                                                            <swedish></swedish>
                                                                                            <russian></russian>
                                                                                            <turkish></turkish>
                                                                                            <language>15</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="VolumeDelta" id="5" tooltip="Enter tooltip here" x="594" y="489">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        self.memory = ALProxy("ALMemory")
        self.delta = int(self.getParameter("delta"))

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_init(self):
        #Load current volume (avoid mynao reset when we're in this menu)
        try:
            self.volume = int(self.memory.getData("/nao-life/volume"))
        except:
            self.volume = ALProxy("ALAudioDevice").getOutputVolume()

    def onInput_variation(self):
        self.volume = min(100, max(0, self.volume + self.delta))

        self.currentVolume(self.volume)

    def onInput_inputDeltaVolume(self, v):
        self.volume = v]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="init" type="1" type_size="1" nature="2" inner="0" tooltip="" id="2" />
                                                                    <Input name="variation" type="1" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                                    <Input name="inputDeltaVolume" type="2" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                                    <Output name="currentVolume" type="2" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                                    <Parameter name="delta" inherits_from_parent="0" content_type="1" value="15" default_value="20" min="-100" max="100" tooltip="" id="6" />
                                                                </Box>
                                                                <Box name="Filter Value 1" id="21" tooltip="Enter tooltip here" x="114" y="468">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_input(self, p):
        #~ self.output() #~ activate output of the box
        if p == 1:
            self.output()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="input" type="2" type_size="1" nature="1" inner="0" tooltip="" id="2" />
                                                                    <Output name="output" type="1" type_size="1" nature="2" inner="0" tooltip="" id="3" />
                                                                </Box>
                                                                <Box name="Filter Value 1" id="9" tooltip="Enter tooltip here" x="117" y="566">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_input(self, p):
        #~ self.output() #~ activate output of the box
        if p == 1:
            self.output()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="input" type="2" type_size="1" nature="1" inner="0" tooltip="" id="2" />
                                                                    <Output name="output" type="1" type_size="1" nature="2" inner="0" tooltip="" id="3" />
                                                                </Box>
                                                                <Box name="Filter Value 1" id="10" tooltip="Enter tooltip here" x="112" y="356">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_input(self, p):
        #~ self.output() #~ activate output of the box
        if p == 1:
            self.output()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="input" type="2" type_size="1" nature="1" inner="0" tooltip="" id="2" />
                                                                    <Output name="output" type="1" type_size="1" nature="2" inner="0" tooltip="" id="3" />
                                                                </Box>
                                                                <Box name="NonQueuer" id="2" tooltip="Enter tooltip here" x="939" y="394">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.waiting = False

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if not self.waiting:
            self.waiting = True
            self.onOutput(p)

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def onInput_onFinished(self):
        self.waiting = False]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onFinished" type="1" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                                    <Output name="onOutput" type="0" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="5" indexofinput="4" outputowner="1" indexofoutput="5" />
                                                                <Link inputowner="1" indexofinput="4" outputowner="5" indexofoutput="5" />
                                                                <Link inputowner="9" indexofinput="2" outputowner="0" indexofoutput="6" />
                                                                <Link inputowner="21" indexofinput="2" outputowner="0" indexofoutput="5" />
                                                                <Link inputowner="10" indexofinput="2" outputowner="0" indexofoutput="4" />
                                                                <Link inputowner="6" indexofinput="2" outputowner="21" indexofoutput="3" />
                                                                <Link inputowner="7" indexofinput="3" outputowner="10" indexofoutput="3" />
                                                                <Link inputowner="7" indexofinput="3" outputowner="21" indexofoutput="3" />
                                                                <Link inputowner="7" indexofinput="3" outputowner="9" indexofoutput="3" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="5" indexofoutput="5" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="2" indexofinput="3" outputowner="4" indexofoutput="4" />
                                                                <Link inputowner="1" indexofinput="3" outputowner="10" indexofoutput="3" />
                                                                <Link inputowner="5" indexofinput="3" outputowner="9" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                        <BehaviorKeyframe name="Version" index="84">
                                                            <Diagram>
                                                                <Box name="SayVersion" id="6" tooltip="Say some text. Note that you must open the box to enter the text." x="119" y="15">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Say Text" id="2" tooltip="Say the text set in parameters." x="422" y="65">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="110" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                    </Box>
                                                                                    <Box name="memoryGetData" id="1" tooltip="Enter tooltip here" x="200" y="60">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        naoqi = ALProxy("ALMemory").getData("Life/naoqi/version")
        naoqi = naoqi.replace(".", " . ")

        self.onStopped("Version %s" % (naoqi))]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="gotoStart" id="1" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." x="272" y="14">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        pass

    def onInput_onStart(self):
        name = self.getParameter("frame name")
        self.log("%s -> %s" % (self.boxName, name))
        self.gotoAndStopParent(name)

    def onInput_onStop(self):
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame name" inherits_from_parent="0" content_type="3" value="Start" default_value="" custom_choice="0" tooltip="" id="3" />
                                                                </Box>
                                                                <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                    <BehaviorLayer name="position">
                                                        <BehaviorKeyframe name="getInPosition" index="1">
                                                            <Diagram>
                                                                <Box name="Read" id="3" tooltip="Read a data from ALMemory" x="106" y="100">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[# Read
#~ Author : Julien Amsellem
#~ Date : 17/12/2010
#~ Version : 1.0

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        pass

    def onInput_onStart(self):
        p = ALMemory.getData(self.getParameter("var name"))
        self.onStopped(p)]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Value of the read data" id="3" />
                                                                    <Parameter name="var name" inherits_from_parent="0" content_type="3" value="robotPoseChanged" default_value="" custom_choice="0" tooltip="Name of the data to read from memory" id="4" />
                                                                </Box>
                                                                <Box name="Switch Case" id="1" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="245" y="104">
                                                                    <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Stand")):
			self.output_1(p)
		elif(p == self.typeConversion("Sit")):
			self.output_2(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <keywords>
                                                                            <keyword>&quot;Stand&quot;</keyword>
                                                                            <keyword>&quot;Sit&quot;</keyword>
                                                                            <keyword></keyword>
                                                                        </keywords>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" />
                                                                    <Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                                                    <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                                                    <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                                                </Box>
                                                                <Box name="Stand" id="5" tooltip='Robot will go to the position &quot;Stand&#x0A;Position description : Standing position with low power consumption. &#x0A;' x="619" y="48">
                                                                    <bitmap>media/images/box/movement/stand.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline enable="1" fps="10" start_frame="0" end_frame="-1" size="300">
                                                                        <ActuatorList model="Nao">
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="20" value="-0.266079" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="20" value="-10.7252" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="20" value="91.2292" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="20" value="9.4899" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="20" value="-70.3158" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="20" value="-33.6601" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="20" value="6.23791" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="20" value="0.232026" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="20" value="85.1695" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="20" value="-6.4185" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="20" value="67.6742" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="20" value="24.9637" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="20" value="9.92936" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="20" value="0.406934" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="20" value="-9.22623" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="20" value="6.4185" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="20" value="11.692" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="20" value="-5.18802" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="20" value="4.04062" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="20" value="-6.15002" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="20" value="-3.86483" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="20" value="10.8083" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="20" value="-4.2164" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="20" value="3.60596" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="20" value="3.78175" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Sit" id="6" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="618" y="206">
                                                                    <bitmap>media/images/box/movement/sit.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        self.onInput_onStop()

    def onInput_onStart(self):
        pass

    def onInput_onStop(self):
        self.gotoAndStop(200)]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Timeline enable="1" fps="25" start_frame="0" end_frame="220" size="45">
                                                                        <ActuatorList model="Nao">
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="40" value="-1.0571" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="40" value="-19.9904" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="40" value="50.8" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="40" value="16.3455" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="40" value="-38.7627" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="40" value="-60.7308" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="40" value="-0.303564" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="40" value="0" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="40" value="50.8038" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="40" value="-17.7565" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="40" value="33.8359" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="40" value="63.8118" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="40" value="-0.266079" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="40" value="0" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="40" value="-37.5274" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="40" value="10.7252" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="40" value="-90.9655" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="40" value="76.9029" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="40" value="51.5021" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="40" value="0.969213" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="40" value="-11.6872" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="40" value="-91.0582" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="40" value="75.7651" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="40" value="51.9464" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="40" value="-0.964405" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                    <Resource name="Sitting" type="Lock" timeout="2" />
                                                                    <Resource name="HeadYaw" type="Lock" timeout="2" />
                                                                    <Resource name="HeadPitch" type="Lock" timeout="2" />
                                                                    <Resource name="LShoulderPitch" type="Lock" timeout="2" />
                                                                    <Resource name="LShoulderRoll" type="Lock" timeout="2" />
                                                                    <Resource name="LElbowRoll" type="Lock" timeout="2" />
                                                                    <Resource name="LElbowYaw" type="Lock" timeout="2" />
                                                                    <Resource name="LWristYaw" type="Lock" timeout="2" />
                                                                    <Resource name="LHand" type="Lock" timeout="2" />
                                                                    <Resource name="RShoulderPitch" type="Lock" timeout="2" />
                                                                    <Resource name="RShoulderRoll" type="Lock" timeout="2" />
                                                                    <Resource name="RElbowRoll" type="Lock" timeout="2" />
                                                                    <Resource name="RElbowYaw" type="Lock" timeout="2" />
                                                                    <Resource name="RWristYaw" type="Lock" timeout="2" />
                                                                    <Resource name="RHand" type="Lock" timeout="2" />
                                                                    <Resource name="LHipYawPitch" type="Lock" timeout="2" />
                                                                    <Resource name="LHipRoll" type="Lock" timeout="2" />
                                                                    <Resource name="LHipPitch" type="Lock" timeout="2" />
                                                                    <Resource name="LKneePitch" type="Lock" timeout="2" />
                                                                    <Resource name="LAnklePitch" type="Lock" timeout="2" />
                                                                    <Resource name="LAnkleRoll" type="Lock" timeout="2" />
                                                                    <Resource name="RHipRoll" type="Lock" timeout="2" />
                                                                    <Resource name="RHipPitch" type="Lock" timeout="2" />
                                                                    <Resource name="RKneePitch" type="Lock" timeout="2" />
                                                                    <Resource name="RAnklePitch" type="Lock" timeout="2" />
                                                                    <Resource name="RAnkleRoll" type="Lock" timeout="2" />
                                                                </Box>
                                                                <Box name="Set Stiffness" id="2" tooltip="Stiffen the motors selected in parameters." x="764" y="206">
                                                                    <bitmap>media/images/box/movement/stiffness.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def setStiffness(self, stiffness):
        self.bIsRunning = True
        duration = self.getParameter("Duration (s)")
        if(self.getParameter("Head")):
            ALMotion.post.stiffnessInterpolation("Head", stiffness, duration)
        if(self.getParameter("Left arm")):
            ALMotion.post.stiffnessInterpolation("LArm", stiffness, duration)
        if(self.getParameter("Right arm")):
            ALMotion.post.stiffnessInterpolation("RArm", stiffness, duration)
        if(self.getParameter("Left leg")):
            ALMotion.post.stiffnessInterpolation("LLeg", stiffness, duration)
        if(self.getParameter("Right leg")):
            ALMotion.post.stiffnessInterpolation("RLeg", stiffness, duration)
        time.sleep(duration)
        self.bIsRunning = False

    def onInput_onSet(self):
        if( self.bIsRunning ):
            return
        self.setStiffness(self.getParameter("Motors stiffness (%)")/100.)
        self.onReady() #~ activate output of the box]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="When this input is stimulated, the stiffness of the selected motors is set to&#x0A;the stiffness parameter value." id="2" />
                                                                    <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when stiffness has been set." id="3" />
                                                                    <Parameter name="Head" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the head stiffness?" id="4" />
                                                                    <Parameter name="Left arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left arm stiffness?" id="5" />
                                                                    <Parameter name="Right arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right arm stiffness?" id="6" />
                                                                    <Parameter name="Left leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left leg stiffness?" id="7" />
                                                                    <Parameter name="Right leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right leg stiffness?" id="8" />
                                                                    <Parameter name="Motors stiffness (%)" inherits_from_parent="0" content_type="1" value="0" default_value="100" min="0" max="100" tooltip="Stiffness value the motors are set to." id="9" />
                                                                    <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.02" max="10" tooltip="How much time to go to the max/min stiffness in seconds." id="10" />
                                                                </Box>
                                                                <Box name="Comment" id="9" tooltip="To comment your behavior. Enter the text here and move the box where you like&#x0A;to add the comment.&#x0A;&#x0A;Note: This box is not functional and has no effect on the behavior." plugin="textedit_plugin" x="734" y="37">
                                                                    <bitmap>media/images/box/box-script.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self):
		self.onStopped("Trust smart stiffness for this one. (cannot put stiffness to 3%, or the robot will jump)")]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <text>Trust smart stiffness for this one. (cannot put stiffness to 3%, or the robot will jump)</text>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                </Box>
                                                                <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                <Link inputowner="6" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="6" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                                <Resource name="Audio" type="Lock" timeout="5" />
                                            </Box>
                                            <Box name="TactileCodes" id="18" tooltip="Detection de sequence tactile sur la tête de Nao." x="115" y="85">
                                                <bitmap>media/images/box/icons_appu/fingerprint.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class SequenceHandler():
    def __init__(self, aSeq):
        self.aTactilSequence = aSeq
        self.reset()

    def reset(self):
        self.nTapTime = None
        self.nTapIndex = 2

    def update(self, aState, nTime):
        # In any case, if too much time elasped, sequence is invalidated
        if self.nTapTime != None and (nTime - self.nTapTime) > self.aTactilSequence[self.nTapIndex-1]:
            self.reset()
        # If current sensors state match current expected shape
        if aState == self.aTactilSequence[self.nTapIndex]:
            self.nTapTime = nTime
            self.nTapIndex += 2
        # If current sensor state does not match sequence at current index BUT match sequence at first index
        elif aState == self.aTactilSequence[1]:
            self.nTapTime = nTime
            self.nTapIndex = 4
        # If we've reach the end of the sequence, then output !!
        if self.nTapIndex > len(self.aTactilSequence):
            return self.aTactilSequence[0]
        else:
            return None

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.bIsRunning = False
        # Build a list of devices with full name
        self.aDeviceNames = ["%sTactilTouched" % name for name in ["Front", "Middle", "Rear"]]

        # Parameters
        parameters = [   ["CaressFtoR", "Caress front to rear", [1, 0, 0], 0.5, [1, 1, 0], 0.5, [0, 1, 0], 0.5, [0, 1, 1], 0.5, [0, 0, 1]],
                                ["CaressRtoF", "Caress rear to front", [0, 0, 1], 0.5, [0, 1, 1], 0.5, [0, 1, 0], 0.5, [1, 1, 0], 0.5, [1, 0, 0]],
                                ["SingleTap", "Single tap", [1, 1, 1], 1.5, [0, 0, 0]],
                                ["EnumerateFtoR", "Enumerate front to rear", [1, 0, 0], 1.0, [0, 1, 0], 1.0, [0, 0, 1]],
                                ["EnumerateRtoF", "Enumerate rear to front", [0, 0, 1], 1.0, [0, 1, 0], 1.0, [1, 0, 0]],
                                ["ZoomIn", "Zoom in", [1, 0, 1], 1.0, [0, 1, 0]],
                                ["ZoomOut", "Zoom out", [0, 1, 0], 1.0, [1, 0, 1]],
                                ["DoubleFront", "Double front", [1, 0, 0], 1.0, [0, 0, 0], 1.0, [1, 0, 0]],
                                ["DoubleMiddle", "Double middle", [0, 1, 0], 1.0, [0, 0, 0], 1.0, [0, 1, 0]],
                                ["DoubleRear", "Double rear", [0, 0, 1], 1.0, [0, 0, 0], 1.0, [0, 0, 1]],
                                ["DoubleTap", "Double tap", [1, 1, 1], 1.0, [0, 0, 0], 1.0, [1, 1, 1]],
                                ["SecretCode", "Secret code", [1, 0, 1], 1.0, [0, 0, 0], 1.0, [1, 0, 1]],
                                ["CalmDown", "Calm down", [1, 1, 1], 8.0, [0, 0, 0]]    ]
        # Create a sequence handler object for each enable sequence
        self.aSequenceHandler = []
        for seq in parameters:
            if self.getParameter(seq[1]):
                self.aSequenceHandler.append(SequenceHandler(seq))

    def onLoad(self):
        self.bIsRunning = False
        self.onInput_reset()

    def onUnload(self):
        self.onInput_onStop()

    def onSensorChange(self, pDataName, pValue, pMessage):
        "This is called whenever one of the three tactil sensors state change"
        aState = ALMemory.getListData( self.aDeviceNames )
        # This prevent to process several times the same sensor state
        if aState != self.aState:
            self.aState = aState
            nTime = time.time()
            #~ self.log(str(aState))
            for seq in self.aSequenceHandler:
                sOutput = seq.update(aState, nTime)
                if  sOutput != None:
                    self.Match(sOutput)
                    # Force all other sequence to be reset to prevent multiple match.
                    # But this will prevent sequences like "DoubleTap" to work since each "SingleTap" will reset "DoubleTap"
                    self.onInput_reset()
                    # Get the output function from the sequence name
                    try:
                        func = getattr(self, sOutput)
                        func()
                    # If no output function found, just forget it
                    except:
                        pass

    def onInput_onStart(self):
        if not self.bIsRunning:
            self.bIsRunning = True
            # Save initial sensor state
            self.aState = None#ALMemory.getListData( self.aDeviceNames )
            # Subscribe to each sensor device
            for device in self.aDeviceNames:
                ALMemory.subscribeToEvent( device, self.getName(), "onSensorChange" )

    def onInput_onStop(self):
        if self.bIsRunning:
            for device in self.aDeviceNames:
                ALMemory.unsubscribeToEvent( device, self.getName() )
            self.onInput_reset()
            self.bIsRunning = False

    def onInput_reset(self):
        for seq in self.aSequenceHandler:
            seq.reset()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="Match" type="3" type_size="1" nature="2" inner="0" tooltip="double tap" id="4" />
                                                <Output name="SingleTap" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                <Output name="DoubleFront" type="1" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                                                <Output name="DoubleMiddle" type="1" type_size="1" nature="2" inner="0" tooltip="" id="7" />
                                                <Output name="DoubleRear" type="1" type_size="1" nature="2" inner="0" tooltip="" id="8" />
                                                <Output name="EnumerateRtoF" type="1" type_size="1" nature="2" inner="0" tooltip="" id="9" />
                                                <Output name="EnumerateFtoR" type="1" type_size="1" nature="2" inner="0" tooltip="" id="10" />
                                                <Output name="CaressRtoF" type="1" type_size="1" nature="2" inner="0" tooltip="" id="11" />
                                                <Output name="CaressFtoR" type="1" type_size="1" nature="2" inner="0" tooltip="" id="12" />
                                                <Output name="DoubleTap" type="1" type_size="1" nature="2" inner="0" tooltip="" id="13" />
                                                <Output name="CalmDown" type="1" type_size="1" nature="2" inner="0" tooltip="" id="14" />
                                                <Output name="ZoomOut" type="1" type_size="1" nature="2" inner="0" tooltip="" id="15" />
                                                <Output name="ZoomIn" type="1" type_size="1" nature="2" inner="0" tooltip="" id="16" />
                                                <Output name="SecretCode" type="1" type_size="1" nature="2" inner="0" tooltip="" id="17" />
                                                <Parameter name="Caress front to rear" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Caress front to rear" id="18" />
                                                <Parameter name="Caress rear to front" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="19" />
                                                <Parameter name="Single tap" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="20" />
                                                <Parameter name="Double front" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="21" />
                                                <Parameter name="Double middle" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="22" />
                                                <Parameter name="Double rear" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="23" />
                                                <Parameter name="Calm down" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="24" />
                                                <Parameter name="Enumerate front to rear" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="25" />
                                                <Parameter name="Enumerate rear to front" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="26" />
                                                <Parameter name="Zoom in" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="27" />
                                                <Parameter name="Zoom out" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="28" />
                                                <Parameter name="Double tap" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="" id="29" />
                                                <Parameter name="Secret code" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="30" />
                                            </Box>
                                            <Box name="Popup" id="2" tooltip="Play the sound, but NOW!&#x0A;v0.6&#x0A;&#x0A;- use preloading of sound, but sadly, it&apos;s notloaded at init but at onload (so at the loading of a timeline, argghhhh)" x="349" y="168">
                                                <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# PlaySoundWithPreloading
# v0.6
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []
        self.loadedSoundID = self.player.loadFile( ALFrameManager.getBehaviorPath(self.behaviorId) + self.getParameter("Sound File") );


    def onUnload(self):
        try:
            self.player.unloadFile(self.loadedSoundID)
        except:
            #self.log("Could not unload the sound")
            pass
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            id = self.player.post.play(self.loadedSoundID,self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()
# PlaySoundWithPreloading - end
pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="5" />
                                                <Parameter name="Panorama" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="6" />
                                                <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="7" />
                                                <Parameter name="Sound File" inherits_from_parent="0" content_type="4" value="/sounds/popup.wav" default_value="" tooltip="select your sound file from project ressource" id="8" />
                                            </Box>
                                            <Link inputowner="4" indexofinput="2" outputowner="1" indexofoutput="4" />
                                            <Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="7" />
                                            <Link inputowner="18" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="3" indexofinput="3" outputowner="18" indexofoutput="5" />
                                            <Link inputowner="2" indexofinput="2" outputowner="18" indexofoutput="5" />
                                            <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="Solitary Activity" index="61" bitmap="media/images/box/interaction/vocabulary.png">
                                        <Diagram scale="100">
                                            <Box name="BehaviorPickerSolitary" id="3" tooltip="Enter tooltip here" x="356" y="46">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import random
import thread
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.chooseLock = thread.allocate_lock()

    def onLoad(self):
        self.bm = ALProxy("ALBehaviorManager")
        self.memory = ALProxy("ALMemory")
        self.bMustStop = False
        self.postID = -1
        self.sBehavior = ""

        if self.chooseLock.locked():
            try:
                self.chooseLock.release()
            except Exception as e:
                self.log("Can't release lock at unload: %s" % str(e))

    def onUnload(self):
        self.bMustStop = True
        self.onInput_stopActivities()

    def onInput_onStop(self):
        self.onUnload()

    def onInput_init(self):
        global NLINTERNALS, NLPACKAGESMANAGER, NLSCRIPTS

        BF = NLSCRIPTS.filter
        deviation = self.getParameter("deviation")

        filters = [  BF.BehaviorFilterExcitation(ALProxy, deviation),
                     BF.BehaviorFilterBattery(ALProxy),
                     BF.BehaviorFilterContinuity(),
                     BF.BehaviorFilterPosition(ALProxy),
                     BF.BehaviorFilterPeriodicity(ALProxy),
                     BF.BehaviorFilterResources(),
                     BF.BehaviorFilterMemory(ALProxy),
                     #~ BF.BehaviorFilterTemperature(ALProxy),
        ]

        self.bs = NLSCRIPTS.BehaviorSelector(NLINTERNALS,
                                             NLPACKAGESMANAGER,
                                             filters,
                                             ["reflex", "solitary"],
                                             debug=False)
        self.onLoaded()

    def onInput_stopActivities(self):
        self.bMustStop = True
        if self.bm.isBehaviorRunning(self.sBehavior):
            try:
                self.bm.post.stopBehavior(self.sBehavior) # if we don't do post here, this line of code never returns
                #self.bm.stopBehavior(self.sBehavior) # never returns
                #self.bm.stop(self.postID) # doesn't work (not implemented)
            except Exception as e:
                self.log("ERROR: " + str(e))

        self.postID = -1
        self.sBehavior = ""
        self.bMustStop = False

    def onInput_choseBehavior(self):
        if (not self.chooseLock.acquire(0)) or self.bMustStop:
            return

        t = time.clock()
        picked = self.bs.getBehaviorsList()
        #self.log("List: %s" % str(time.clock() - t))
        random.shuffle(picked)
        #self.log("shuffled behaviors: " + str(picked))
        r = (map(lambda x : x.id, picked))
        #self.log("Convert: %s" % str(time.clock() - t))

        if len(r):
            self.onBehaviorLaunched()
            behavior = r.pop()

            self.memory.insertData("Life/%s/LastCall" % behavior, int(time.time()))
            if not self.bMustStop:
                try:
                    self.sBehavior = behavior
                    self.bm.runBehavior(behavior) # using this often prevents this box from exiting
                    #self.postID = self.bm.post.runBehavior(behavior)
                    #self.bm.wait(self.postID, 0)
                except Exception as e:
                    self.log("ERROR: " + str(e))

                self.postID = -1
                self.sBehavior = ""

            #self.log("Run: %s" % str(time.clock() - t))
            self.onBehaviorDone()

        self.chooseLock.release()
        #self.log("Time: %ss" % str(time.clock() - t))

    def onInput_setDebug(self, p):
        self.bs._debug = (p != 0)]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="init" type="1" type_size="1" nature="1" inner="0" tooltip="" id="2" />
                                                <Input name="setDebug" type="0" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                <Input name="stopActivities" type="1" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                <Input name="choseBehavior" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="" id="6" />
                                                <Output name="onBehaviorDone" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="7" />
                                                <Output name="onBehaviorLaunched" type="1" type_size="1" nature="2" inner="0" tooltip="" id="8" />
                                                <Output name="onLoaded" type="1" type_size="1" nature="2" inner="0" tooltip="" id="9" />
                                                <Parameter name="deviation" inherits_from_parent="0" content_type="2" value="0.2" default_value="0.1" min="0" max="1" tooltip="excitation radius" id="10" />
                                            </Box>
                                            <Box name="IdlingTimer" id="7" tooltip="Send a signal with a predefined period." x="356" y="220">
                                                <bitmap>media/images/box/wait.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import threading
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tb = False
        self.memory = ALProxy("ALMemory")

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def startTimer(self, period = 1):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer(period, self.startTimer, [period])
        self.tb.start()

        try:
            idle_time = self.memory.getData("Life/idle")
        except:
            idle_time = 0

        if idle_time < time.time():
            self.timerOutput()
        else:
            self.isIdle()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Period (s)") )

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the timer using the configured period value." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the timer." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="4" />
                                                <Output name="timerOutput" type="1" type_size="1" nature="2" inner="0" tooltip="Send a bang periodically." id="5" />
                                                <Output name="isIdle" type="1" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                                                <Parameter name="Period (s)" inherits_from_parent="0" content_type="2" value="3" default_value="1" min="0" max="5000" tooltip="Defines the period of the timer box (in seconds).&#x0A;&#x0A;For example, if this parameter is equal to 1s, the timerOutput will be stimulated&#x0A;every second until the onStop input is stimulated." id="7" />
                                            </Box>
                                            <Box name="IdleForAWhile" id="1" tooltip="Enter tooltip here" x="203" y="0">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.memory = ALProxy("ALMemory")

    def onUnload(self):
        pass

    def onInput_input(self):
        try:
            v = self.memory.getData("Life/idle")
        except: #Memory value doesn't exists
            v = 0

        v = max(v,
                int(time.time() + self.getParameter("idleTime")))

        self.memory.insertData("Life/idle", v)

        self.output()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="input" type="1" type_size="1" nature="1" inner="0" tooltip="" id="2" />
                                                <Output name="output" type="1" type_size="1" nature="2" inner="0" tooltip="" id="3" />
                                                <Parameter name="idleTime" inherits_from_parent="0" content_type="1" value="10" default_value="5" min="0" max="100" tooltip="" id="4" />
                                            </Box>
                                            <Box name="Set Stiffness" id="8" tooltip="Set motors stiffness." x="75" y="0">
                                                <bitmap>media/images/box/movement/stiffness.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def setStiffness(self, stiffness):
        self.bIsRunning = True
        duration = self.getParameter("Duration (s)")
        if(self.getParameter("Head")):
            ALMotion.post.stiffnessInterpolation("Head", stiffness, duration)
        if(self.getParameter("Left arm")):
            ALMotion.post.stiffnessInterpolation("LArm", stiffness, duration)
        if(self.getParameter("Right arm")):
            ALMotion.post.stiffnessInterpolation("RArm", stiffness, duration)
        if(self.getParameter("Left leg")):
            ALMotion.post.stiffnessInterpolation("LLeg", stiffness, duration)
        if(self.getParameter("Right leg")):
            ALMotion.post.stiffnessInterpolation("RLeg", stiffness, duration)
        time.sleep(duration)
        self.bIsRunning = False

    def onInput_onSet(self):
        if( self.bIsRunning ):
            return
        self.setStiffness(self.getParameter("Motors stiffness (%)")/100.)
        self.onReady() #~ activate output of the box]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="When this input is stimulated, the stiffness of the selected motors is set to&#x0A;the stiffness parameter value." id="2" />
                                                <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when stiffness has been set." id="3" />
                                                <Parameter name="Head" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the head stiffness?" id="4" />
                                                <Parameter name="Left arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left arm stiffness?" id="5" />
                                                <Parameter name="Right arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right arm stiffness?" id="6" />
                                                <Parameter name="Left leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left leg stiffness?" id="7" />
                                                <Parameter name="Right leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right leg stiffness?" id="8" />
                                                <Parameter name="Motors stiffness (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Stiffness value the motors are set to." id="9" />
                                                <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="2" default_value="1" min="0.02" max="10" tooltip="How much time to go to the max/min stiffness in seconds." id="10" />
                                                <Resource name="All motors" type="Lock" timeout="5" />
                                            </Box>
                                            <Box name="Manual Override" id="4" tooltip="Enter tooltip here" x="85" y="139">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Output name="StopCurrentActivities" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram scale="74.9154">
                                                                <Box name="TemperatureHandler" id="14" tooltip="Enter tooltip here" x="99" y="623">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram scale="94.3874">
                                                                                    <Box name="Timer" id="1" tooltip="Send a signal with a predefined period." x="92" y="297">
                                                                                        <bitmap>media/images/box/wait.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def startTimer(self, period = 1):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer(period, self.startTimer, [period])
        self.tb.start()
        self.timerOutput()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Period (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning ):
            self.onStopped()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the timer using the configured period value." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the timer." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="4" />
                                                                                        <Output name="timerOutput" type="1" type_size="1" nature="2" inner="0" tooltip="Send a bang periodically." id="5" />
                                                                                        <Parameter name="Period (s)" inherits_from_parent="0" content_type="2" value="5" default_value="1" min="0" max="5000" tooltip="Defines the period of the timer box (in seconds).&#x0A;&#x0A;For example, if this parameter is equal to 1s, the timerOutput will be stimulated&#x0A;every second until the onStop input is stimulated." id="6" />
                                                                                    </Box>
                                                                                    <Box name="UpdatePosition" id="2" tooltip="Enter tooltip here" x="209" y="255">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    THRESHOLD_SIT_UP = 70
    THRESHOLD_SIT_DOWN = 50
    stateHot = False

    def __init__(self):
        GeneratedClass.__init__(self)

    def onInput_init(self):
        self._memory = ALProxy("ALMemory")
        self._sensors = [
            "LHipPitch",
            "LHipRoll",
            "LHipYawPitch",
            "LKneePitch",
            "RHipPitch",
            "RHipRoll",
            "RKneePitch"
        ]
        self._datas = ["Device/SubDeviceList/" + s +
                       "/Temperature/Sensor/Value" for s in self._sensors]

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_tick(self):
        maxt = max(self._memory.getListData(self._datas))

        if maxt > self.THRESHOLD_SIT_UP :
            self.stateHot = True
        if maxt < self.THRESHOLD_SIT_DOWN :
            self.stateHot = False

        if self.stateHot:
            self.gotoSit()
        else:
            self.gotoStand()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="init" type="1" type_size="1" nature="2" inner="0" tooltip="" id="2" />
                                                                                        <Input name="tick" type="1" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                                                        <Output name="gotoSit" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                                        <Output name="gotoStand" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                                                    </Box>
                                                                                    <Box name="Switch Case" id="5" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="470" y="178">
                                                                                        <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Sit")):
			self.output_1(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <keywords>
                                                                                                <keyword>&quot;Sit&quot;</keyword>
                                                                                                <keyword></keyword>
                                                                                            </keywords>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" />
                                                                                        <Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                                                                        <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                                                                    </Box>
                                                                                    <Box name="takeLegsResources" id="7" tooltip="Enter tooltip here" x="807" y="187">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        ALProxy("ALMemory").insertData("/Life/hot/legs", True)

    def onInput_onStop(self):
        ALProxy("ALMemory").insertData("/Life/hot/legs", False)
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Timeline enable="0">
                                                                                            <BehaviorLayer name="behavior_layer1">
                                                                                                <BehaviorKeyframe name="release stiffness" index="1">
                                                                                                    <Diagram>
                                                                                                        <Box name="Set Stiffness" id="3" tooltip="Stiffen the motors selected in parameters." x="196" y="25">
                                                                                                            <bitmap>media/images/box/movement/stiffness.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def setStiffness(self, stiffness):
        self.bIsRunning = True
        duration = self.getParameter("Duration (s)")
        if(self.getParameter("Head")):
            ALMotion.post.stiffnessInterpolation("Head", stiffness, duration)
        if(self.getParameter("Left arm")):
            ALMotion.post.stiffnessInterpolation("LArm", stiffness, duration)
        if(self.getParameter("Right arm")):
            ALMotion.post.stiffnessInterpolation("RArm", stiffness, duration)
        if(self.getParameter("Left leg")):
            ALMotion.post.stiffnessInterpolation("LLeg", stiffness, duration)
        if(self.getParameter("Right leg")):
            ALMotion.post.stiffnessInterpolation("RLeg", stiffness, duration)
        time.sleep(duration)
        self.bIsRunning = False

    def onInput_onSet(self):
        if( self.bIsRunning ):
            return
        self.setStiffness(self.getParameter("Motors stiffness (%)")/100.)
        self.onReady() #~ activate output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="When this input is stimulated, the stiffness of the selected motors is set to&#x0A;the stiffness parameter value." id="2" />
                                                                                                            <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when stiffness has been set." id="3" />
                                                                                                            <Parameter name="Head" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Do we want to modify the head stiffness?" id="4" />
                                                                                                            <Parameter name="Left arm" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Do we want to modify the left arm stiffness?" id="5" />
                                                                                                            <Parameter name="Right arm" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Do we want to modify the right arm stiffness?" id="6" />
                                                                                                            <Parameter name="Left leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left leg stiffness?" id="7" />
                                                                                                            <Parameter name="Right leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right leg stiffness?" id="8" />
                                                                                                            <Parameter name="Motors stiffness (%)" inherits_from_parent="0" content_type="1" value="3" default_value="100" min="0" max="100" tooltip="Stiffness value the motors are set to." id="9" />
                                                                                                            <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.02" max="10" tooltip="How much time to go to the max/min stiffness in seconds." id="10" />
                                                                                                        </Box>
                                                                                                        <Box name="goto know sit pos" id="1" tooltip="Goto a predefined sit position" x="73" y="26">
                                                                                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                            <Timeline enable="1" fps="10" start_frame="0" end_frame="-1" size="300">
                                                                                                                <ActuatorList model="Nao">
                                                                                                                    <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                                                        <Key frame="25" value="-35.2422" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                        <Key frame="25" value="15.9108" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                        <Key frame="25" value="-88.6803" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                        <Key frame="25" value="64.9496" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                        <Key frame="25" value="52.86" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                        <Key frame="25" value="-3.07381" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                        <Key frame="25" value="-14.6755" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                        <Key frame="25" value="-91.0582" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                        <Key frame="25" value="67.8548" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                        <Key frame="25" value="53.4" />
                                                                                                                    </ActuatorCurve>
                                                                                                                    <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                        <Key frame="25" value="2.1997" />
                                                                                                                    </ActuatorCurve>
                                                                                                                </ActuatorList>
                                                                                                            </Timeline>
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                            <ActuatorList model="Nao">
                                                                                                <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                                    <Key frame="22" value="-34.8027" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                    <Key frame="22" value="15.8229" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                    <Key frame="22" value="-90.5261" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                    <Key frame="22" value="79.8912" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                    <Key frame="22" value="47.8986" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                    <Key frame="22" value="-0.524946" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                    <Key frame="22" value="-15.0271" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                    <Key frame="22" value="-91.0582" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                    <Key frame="22" value="80.4233" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                    <Key frame="22" value="48.7823" />
                                                                                                </ActuatorCurve>
                                                                                                <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                    <Key frame="22" value="1.0571" />
                                                                                                </ActuatorCurve>
                                                                                            </ActuatorList>
                                                                                        </Timeline>
                                                                                        <Resource name="Legs" type="Lock" timeout="0" />
                                                                                    </Box>
                                                                                    <Box name="Read" id="10" tooltip="Read a data from ALMemory" x="353" y="178">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[# Read
#~ Author : Julien Amsellem
#~ Date : 17/12/2010
#~ Version : 1.0

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        pass

    def onInput_onStart(self):
        try:
            p = ALMemory.getData(self.getParameter("var name"))
        except:
            p = None
        self.onStopped(p)]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Value of the read data" id="3" />
                                                                                        <Parameter name="var name" inherits_from_parent="0" content_type="3" value="robotPoseChanged" default_value="" custom_choice="0" tooltip="Name of the data to read from memory" id="4" />
                                                                                    </Box>
                                                                                    <Box name="Set Stiffness" id="4" tooltip="Stiffen the motors selected in parameters." x="684" y="276">
                                                                                        <bitmap>media/images/box/movement/stiffness.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def setStiffness(self, stiffness):
        self.bIsRunning = True
        duration = self.getParameter("Duration (s)")
        if(self.getParameter("Head")):
            ALMotion.post.stiffnessInterpolation("Head", stiffness, duration)
        if(self.getParameter("Left arm")):
            ALMotion.post.stiffnessInterpolation("LArm", stiffness, duration)
        if(self.getParameter("Right arm")):
            ALMotion.post.stiffnessInterpolation("RArm", stiffness, duration)
        if(self.getParameter("Left leg")):
            ALMotion.post.stiffnessInterpolation("LLeg", stiffness, duration)
        if(self.getParameter("Right leg")):
            ALMotion.post.stiffnessInterpolation("RLeg", stiffness, duration)
        time.sleep(duration)
        self.bIsRunning = False

    def onInput_onSet(self):
        if( self.bIsRunning ):
            return
        self.setStiffness(self.getParameter("Motors stiffness (%)")/100.)
        self.onReady() #~ activate output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="When this input is stimulated, the stiffness of the selected motors is set to&#x0A;the stiffness parameter value." id="2" />
                                                                                        <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when stiffness has been set." id="3" />
                                                                                        <Parameter name="Head" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Do we want to modify the head stiffness?" id="4" />
                                                                                        <Parameter name="Left arm" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Do we want to modify the left arm stiffness?" id="5" />
                                                                                        <Parameter name="Right arm" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Do we want to modify the right arm stiffness?" id="6" />
                                                                                        <Parameter name="Left leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left leg stiffness?" id="7" />
                                                                                        <Parameter name="Right leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right leg stiffness?" id="8" />
                                                                                        <Parameter name="Motors stiffness (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Stiffness value the motors are set to." id="9" />
                                                                                        <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.02" max="10" tooltip="How much time to go to the max/min stiffness in seconds." id="10" />
                                                                                    </Box>
                                                                                    <Box name="Sit Down" id="14" tooltip="NAO tries to sit down from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="729" y="70">
                                                                                        <bitmap>media/images/box/movement/sit_ground.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when NAO succeed in sitting down." id="4" />
                                                                                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to sit down after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                                                                        <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="1" max="10" tooltip="The maximum number that the robot tries to sit down and fails before the failure&#x0A;output is stimulated." id="6" />
                                                                                        <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Random" default_value="Random" custom_choice="0" tooltip='Side of the arm used to sit down. If it is set to &quot;Random&quot; the side is chosen randomly.' id="7">
                                                                                            <Choice value="Left" />
                                                                                            <Choice value="Random" />
                                                                                            <Choice value="Right" />
                                                                                        </Parameter>
                                                                                        <Timeline enable="0">
                                                                                            <BehaviorLayer name="SitDownBehavior">
                                                                                                <BehaviorKeyframe name="DetectRobotPose" index="1">
                                                                                                    <Diagram>
                                                                                                        <Box name="Check Count" id="9" tooltip="Check number of tries. If the current try number is higher than the maximum&#x0A;number of tries set in parent box parameters, then the failed output is&#x0A;stimulated, else the tryAgain output is stimulated." x="850" y="221">
                                                                                                            <bitmap>media/images/box/box-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.nTries = 0

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.nTries += 1
        if (self.nTries > self.getParameter("Maximum of tries")):
            self.failed()
        else:
            self.tryAgain()

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Output name="failed" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent if the current try number is higher than the maximum number of tries&#x0A;set in parent box parameters." id="3" />
                                                                                                            <Output name="tryAgain" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent if the current try number is smaller than or equal to the maximum&#x0A;number of tries set in parent box parameters." id="4" />
                                                                                                        </Box>
                                                                                                        <Box name="Right Sit Motion" id="13" tooltip="The robot makes the right motion to sit down depending on its current position." x="596" y="407">
                                                                                                            <bitmap>media/images/box/movement/sit_ground.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.count = 0
        pass

    def onInput_onStop(self):
        self.onUnload()
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent after a step to sit down is done." id="4" />
                                                                                                            <Timeline enable="0">
                                                                                                                <BehaviorLayer name="SitDownBehavior">
                                                                                                                    <BehaviorKeyframe name="DetectRobotPose" index="1">
                                                                                                                        <Diagram>
                                                                                                                            <Box name="CrouchToSitDown" id="11" tooltip="Sit down from crouch or stand position." x="941" y="228">
                                                                                                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                                                <Timeline enable="1" fps="10" start_frame="0" end_frame="-1" size="300">
                                                                                                                                    <ActuatorList model="Nao">
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-18.1081" />
                                                                                                                                            <Key frame="24" value="-25.2273" />
                                                                                                                                            <Key frame="34" value="-36.3017" />
                                                                                                                                            <Key frame="43" value="-35.9501" />
                                                                                                                                            <Key frame="52" value="-23.4695" />
                                                                                                                                            <Key frame="59" value="-10.5494" />
                                                                                                                                            <Key frame="66" value="-0.00240423" />
                                                                                                                                            <Key frame="72" value="-1.23289" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="21.2674" />
                                                                                                                                            <Key frame="24" value="21.5311" />
                                                                                                                                            <Key frame="34" value="21.0916" />
                                                                                                                                            <Key frame="43" value="20.4764" />
                                                                                                                                            <Key frame="52" value="21.0916" />
                                                                                                                                            <Key frame="59" value="21.0037" />
                                                                                                                                            <Key frame="66" value="21.7069" />
                                                                                                                                            <Key frame="72" value="-1.93602" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="59.8" />
                                                                                                                                            <Key frame="24" value="41.8" />
                                                                                                                                            <Key frame="29" value="41.8" />
                                                                                                                                            <Key frame="34" value="57.9182" />
                                                                                                                                            <Key frame="43" value="86.2194" />
                                                                                                                                            <Key frame="52" value="116.542" />
                                                                                                                                            <Key frame="59" value="88.1" />
                                                                                                                                            <Key frame="66" value="38.8" />
                                                                                                                                            <Key frame="72" value="52.2932" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="19.2459" />
                                                                                                                                            <Key frame="24" value="30.6718" />
                                                                                                                                            <Key frame="34" value="27.6" />
                                                                                                                                            <Key frame="43" value="48" />
                                                                                                                                            <Key frame="52" value="25.4" />
                                                                                                                                            <Key frame="59" value="89.2" />
                                                                                                                                            <Key frame="66" value="32.6054" />
                                                                                                                                            <Key frame="72" value="12.5661" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-32.2587" />
                                                                                                                                            <Key frame="24" value="-4.9" />
                                                                                                                                            <Key frame="34" value="6.06212" />
                                                                                                                                            <Key frame="43" value="-89" />
                                                                                                                                            <Key frame="52" value="-18.8991" />
                                                                                                                                            <Key frame="59" value="-69.2" />
                                                                                                                                            <Key frame="66" value="-43.5967" />
                                                                                                                                            <Key frame="72" value="-25.0515" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-54.9299" />
                                                                                                                                            <Key frame="24" value="-68.9" />
                                                                                                                                            <Key frame="34" value="-40" />
                                                                                                                                            <Key frame="43" value="-51.7" />
                                                                                                                                            <Key frame="47" value="-27.9" />
                                                                                                                                            <Key frame="52" value="-39.3" />
                                                                                                                                            <Key frame="59" value="-55" />
                                                                                                                                            <Key frame="66" value="-75.7603" />
                                                                                                                                            <Key frame="72" value="-73.3872" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="5.00742" />
                                                                                                                                            <Key frame="24" value="-41.0478" />
                                                                                                                                            <Key frame="34" value="-41.0478" />
                                                                                                                                            <Key frame="43" value="-41.0478" />
                                                                                                                                            <Key frame="52" value="-41.751" />
                                                                                                                                            <Key frame="59" value="-41.8389" />
                                                                                                                                            <Key frame="66" value="-41.3994" />
                                                                                                                                            <Key frame="72" value="3.42537" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="0.231662" />
                                                                                                                                            <Key frame="24" value="0.0669354" />
                                                                                                                                            <Key frame="34" value="0.0665718" />
                                                                                                                                            <Key frame="43" value="0.0665718" />
                                                                                                                                            <Key frame="52" value="0.0731171" />
                                                                                                                                            <Key frame="59" value="0.0694809" />
                                                                                                                                            <Key frame="66" value="0.0607536" />
                                                                                                                                            <Key frame="72" value="0.3004" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="46.3" />
                                                                                                                                            <Key frame="24" value="34" />
                                                                                                                                            <Key frame="34" value="99.9353" />
                                                                                                                                            <Key frame="39" value="119" />
                                                                                                                                            <Key frame="52" value="119.496" />
                                                                                                                                            <Key frame="59" value="108.197" />
                                                                                                                                            <Key frame="66" value="44.8" />
                                                                                                                                            <Key frame="72" value="53.3527" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-32.5223" />
                                                                                                                                            <Key frame="24" value="-53.3" />
                                                                                                                                            <Key frame="29" value="-43.7" />
                                                                                                                                            <Key frame="34" value="-31.7" />
                                                                                                                                            <Key frame="39" value="-30.1" />
                                                                                                                                            <Key frame="52" value="-31.7" />
                                                                                                                                            <Key frame="59" value="-89.2" />
                                                                                                                                            <Key frame="66" value="-31.4676" />
                                                                                                                                            <Key frame="72" value="-15.1198" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="8" />
                                                                                                                                            <Key frame="24" value="0.261271" />
                                                                                                                                            <Key frame="34" value="-3.95753" />
                                                                                                                                            <Key frame="39" value="-8.44001" />
                                                                                                                                            <Key frame="52" value="6.7" />
                                                                                                                                            <Key frame="59" value="100.37" />
                                                                                                                                            <Key frame="66" value="64.598" />
                                                                                                                                            <Key frame="72" value="29.705" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="48" />
                                                                                                                                            <Key frame="24" value="27.4246" />
                                                                                                                                            <Key frame="34" value="4.48488" />
                                                                                                                                            <Key frame="39" value="5.80326" />
                                                                                                                                            <Key frame="52" value="33.9" />
                                                                                                                                            <Key frame="59" value="59.5051" />
                                                                                                                                            <Key frame="66" value="74.0951" />
                                                                                                                                            <Key frame="72" value="73.4799" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="10.8083" />
                                                                                                                                            <Key frame="24" value="60.4671" />
                                                                                                                                            <Key frame="34" value="60.2913" />
                                                                                                                                            <Key frame="39" value="59.764" />
                                                                                                                                            <Key frame="52" value="59.764" />
                                                                                                                                            <Key frame="59" value="60.0276" />
                                                                                                                                            <Key frame="66" value="60.8187" />
                                                                                                                                            <Key frame="72" value="-3.43018" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="0.406207" />
                                                                                                                                            <Key frame="24" value="0.0854807" />
                                                                                                                                            <Key frame="34" value="0.0883898" />
                                                                                                                                            <Key frame="39" value="0.103299" />
                                                                                                                                            <Key frame="52" value="0.117844" />
                                                                                                                                            <Key frame="59" value="0.114935" />
                                                                                                                                            <Key frame="66" value="0.121117" />
                                                                                                                                            <Key frame="72" value="0.2996" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-22.7616" />
                                                                                                                                            <Key frame="24" value="-24.2557" />
                                                                                                                                            <Key frame="34" value="-52.0295" />
                                                                                                                                            <Key frame="43" value="-33.5722" />
                                                                                                                                            <Key frame="52" value="-30.9355" />
                                                                                                                                            <Key frame="59" value="-45.4376" />
                                                                                                                                            <Key frame="66" value="-44.5587" />
                                                                                                                                            <Key frame="72" value="-35.1543" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="10.4615" />
                                                                                                                                            <Key frame="24" value="18" />
                                                                                                                                            <Key frame="34" value="-15.0271" />
                                                                                                                                            <Key frame="43" value="16.7897" />
                                                                                                                                            <Key frame="52" value="30.325" />
                                                                                                                                            <Key frame="59" value="13.3619" />
                                                                                                                                            <Key frame="66" value="20.4812" />
                                                                                                                                            <Key frame="72" value="15.9987" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-33.8359" />
                                                                                                                                            <Key frame="24" value="-49.8322" />
                                                                                                                                            <Key frame="34" value="-0.524946" />
                                                                                                                                            <Key frame="43" value="-35.5937" />
                                                                                                                                            <Key frame="52" value="-89.0319" />
                                                                                                                                            <Key frame="59" value="-91.3171" />
                                                                                                                                            <Key frame="66" value="-83.9342" />
                                                                                                                                            <Key frame="72" value="-90.5261" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="121.039" />
                                                                                                                                            <Key frame="24" value="121.039" />
                                                                                                                                            <Key frame="34" value="104.149" />
                                                                                                                                            <Key frame="43" value="113.554" />
                                                                                                                                            <Key frame="52" value="61.7" />
                                                                                                                                            <Key frame="59" value="66.3558" />
                                                                                                                                            <Key frame="66" value="62.3128" />
                                                                                                                                            <Key frame="72" value="80.067" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-68.1542" />
                                                                                                                                            <Key frame="24" value="-68.1542" />
                                                                                                                                            <Key frame="34" value="-68.1542" />
                                                                                                                                            <Key frame="43" value="-29.9735" />
                                                                                                                                            <Key frame="52" value="42.3614" />
                                                                                                                                            <Key frame="59" value="52.8695" />
                                                                                                                                            <Key frame="66" value="52.8205" />
                                                                                                                                            <Key frame="72" value="47.8986" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="2.46337" />
                                                                                                                                            <Key frame="24" value="4.57277" />
                                                                                                                                            <Key frame="34" value="2.37548" />
                                                                                                                                            <Key frame="43" value="-26.0135" />
                                                                                                                                            <Key frame="52" value="-10.3688" />
                                                                                                                                            <Key frame="59" value="-2.72224" />
                                                                                                                                            <Key frame="66" value="-2.89802" />
                                                                                                                                            <Key frame="72" value="-0.524946" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-7.90785" />
                                                                                                                                            <Key frame="24" value="-14.6755" />
                                                                                                                                            <Key frame="34" value="-21.7947" />
                                                                                                                                            <Key frame="43" value="-32.957" />
                                                                                                                                            <Key frame="52" value="-30.6718" />
                                                                                                                                            <Key frame="59" value="-12.3024" />
                                                                                                                                            <Key frame="66" value="-18.4549" />
                                                                                                                                            <Key frame="72" value="-15.3786" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-43.8604" />
                                                                                                                                            <Key frame="24" value="-49.2218" />
                                                                                                                                            <Key frame="34" value="-78.226" />
                                                                                                                                            <Key frame="43" value="-94.5739" />
                                                                                                                                            <Key frame="52" value="-88.3336" />
                                                                                                                                            <Key frame="59" value="-92.2008" />
                                                                                                                                            <Key frame="66" value="-81.2144" />
                                                                                                                                            <Key frame="72" value="-90.8824" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="108.461" />
                                                                                                                                            <Key frame="24" value="44.3877" />
                                                                                                                                            <Key frame="34" value="65.4817" />
                                                                                                                                            <Key frame="43" value="65.6575" />
                                                                                                                                            <Key frame="52" value="59.5" />
                                                                                                                                            <Key frame="59" value="68.6458" />
                                                                                                                                            <Key frame="66" value="56.1652" />
                                                                                                                                            <Key frame="72" value="80.5991" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-41.8341" />
                                                                                                                                            <Key frame="24" value="19.1628" />
                                                                                                                                            <Key frame="34" value="26.1941" />
                                                                                                                                            <Key frame="43" value="44.2119" />
                                                                                                                                            <Key frame="52" value="40.8721" />
                                                                                                                                            <Key frame="59" value="53.4029" />
                                                                                                                                            <Key frame="66" value="53.4029" />
                                                                                                                                            <Key frame="72" value="48.6944" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="12.0436" />
                                                                                                                                            <Key frame="24" value="29.0067" />
                                                                                                                                            <Key frame="34" value="3.34229" />
                                                                                                                                            <Key frame="43" value="-3.1617" />
                                                                                                                                            <Key frame="52" value="10.8131" />
                                                                                                                                            <Key frame="59" value="2.02391" />
                                                                                                                                            <Key frame="66" value="2.72705" />
                                                                                                                                            <Key frame="72" value="1.0571" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                    </ActuatorList>
                                                                                                                                </Timeline>
                                                                                                                            </Box>
                                                                                                                            <Box name="BellyToCrouch" id="12" tooltip="Crouch from lie down position (on the belly)." x="707" y="382">
                                                                                                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                                                <Timeline enable="1" fps="10" start_frame="0" end_frame="-1" size="300">
                                                                                                                                    <ActuatorList model="Nao">
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="10" />
                                                                                                                                            <Key frame="20" value="-13" />
                                                                                                                                            <Key frame="34" value="16.4" />
                                                                                                                                            <Key frame="45" value="17" />
                                                                                                                                            <Key frame="58" value="-28.4" />
                                                                                                                                            <Key frame="65" value="-17" />
                                                                                                                                            <Key frame="76" value="3" />
                                                                                                                                            <Key frame="89" value="-22.4" />
                                                                                                                                            <Key frame="100" value="-1" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-33.0497" />
                                                                                                                                            <Key frame="20" value="-31.3797" />
                                                                                                                                            <Key frame="34" value="6.15002" />
                                                                                                                                            <Key frame="45" value="29.5" />
                                                                                                                                            <Key frame="58" value="21.8" />
                                                                                                                                            <Key frame="65" value="21.2674" />
                                                                                                                                            <Key frame="76" value="-6" />
                                                                                                                                            <Key frame="89" value="-30.5887" />
                                                                                                                                            <Key frame="100" value="0.4" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="4.83164" />
                                                                                                                                            <Key frame="20" value="-86.6" />
                                                                                                                                            <Key frame="34" value="-71.6342" />
                                                                                                                                            <Key frame="45" value="4.12851" />
                                                                                                                                            <Key frame="58" value="73" />
                                                                                                                                            <Key frame="65" value="43.3" />
                                                                                                                                            <Key frame="76" value="43" />
                                                                                                                                            <Key frame="89" value="74" />
                                                                                                                                            <Key frame="100" value="86.9225" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="89.0319" />
                                                                                                                                            <Key frame="20" value="0.964405" />
                                                                                                                                            <Key frame="34" value="4.39218" />
                                                                                                                                            <Key frame="45" value="4.04062" />
                                                                                                                                            <Key frame="58" value="8.96255" />
                                                                                                                                            <Key frame="65" value="53.8" />
                                                                                                                                            <Key frame="76" value="38.8" />
                                                                                                                                            <Key frame="89" value="48.5" />
                                                                                                                                            <Key frame="100" value="4.83164" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-119" />
                                                                                                                                            <Key frame="20" value="-90.5309" />
                                                                                                                                            <Key frame="34" value="-91.9371" />
                                                                                                                                            <Key frame="45" value="-102.396" />
                                                                                                                                            <Key frame="58" value="-76.0287" />
                                                                                                                                            <Key frame="65" value="-71.5" />
                                                                                                                                            <Key frame="76" value="-55.7258" />
                                                                                                                                            <Key frame="89" value="-55" />
                                                                                                                                            <Key frame="100" value="-51.6827" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-0.5" />
                                                                                                                                            <Key frame="20" value="-20.2127" />
                                                                                                                                            <Key frame="34" value="-36.5606" />
                                                                                                                                            <Key frame="45" value="-48.7775" />
                                                                                                                                            <Key frame="58" value="-88.8561" />
                                                                                                                                            <Key frame="65" value="-42" />
                                                                                                                                            <Key frame="76" value="-42.2" />
                                                                                                                                            <Key frame="89" value="-66.1801" />
                                                                                                                                            <Key frame="100" value="-63.016" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-88.8609" />
                                                                                                                                            <Key frame="20" value="-88.8609" />
                                                                                                                                            <Key frame="34" value="-86.9273" />
                                                                                                                                            <Key frame="45" value="-82.9722" />
                                                                                                                                            <Key frame="58" value="-80.5112" />
                                                                                                                                            <Key frame="65" value="-80.687" />
                                                                                                                                            <Key frame="76" value="-80.687" />
                                                                                                                                            <Key frame="89" value="-31.2" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0.0585718" />
                                                                                                                                            <Key frame="20" value="0.0196627" />
                                                                                                                                            <Key frame="34" value="0.0407536" />
                                                                                                                                            <Key frame="45" value="0.0545718" />
                                                                                                                                            <Key frame="58" value="0.0574809" />
                                                                                                                                            <Key frame="65" value="0.0574809" />
                                                                                                                                            <Key frame="76" value="0.0549355" />
                                                                                                                                            <Key frame="89" value="0.0574809" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-1.57965" />
                                                                                                                                            <Key frame="20" value="-86.6" />
                                                                                                                                            <Key frame="34" value="-70.0473" />
                                                                                                                                            <Key frame="45" value="-13.5329" />
                                                                                                                                            <Key frame="58" value="12.483" />
                                                                                                                                            <Key frame="65" value="25.7547" />
                                                                                                                                            <Key frame="76" value="52.3859" />
                                                                                                                                            <Key frame="89" value="55.0226" />
                                                                                                                                            <Key frame="100" value="77.5229" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-87.982" />
                                                                                                                                            <Key frame="20" value="-11" />
                                                                                                                                            <Key frame="34" value="-4.74856" />
                                                                                                                                            <Key frame="45" value="-4.74856" />
                                                                                                                                            <Key frame="58" value="-13.0104" />
                                                                                                                                            <Key frame="65" value="-10.4615" />
                                                                                                                                            <Key frame="76" value="-0.498473" />
                                                                                                                                            <Key frame="89" value="-7.56109" />
                                                                                                                                            <Key frame="100" value="-0.79343" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="119" />
                                                                                                                                            <Key frame="20" value="89.4714" />
                                                                                                                                            <Key frame="34" value="92.4597" />
                                                                                                                                            <Key frame="45" value="96.5906" />
                                                                                                                                            <Key frame="58" value="112.323" />
                                                                                                                                            <Key frame="65" value="111.796" />
                                                                                                                                            <Key frame="76" value="38.1426" />
                                                                                                                                            <Key frame="89" value="22.6737" />
                                                                                                                                            <Key frame="100" value="49.6564" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="6" />
                                                                                                                                            <Key frame="20" value="21.8874" />
                                                                                                                                            <Key frame="34" value="36.3896" />
                                                                                                                                            <Key frame="45" value="89.2125" />
                                                                                                                                            <Key frame="58" value="0.498473" />
                                                                                                                                            <Key frame="65" value="0.498473" />
                                                                                                                                            <Key frame="76" value="24.2605" />
                                                                                                                                            <Key frame="89" value="37.2" />
                                                                                                                                            <Key frame="100" value="47.8155" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="86.4831" />
                                                                                                                                            <Key frame="20" value="86.4831" />
                                                                                                                                            <Key frame="34" value="85.7799" />
                                                                                                                                            <Key frame="45" value="81.8248" />
                                                                                                                                            <Key frame="58" value="82.2643" />
                                                                                                                                            <Key frame="65" value="82.5279" />
                                                                                                                                            <Key frame="76" value="82.7037" />
                                                                                                                                            <Key frame="89" value="82.5279" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0.0185718" />
                                                                                                                                            <Key frame="20" value="0.0127537" />
                                                                                                                                            <Key frame="34" value="0.0262082" />
                                                                                                                                            <Key frame="45" value="0.0469355" />
                                                                                                                                            <Key frame="58" value="0.0494809" />
                                                                                                                                            <Key frame="65" value="0.04839" />
                                                                                                                                            <Key frame="76" value="0.0472991" />
                                                                                                                                            <Key frame="89" value="0.04839" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-1.93121" />
                                                                                                                                            <Key frame="20" value="2" />
                                                                                                                                            <Key frame="34" value="-24.9588" />
                                                                                                                                            <Key frame="45" value="-44.6466" />
                                                                                                                                            <Key frame="58" value="-59.6761" />
                                                                                                                                            <Key frame="65" value="-65.621" />
                                                                                                                                            <Key frame="76" value="-65.621" />
                                                                                                                                            <Key frame="89" value="-32.5175" />
                                                                                                                                            <Key frame="100" value="0" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="3.60596" />
                                                                                                                                            <Key frame="20" value="0.00240423" />
                                                                                                                                            <Key frame="34" value="0.090296" />
                                                                                                                                            <Key frame="45" value="-21.619" />
                                                                                                                                            <Key frame="58" value="-17.0486" />
                                                                                                                                            <Key frame="65" value="-17.0486" />
                                                                                                                                            <Key frame="76" value="11.1647" />
                                                                                                                                            <Key frame="89" value="7.29742" />
                                                                                                                                            <Key frame="100" value="-0.6" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="3.51807" />
                                                                                                                                            <Key frame="20" value="0.00240423" />
                                                                                                                                            <Key frame="34" value="-89.9108" />
                                                                                                                                            <Key frame="45" value="-73.3872" />
                                                                                                                                            <Key frame="58" value="-59.4124" />
                                                                                                                                            <Key frame="65" value="-66.4437" />
                                                                                                                                            <Key frame="76" value="-67.7621" />
                                                                                                                                            <Key frame="89" value="-72.7719" />
                                                                                                                                            <Key frame="100" value="-60" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="6.9" />
                                                                                                                                            <Key frame="20" value="114" />
                                                                                                                                            <Key frame="34" value="121.039" />
                                                                                                                                            <Key frame="45" value="16.1697" />
                                                                                                                                            <Key frame="58" value="23.201" />
                                                                                                                                            <Key frame="65" value="20.4764" />
                                                                                                                                            <Key frame="76" value="41.2188" />
                                                                                                                                            <Key frame="89" value="115.399" />
                                                                                                                                            <Key frame="100" value="120" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="52.8205" />
                                                                                                                                            <Key frame="20" value="-59" />
                                                                                                                                            <Key frame="34" value="-65.9212" />
                                                                                                                                            <Key frame="45" value="12.3903" />
                                                                                                                                            <Key frame="58" value="40.6915" />
                                                                                                                                            <Key frame="65" value="52.8695" />
                                                                                                                                            <Key frame="76" value="47.2833" />
                                                                                                                                            <Key frame="89" value="-28.743" />
                                                                                                                                            <Key frame="100" value="-60" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-0.0854875" />
                                                                                                                                            <Key frame="20" value="0.00240423" />
                                                                                                                                            <Key frame="34" value="-0.0854875" />
                                                                                                                                            <Key frame="45" value="-25.9257" />
                                                                                                                                            <Key frame="58" value="-17.2244" />
                                                                                                                                            <Key frame="65" value="-6.76526" />
                                                                                                                                            <Key frame="76" value="-2.37067" />
                                                                                                                                            <Key frame="89" value="-6.94104" />
                                                                                                                                            <Key frame="100" value="0" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="1.8" />
                                                                                                                                            <Key frame="20" value="0.00240423" />
                                                                                                                                            <Key frame="34" value="0.090296" />
                                                                                                                                            <Key frame="45" value="17.8444" />
                                                                                                                                            <Key frame="58" value="14.5924" />
                                                                                                                                            <Key frame="65" value="18.3718" />
                                                                                                                                            <Key frame="76" value="13.0104" />
                                                                                                                                            <Key frame="89" value="-4.30429" />
                                                                                                                                            <Key frame="100" value="0.6" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="4.39218" />
                                                                                                                                            <Key frame="20" value="-0.00240423" />
                                                                                                                                            <Key frame="34" value="-90.3551" />
                                                                                                                                            <Key frame="45" value="-95.1891" />
                                                                                                                                            <Key frame="58" value="-68.7337" />
                                                                                                                                            <Key frame="65" value="-91.5856" />
                                                                                                                                            <Key frame="76" value="-18.4597" />
                                                                                                                                            <Key frame="89" value="-40.6963" />
                                                                                                                                            <Key frame="100" value="-60" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-4.48007" />
                                                                                                                                            <Key frame="20" value="114" />
                                                                                                                                            <Key frame="34" value="119.535" />
                                                                                                                                            <Key frame="45" value="99.8474" />
                                                                                                                                            <Key frame="58" value="121.478" />
                                                                                                                                            <Key frame="65" value="121.478" />
                                                                                                                                            <Key frame="76" value="121.478" />
                                                                                                                                            <Key frame="89" value="121.478" />
                                                                                                                                            <Key frame="100" value="120" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="53.2648" />
                                                                                                                                            <Key frame="20" value="-59" />
                                                                                                                                            <Key frame="34" value="-65.2133" />
                                                                                                                                            <Key frame="45" value="-67.9785" />
                                                                                                                                            <Key frame="58" value="-67.9785" />
                                                                                                                                            <Key frame="65" value="-33.748" />
                                                                                                                                            <Key frame="76" value="-67.9785" />
                                                                                                                                            <Key frame="89" value="-67.9785" />
                                                                                                                                            <Key frame="100" value="-60" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="10.8" />
                                                                                                                                            <Key frame="20" value="0.00240423" />
                                                                                                                                            <Key frame="34" value="0.353971" />
                                                                                                                                            <Key frame="45" value="-0.261271" />
                                                                                                                                            <Key frame="58" value="-5.62267" />
                                                                                                                                            <Key frame="65" value="-0.788621" />
                                                                                                                                            <Key frame="76" value="-5.44688" />
                                                                                                                                            <Key frame="89" value="2.02391" />
                                                                                                                                            <Key frame="100" value="0" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                    </ActuatorList>
                                                                                                                                </Timeline>
                                                                                                                            </Box>
                                                                                                                            <Box name="BackToSitDown" id="14" tooltip="Sit down from lie down position (on the back)." x="923" y="91">
                                                                                                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                                                <Timeline enable="1" fps="10" start_frame="0" end_frame="-1" size="300" resources_acquisition="1">
                                                                                                                                    <BehaviorLayer name="behavior_layer1">
                                                                                                                                        <BehaviorKeyframe name="keyframe10" index="10">
                                                                                                                                            <Diagram>
                                                                                                                                                <Box name="Disable Anti-Collision" id="2" tooltip="Disable the collision protection on some specific part of NAO&apos;s body.&#x0A;&#x0A;Note: When this box is unloaded, the collision protection state will be reset to&#x0A;its previous state (enabled or disabled)." x="126" y="44">
                                                                                                                                                    <bitmap>media/images/box/sensors/anti_collision.png</bitmap>
                                                                                                                                                    <script language="4">
                                                                                                                                                        <content>
                                                                                                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy( "ALMotion" )

    def onLoad(self):
        self.collisionLArmState = self.motion.getCollisionProtectionEnabled("LArm")
        self.collisionRArmState = self.motion.getCollisionProtectionEnabled("RArm")

    def onUnload(self):
        self.motion.setCollisionProtectionEnabled("LArm", self.collisionLArmState)
        self.motion.setCollisionProtectionEnabled("RArm", self.collisionRArmState)

    def onInput_onSet(self):
        # enable/disable collision protection
        result = self.motion.setCollisionProtectionEnabled( self.getParameter("Body part"), False )
        if( result ):
            self.success()
        else:
            self.logger.warning( "Disabling collision protection failed. Deactivation succeeds only if the current state of the chain is not in collision. If you want to deactivate collision of both arms, they need to be off collision." )
            self.failure()]]>
</content>
                                                                                                                                                    </script>
                                                                                                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                                    <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="The anti-collision feature is enabled or disabled when this input is stimulated." id="2" />
                                                                                                                                                    <Output name="success" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the collision protection has been successfully enabled or disabled.&#x0A;&#x0A;Note: The only case where there is a failure is when you try to disable the&#x0A;anti-collision while it is currently in collision with some part of his body." id="3" />
                                                                                                                                                    <Output name="failure" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the collision protection has failed to be enabled or disabled.&#x0A;&#x0A;Note: The only case where there is a failure is when you try to disable the&#x0A;anti-collision while it is currently in collision with some part of his body." id="4" />
                                                                                                                                                    <Parameter name="Body part" inherits_from_parent="0" content_type="3" value="Arms" default_value="Arms" custom_choice="0" tooltip="Body part which avoids the collision." id="5">
                                                                                                                                                        <Choice value="Arms" />
                                                                                                                                                        <Choice value="LArm" />
                                                                                                                                                        <Choice value="RArm" />
                                                                                                                                                    </Parameter>
                                                                                                                                                </Box>
                                                                                                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                                                                            </Diagram>
                                                                                                                                        </BehaviorKeyframe>
                                                                                                                                    </BehaviorLayer>
                                                                                                                                    <ActuatorList model="Nao">
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-1.40867" />
                                                                                                                                            <Key frame="20" value="-2.73208e-05" />
                                                                                                                                            <Key frame="28" value="2.37067" />
                                                                                                                                            <Key frame="36" value="3.86374e-05" />
                                                                                                                                            <Key frame="44" value="-0.353971" />
                                                                                                                                            <Key frame="50" value="0.788621" />
                                                                                                                                            <Key frame="56" value="1.40386" />
                                                                                                                                            <Key frame="62" value="-1.32078" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="3.60116" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="28" value="29.5016" />
                                                                                                                                            <Key frame="36" value="-38.5028" />
                                                                                                                                            <Key frame="44" value="-1.23289" />
                                                                                                                                            <Key frame="50" value="11.1598" />
                                                                                                                                            <Key frame="56" value="4.2164" />
                                                                                                                                            <Key frame="62" value="-2.02391" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="119.496" />
                                                                                                                                            <Key frame="20" value="120" />
                                                                                                                                            <Key frame="26" value="116.806" />
                                                                                                                                            <Key frame="36" value="119.496" />
                                                                                                                                            <Key frame="44" value="119.5" />
                                                                                                                                            <Key frame="50" value="74.9692" />
                                                                                                                                            <Key frame="56" value="51.7658" />
                                                                                                                                            <Key frame="59" value="40.3" />
                                                                                                                                            <Key frame="62" value="51.6779" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="56.1604" />
                                                                                                                                            <Key frame="20" value="21" />
                                                                                                                                            <Key frame="26" value="20" />
                                                                                                                                            <Key frame="36" value="20" />
                                                                                                                                            <Key frame="44" value="23" />
                                                                                                                                            <Key frame="50" value="67.1469" />
                                                                                                                                            <Key frame="56" value="22.7616" />
                                                                                                                                            <Key frame="62" value="12.3903" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-43.5967" />
                                                                                                                                            <Key frame="20" value="9" />
                                                                                                                                            <Key frame="26" value="7.02893" />
                                                                                                                                            <Key frame="36" value="5" />
                                                                                                                                            <Key frame="44" value="3.42537" />
                                                                                                                                            <Key frame="50" value="-54.6711" />
                                                                                                                                            <Key frame="56" value="-55.1984" />
                                                                                                                                            <Key frame="62" value="-25.1394" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-35.7695" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="26" value="-88.5" />
                                                                                                                                            <Key frame="36" value="-89.5017" />
                                                                                                                                            <Key frame="44" value="-50.1" />
                                                                                                                                            <Key frame="46" value="-59.3" />
                                                                                                                                            <Key frame="50" value="-38.9336" />
                                                                                                                                            <Key frame="56" value="-64.3343" />
                                                                                                                                            <Key frame="62" value="-70.7504" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-40.4326" />
                                                                                                                                            <Key frame="26" value="-102.484" />
                                                                                                                                            <Key frame="44" value="-41.2236" />
                                                                                                                                            <Key frame="50" value="-2.72705" />
                                                                                                                                            <Key frame="62" value="3.42537" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0.0502082" />
                                                                                                                                            <Key frame="26" value="0.0763898" />
                                                                                                                                            <Key frame="44" value="0.0905716" />
                                                                                                                                            <Key frame="50" value="0.0127537" />
                                                                                                                                            <Key frame="62" value="0.3004" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="119.496" />
                                                                                                                                            <Key frame="20" value="120" />
                                                                                                                                            <Key frame="26" value="111.889" />
                                                                                                                                            <Key frame="36" value="119.496" />
                                                                                                                                            <Key frame="44" value="119.5" />
                                                                                                                                            <Key frame="50" value="109.955" />
                                                                                                                                            <Key frame="56" value="59.4172" />
                                                                                                                                            <Key frame="59" value="41.8" />
                                                                                                                                            <Key frame="62" value="53.0011" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-61.5266" />
                                                                                                                                            <Key frame="20" value="-21" />
                                                                                                                                            <Key frame="26" value="-20" />
                                                                                                                                            <Key frame="36" value="-20" />
                                                                                                                                            <Key frame="44" value="-23.5" />
                                                                                                                                            <Key frame="50" value="-51.507" />
                                                                                                                                            <Key frame="56" value="-42.4541" />
                                                                                                                                            <Key frame="62" value="-13.8893" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="43.8556" />
                                                                                                                                            <Key frame="20" value="-9" />
                                                                                                                                            <Key frame="26" value="-14.7682" />
                                                                                                                                            <Key frame="36" value="-5" />
                                                                                                                                            <Key frame="44" value="-3.78175" />
                                                                                                                                            <Key frame="50" value="90.3503" />
                                                                                                                                            <Key frame="56" value="61.1702" />
                                                                                                                                            <Key frame="62" value="30.0566" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="40.6963" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="26" value="88.5" />
                                                                                                                                            <Key frame="36" value="89.5017" />
                                                                                                                                            <Key frame="44" value="40.9" />
                                                                                                                                            <Key frame="46" value="60.4" />
                                                                                                                                            <Key frame="50" value="54.8468" />
                                                                                                                                            <Key frame="56" value="65.6575" />
                                                                                                                                            <Key frame="62" value="72.7768" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="66.0043" />
                                                                                                                                            <Key frame="26" value="98.8758" />
                                                                                                                                            <Key frame="44" value="63.6312" />
                                                                                                                                            <Key frame="50" value="14.1482" />
                                                                                                                                            <Key frame="62" value="-3.2544" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="26" value="0.0182082" />
                                                                                                                                            <Key frame="44" value="0.00293558" />
                                                                                                                                            <Key frame="50" value="0.126571" />
                                                                                                                                            <Key frame="62" value="0.2996" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-26.9804" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="31" value="0.441863" />
                                                                                                                                            <Key frame="36" value="-2.73208e-05" />
                                                                                                                                            <Key frame="44" value="-37.5274" />
                                                                                                                                            <Key frame="50" value="-40.34" />
                                                                                                                                            <Key frame="62" value="-35.418" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="2.55126" />
                                                                                                                                            <Key frame="20" value="8.991e-06" />
                                                                                                                                            <Key frame="31" value="3.34229" />
                                                                                                                                            <Key frame="36" value="8.991e-06" />
                                                                                                                                            <Key frame="44" value="-3.68905" />
                                                                                                                                            <Key frame="50" value="8.06912" />
                                                                                                                                            <Key frame="62" value="15.9987" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="14.3288" />
                                                                                                                                            <Key frame="20" value="-10" />
                                                                                                                                            <Key frame="31" value="21.448" />
                                                                                                                                            <Key frame="36" value="-10" />
                                                                                                                                            <Key frame="44" value="-67.4984" />
                                                                                                                                            <Key frame="50" value="-90" />
                                                                                                                                            <Key frame="62" value="-90.5261" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="5.2711" />
                                                                                                                                            <Key frame="20" value="96" />
                                                                                                                                            <Key frame="31" value="115.751" />
                                                                                                                                            <Key frame="36" value="96" />
                                                                                                                                            <Key frame="44" value="61.6976" />
                                                                                                                                            <Key frame="50" value="80.3062" />
                                                                                                                                            <Key frame="62" value="79.9791" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="47.2833" />
                                                                                                                                            <Key frame="20" value="14" />
                                                                                                                                            <Key frame="31" value="-26.0184" />
                                                                                                                                            <Key frame="36" value="14" />
                                                                                                                                            <Key frame="44" value="38.8457" />
                                                                                                                                            <Key frame="50" value="44.4668" />
                                                                                                                                            <Key frame="62" value="47.8986" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-1.93121" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="31" value="-1.93121" />
                                                                                                                                            <Key frame="36" value="0" />
                                                                                                                                            <Key frame="44" value="9.75839" />
                                                                                                                                            <Key frame="50" value="5.20441" />
                                                                                                                                            <Key frame="62" value="-0.524946" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-8.52309" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="31" value="-1.31597" />
                                                                                                                                            <Key frame="36" value="0" />
                                                                                                                                            <Key frame="44" value="3.51807" />
                                                                                                                                            <Key frame="50" value="-6.98985" />
                                                                                                                                            <Key frame="62" value="-15.3786" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="10.6325" />
                                                                                                                                            <Key frame="20" value="-10" />
                                                                                                                                            <Key frame="31" value="16.1697" />
                                                                                                                                            <Key frame="36" value="-10" />
                                                                                                                                            <Key frame="44" value="-66.7122" />
                                                                                                                                            <Key frame="50" value="-90" />
                                                                                                                                            <Key frame="62" value="-91.234" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="10.9889" />
                                                                                                                                            <Key frame="20" value="96" />
                                                                                                                                            <Key frame="31" value="116.107" />
                                                                                                                                            <Key frame="36" value="96" />
                                                                                                                                            <Key frame="44" value="62.7571" />
                                                                                                                                            <Key frame="50" value="78.8859" />
                                                                                                                                            <Key frame="62" value="80.687" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="26.7215" />
                                                                                                                                            <Key frame="20" value="14" />
                                                                                                                                            <Key frame="31" value="-21.4432" />
                                                                                                                                            <Key frame="36" value="14" />
                                                                                                                                            <Key frame="44" value="41.1357" />
                                                                                                                                            <Key frame="50" value="44.1094" />
                                                                                                                                            <Key frame="62" value="48.6944" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="9.5826" />
                                                                                                                                            <Key frame="20" value="4.94951e-06" />
                                                                                                                                            <Key frame="31" value="-2.28278" />
                                                                                                                                            <Key frame="36" value="4.94951e-06" />
                                                                                                                                            <Key frame="44" value="-8.25942" />
                                                                                                                                            <Key frame="50" value="-6.87076" />
                                                                                                                                            <Key frame="62" value="1.0571" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                    </ActuatorList>
                                                                                                                                </Timeline>
                                                                                                                            </Box>
                                                                                                                            <Box name="SideToBelly" id="6" tooltip="Lie down on the back or the belly from an other lie down position (on the side)." x="513" y="538">
                                                                                                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                                                <Timeline enable="1" fps="10" start_frame="0" end_frame="-1" size="300">
                                                                                                                                    <ActuatorList model="Nao">
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="41.3067" />
                                                                                                                                            <Key frame="10" value="41.3067" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="8.52309" />
                                                                                                                                            <Key frame="10" value="8.52309" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="108.72" />
                                                                                                                                            <Key frame="10" value="108.72" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="45.965" />
                                                                                                                                            <Key frame="10" value="45.965" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-56.8684" />
                                                                                                                                            <Key frame="10" value="-56.8684" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-26.8046" />
                                                                                                                                            <Key frame="10" value="-26.8046" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-38.8505" />
                                                                                                                                            <Key frame="10" value="-38.8505" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="0.200389" />
                                                                                                                                            <Key frame="10" value="0.200389" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="113.383" />
                                                                                                                                            <Key frame="10" value="113.383" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-44.6514" />
                                                                                                                                            <Key frame="10" value="-44.6514" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="52.9084" />
                                                                                                                                            <Key frame="10" value="52.9084" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="19.5144" />
                                                                                                                                            <Key frame="10" value="19.5144" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="37" />
                                                                                                                                            <Key frame="10" value="37" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="0.146571" />
                                                                                                                                            <Key frame="10" value="0.146571" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-65.5648" />
                                                                                                                                            <Key frame="10" value="-65.5648" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="14.4166" />
                                                                                                                                            <Key frame="10" value="14.4166" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="2.02391" />
                                                                                                                                            <Key frame="10" value="2.02391" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-5.27591" />
                                                                                                                                            <Key frame="10" value="-5.27591" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="20.3885" />
                                                                                                                                            <Key frame="10" value="20.3885" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="19.6902" />
                                                                                                                                            <Key frame="10" value="19.6902" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-1.75543" />
                                                                                                                                            <Key frame="10" value="-1.75543" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="23.8163" />
                                                                                                                                            <Key frame="10" value="23.8163" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-5.2711" />
                                                                                                                                            <Key frame="10" value="-5.2711" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="29.9735" />
                                                                                                                                            <Key frame="10" value="29.9735" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-3.86483" />
                                                                                                                                            <Key frame="10" value="-3.86483" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                    </ActuatorList>
                                                                                                                                </Timeline>
                                                                                                                            </Box>
                                                                                                                            <Box name="Switch Case" id="9" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="261" y="101">
                                                                                                                                <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Back")):
			self.output_1(p)
		elif(p == self.typeConversion("Stand")):
			self.output_2(p)
		elif(p == self.typeConversion("Crouch")):
			self.output_3(p)
		elif(p == self.typeConversion("Knee")):
			self.output_4(p)
		elif(p == self.typeConversion("Frog")):
			self.output_5(p)
		elif(p == self.typeConversion("Belly")):
			self.output_6(p)
		elif(p == self.typeConversion("Left")):
			self.output_7(p)
		elif(p == self.typeConversion("Right")):
			self.output_8(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
</content>
                                                                                                                                </script>
                                                                                                                                <pluginContent>
                                                                                                                                    <keywords>
                                                                                                                                        <keyword>&quot;Back&quot;</keyword>
                                                                                                                                        <keyword>&quot;Stand&quot;</keyword>
                                                                                                                                        <keyword>&quot;Crouch&quot;</keyword>
                                                                                                                                        <keyword>&quot;Knee&quot;</keyword>
                                                                                                                                        <keyword>&quot;Frog&quot;</keyword>
                                                                                                                                        <keyword>&quot;Belly&quot;</keyword>
                                                                                                                                        <keyword>&quot;Left&quot;</keyword>
                                                                                                                                        <keyword>&quot;Right&quot;</keyword>
                                                                                                                                        <keyword></keyword>
                                                                                                                                    </keywords>
                                                                                                                                </pluginContent>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                                                                                                                <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                                                                                                                <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                                                                                                                <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                                                                                                                <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                                                                                                                <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                                                                                                                                <Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="8" />
                                                                                                                                <Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="9" />
                                                                                                                                <Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="10" />
                                                                                                                                <Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="11" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Switch Case" id="1" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="795" y="538">
                                                                                                                                <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Belly")):
			self.output_1(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
</content>
                                                                                                                                </script>
                                                                                                                                <pluginContent>
                                                                                                                                    <keywords>
                                                                                                                                        <keyword>&quot;Belly&quot;</keyword>
                                                                                                                                        <keyword></keyword>
                                                                                                                                    </keywords>
                                                                                                                                </pluginContent>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                                                                                                                <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                                                                                                                <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Switch Case" id="4" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="977" y="378">
                                                                                                                                <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Crouch")):
			self.output_1(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
</content>
                                                                                                                                </script>
                                                                                                                                <pluginContent>
                                                                                                                                    <keywords>
                                                                                                                                        <keyword>&quot;Crouch&quot;</keyword>
                                                                                                                                        <keyword></keyword>
                                                                                                                                    </keywords>
                                                                                                                                </pluginContent>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                                                                                                                <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                                                                                                                <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Get Robot Pose" id="5" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="656" y="542">
                                                                                                                                <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPose")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                                                                                                                <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Get Robot Pose" id="2" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="845" y="378">
                                                                                                                                <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPose")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                                                                                                                <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Get Robot Pose" id="3" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="104" y="49">
                                                                                                                                <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPose")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                                                                                                                <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Relax Motors" id="7" tooltip="Relax motors for a while for a better electric current consumption.&#x0A;&#x0A;!!Warning!! This box must be applied only after a Sit Down. In other positions NAO&#x0A;could fall." x="1087" y="131">
                                                                                                                                <bitmap>media/images/box/movement/stiffness.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        # WARNING: This should only be called when sitting and its
        # behavior may change in future version. The aim of the method
        # is to reduce battery usage when motors are stiff while sitting.
        try:
            ALMotion._relaxMotorsWhenSitting()
        except:
            pass
        self.onStopped()]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                                                                            </Box>
                                                                                                                            <Link inputowner="11" indexofinput="2" outputowner="9" indexofoutput="6" />
                                                                                                                            <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="8" />
                                                                                                                            <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="9" />
                                                                                                                            <Link inputowner="6" indexofinput="2" outputowner="9" indexofoutput="11" />
                                                                                                                            <Link inputowner="14" indexofinput="2" outputowner="9" indexofoutput="4" />
                                                                                                                            <Link inputowner="11" indexofinput="2" outputowner="9" indexofoutput="5" />
                                                                                                                            <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="7" />
                                                                                                                            <Link inputowner="6" indexofinput="2" outputowner="9" indexofoutput="10" />
                                                                                                                            <Link inputowner="0" indexofinput="4" outputowner="9" indexofoutput="3" />
                                                                                                                            <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="3" />
                                                                                                                            <Link inputowner="12" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                                                            <Link inputowner="11" indexofinput="2" outputowner="4" indexofoutput="4" />
                                                                                                                            <Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="3" />
                                                                                                                            <Link inputowner="5" indexofinput="2" outputowner="6" indexofoutput="4" />
                                                                                                                            <Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                                                            <Link inputowner="2" indexofinput="2" outputowner="12" indexofoutput="4" />
                                                                                                                            <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                                                            <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                                            <Link inputowner="9" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                                                                            <Link inputowner="7" indexofinput="2" outputowner="14" indexofoutput="4" />
                                                                                                                            <Link inputowner="7" indexofinput="2" outputowner="11" indexofoutput="4" />
                                                                                                                            <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="3" />
                                                                                                                        </Diagram>
                                                                                                                    </BehaviorKeyframe>
                                                                                                                </BehaviorLayer>
                                                                                                            </Timeline>
                                                                                                        </Box>
                                                                                                        <Box name="Switch Case" id="1" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="431" y="128">
                                                                                                            <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Sit")):
			self.output_1(p)
		elif(p == self.typeConversion("Unknown")):
			self.output_2(p)
		elif(p == self.typeConversion("HeadBack")):
			self.output_3(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <keywords>
                                                                                                                    <keyword>&quot;Sit&quot;</keyword>
                                                                                                                    <keyword>&quot;Unknown&quot;</keyword>
                                                                                                                    <keyword>&quot;HeadBack&quot;</keyword>
                                                                                                                    <keyword></keyword>
                                                                                                                </keywords>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                                                                                            <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                                                                                            <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                                                                                            <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                                                                                            <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                                                                                        </Box>
                                                                                                        <Box name="Only Once" id="4" tooltip="This box&apos;s output is stimulated only the first time the onSignal input is." x="104" y="62">
                                                                                                            <bitmap>media/images/box/box-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bFirstTime = True

    def onUnload(self):
        self.bFirstTime = True

    def onInput_onSignal(self):
        if( self.bFirstTime ):
            self.bFirstTime = False
            self.firstTime()]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onSignal" type="1" type_size="1" nature="1" inner="0" tooltip="The signal that must pass only once." id="2" />
                                                                                                            <Output name="firstTime" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent first time the onSignal input is stimulated." id="3" />
                                                                                                        </Box>
                                                                                                        <Box name="Set Stiffness" id="7" tooltip="Set motors stiffness." x="707" y="221">
                                                                                                            <bitmap>media/images/box/movement/stiffness.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def setStiffness(self, stiffness):
        self.bIsRunning = True
        duration = self.getParameter("Duration (s)")
        if(self.getParameter("Head")):
            ALMotion.post.stiffnessInterpolation("Head", stiffness, duration)
        if(self.getParameter("Left arm")):
            ALMotion.post.stiffnessInterpolation("LArm", stiffness, duration)
        if(self.getParameter("Right arm")):
            ALMotion.post.stiffnessInterpolation("RArm", stiffness, duration)
        if(self.getParameter("Left leg")):
            ALMotion.post.stiffnessInterpolation("LLeg", stiffness, duration)
        if(self.getParameter("Right leg")):
            ALMotion.post.stiffnessInterpolation("RLeg", stiffness, duration)
        time.sleep(duration)
        self.bIsRunning = False

    def onInput_onSet(self):
        if( self.bIsRunning ):
            return
        self.setStiffness(self.getParameter("Motors stiffness (%)")/100.)
        self.onReady() #~ activate output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="When this input is stimulated, the stiffness of the selected motors is set to&#x0A;the stiffness parameter value." id="2" />
                                                                                                            <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when stiffness has been set." id="3" />
                                                                                                            <Parameter name="Head" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the head stiffness?" id="4" />
                                                                                                            <Parameter name="Left arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left arm stiffness?" id="5" />
                                                                                                            <Parameter name="Right arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right arm stiffness?" id="6" />
                                                                                                            <Parameter name="Left leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left leg stiffness?" id="7" />
                                                                                                            <Parameter name="Right leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right leg stiffness?" id="8" />
                                                                                                            <Parameter name="Motors stiffness (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Stiffness value the motors are set to." id="9" />
                                                                                                            <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.02" max="10" tooltip="How much time to go to the max/min stiffness in seconds." id="10" />
                                                                                                        </Box>
                                                                                                        <Box name="Get Robot Pose" id="2" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="272" y="115">
                                                                                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPose")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                                                                                            <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                                                                                        </Box>
                                                                                                        <Box name="Left Sit Motion" id="3" tooltip="The robot makes the right motion to sit down depending on its current position." x="597" y="514">
                                                                                                            <bitmap>media/images/box/movement/sit_ground.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.count = 0
        pass

    def onInput_onStop(self):
        self.onUnload()
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent after a step to sit down is done." id="4" />
                                                                                                            <Timeline enable="0">
                                                                                                                <BehaviorLayer name="SitDownBehavior">
                                                                                                                    <BehaviorKeyframe name="DetectRobotPose" index="1">
                                                                                                                        <Diagram>
                                                                                                                            <Box name="CrouchToSitDown" id="11" tooltip="Sit down from crouch or stand position." x="941" y="228">
                                                                                                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                                                <Timeline enable="1" fps="10" start_frame="0" end_frame="-1" size="300">
                                                                                                                                    <ActuatorList model="Nao">
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-18.1081" />
                                                                                                                                            <Key frame="24" value="-25.2273" />
                                                                                                                                            <Key frame="34" value="-36.3017" />
                                                                                                                                            <Key frame="43" value="-35.9501" />
                                                                                                                                            <Key frame="52" value="-23.4695" />
                                                                                                                                            <Key frame="59" value="-10.5494" />
                                                                                                                                            <Key frame="66" value="-0.00240423" />
                                                                                                                                            <Key frame="72" value="-1.23289" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="21.2674" />
                                                                                                                                            <Key frame="24" value="21.5311" />
                                                                                                                                            <Key frame="34" value="21.0916" />
                                                                                                                                            <Key frame="43" value="20.4764" />
                                                                                                                                            <Key frame="52" value="21.0916" />
                                                                                                                                            <Key frame="59" value="21.0037" />
                                                                                                                                            <Key frame="66" value="21.7069" />
                                                                                                                                            <Key frame="72" value="-1.93602" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="46.3" />
                                                                                                                                            <Key frame="24" value="34" />
                                                                                                                                            <Key frame="34" value="99.9353" />
                                                                                                                                            <Key frame="39" value="119" />
                                                                                                                                            <Key frame="52" value="119.496" />
                                                                                                                                            <Key frame="59" value="108.197" />
                                                                                                                                            <Key frame="66" value="44.8" />
                                                                                                                                            <Key frame="72" value="53.3527" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="32.5223" />
                                                                                                                                            <Key frame="24" value="53.3" />
                                                                                                                                            <Key frame="29" value="43.7" />
                                                                                                                                            <Key frame="34" value="31.7" />
                                                                                                                                            <Key frame="39" value="30.1" />
                                                                                                                                            <Key frame="52" value="31.7" />
                                                                                                                                            <Key frame="59" value="89.2" />
                                                                                                                                            <Key frame="66" value="31.4676" />
                                                                                                                                            <Key frame="72" value="15.1198" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-8" />
                                                                                                                                            <Key frame="24" value="-0.261271" />
                                                                                                                                            <Key frame="34" value="3.95753" />
                                                                                                                                            <Key frame="39" value="8.44001" />
                                                                                                                                            <Key frame="52" value="-6.7" />
                                                                                                                                            <Key frame="59" value="-100.37" />
                                                                                                                                            <Key frame="66" value="-64.598" />
                                                                                                                                            <Key frame="72" value="-29.705" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-48" />
                                                                                                                                            <Key frame="24" value="-27.4246" />
                                                                                                                                            <Key frame="34" value="-4.48488" />
                                                                                                                                            <Key frame="39" value="-5.80326" />
                                                                                                                                            <Key frame="52" value="-33.9" />
                                                                                                                                            <Key frame="59" value="-59.5051" />
                                                                                                                                            <Key frame="66" value="-74.0951" />
                                                                                                                                            <Key frame="72" value="-73.4799" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-10.8083" />
                                                                                                                                            <Key frame="24" value="-60.4671" />
                                                                                                                                            <Key frame="34" value="-60.2913" />
                                                                                                                                            <Key frame="39" value="-59.764" />
                                                                                                                                            <Key frame="52" value="-59.764" />
                                                                                                                                            <Key frame="59" value="-60.0276" />
                                                                                                                                            <Key frame="66" value="-60.8187" />
                                                                                                                                            <Key frame="72" value="3.43018" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="0.406207" />
                                                                                                                                            <Key frame="24" value="0.0854807" />
                                                                                                                                            <Key frame="34" value="0.0883898" />
                                                                                                                                            <Key frame="39" value="0.103299" />
                                                                                                                                            <Key frame="52" value="0.117844" />
                                                                                                                                            <Key frame="59" value="0.114935" />
                                                                                                                                            <Key frame="66" value="0.121117" />
                                                                                                                                            <Key frame="72" value="0.2996" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="59.8" />
                                                                                                                                            <Key frame="24" value="41.8" />
                                                                                                                                            <Key frame="29" value="41.8" />
                                                                                                                                            <Key frame="34" value="57.9182" />
                                                                                                                                            <Key frame="43" value="86.2194" />
                                                                                                                                            <Key frame="52" value="116.542" />
                                                                                                                                            <Key frame="59" value="88.1" />
                                                                                                                                            <Key frame="66" value="38.8" />
                                                                                                                                            <Key frame="72" value="52.2932" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-19.2459" />
                                                                                                                                            <Key frame="24" value="-30.6718" />
                                                                                                                                            <Key frame="34" value="-27.6" />
                                                                                                                                            <Key frame="43" value="-48" />
                                                                                                                                            <Key frame="52" value="-25.4" />
                                                                                                                                            <Key frame="59" value="-89.2" />
                                                                                                                                            <Key frame="66" value="-32.6054" />
                                                                                                                                            <Key frame="72" value="-12.5661" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="32.2587" />
                                                                                                                                            <Key frame="24" value="4.9" />
                                                                                                                                            <Key frame="34" value="-6.06212" />
                                                                                                                                            <Key frame="43" value="89" />
                                                                                                                                            <Key frame="52" value="18.8991" />
                                                                                                                                            <Key frame="59" value="69.2" />
                                                                                                                                            <Key frame="66" value="43.5967" />
                                                                                                                                            <Key frame="72" value="25.0515" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="54.9299" />
                                                                                                                                            <Key frame="24" value="68.9" />
                                                                                                                                            <Key frame="34" value="40" />
                                                                                                                                            <Key frame="43" value="51.7" />
                                                                                                                                            <Key frame="47" value="27.9" />
                                                                                                                                            <Key frame="52" value="39.3" />
                                                                                                                                            <Key frame="59" value="55" />
                                                                                                                                            <Key frame="66" value="75.7603" />
                                                                                                                                            <Key frame="72" value="73.3872" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-5.00742" />
                                                                                                                                            <Key frame="24" value="41.0478" />
                                                                                                                                            <Key frame="34" value="41.0478" />
                                                                                                                                            <Key frame="43" value="41.0478" />
                                                                                                                                            <Key frame="52" value="41.751" />
                                                                                                                                            <Key frame="59" value="41.8389" />
                                                                                                                                            <Key frame="66" value="41.3994" />
                                                                                                                                            <Key frame="72" value="-3.42537" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="0.231662" />
                                                                                                                                            <Key frame="24" value="0.0669354" />
                                                                                                                                            <Key frame="34" value="0.0665718" />
                                                                                                                                            <Key frame="43" value="0.0665718" />
                                                                                                                                            <Key frame="52" value="0.0731171" />
                                                                                                                                            <Key frame="59" value="0.0694809" />
                                                                                                                                            <Key frame="66" value="0.0607536" />
                                                                                                                                            <Key frame="72" value="0.3004" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-22.7616" />
                                                                                                                                            <Key frame="24" value="-24.2557" />
                                                                                                                                            <Key frame="34" value="-52.0295" />
                                                                                                                                            <Key frame="43" value="-33.5722" />
                                                                                                                                            <Key frame="52" value="-30.9355" />
                                                                                                                                            <Key frame="59" value="-45.4376" />
                                                                                                                                            <Key frame="66" value="-44.5587" />
                                                                                                                                            <Key frame="72" value="-35.1543" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="7.90785" />
                                                                                                                                            <Key frame="24" value="14.6755" />
                                                                                                                                            <Key frame="34" value="21.7947" />
                                                                                                                                            <Key frame="43" value="32.957" />
                                                                                                                                            <Key frame="52" value="30.6718" />
                                                                                                                                            <Key frame="59" value="12.3024" />
                                                                                                                                            <Key frame="66" value="18.4549" />
                                                                                                                                            <Key frame="72" value="15.3786" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-43.8604" />
                                                                                                                                            <Key frame="24" value="-49.2218" />
                                                                                                                                            <Key frame="34" value="-78.226" />
                                                                                                                                            <Key frame="43" value="-94.5739" />
                                                                                                                                            <Key frame="52" value="-88.3336" />
                                                                                                                                            <Key frame="59" value="-92.2008" />
                                                                                                                                            <Key frame="66" value="-81.2144" />
                                                                                                                                            <Key frame="72" value="-90.8824" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="108.461" />
                                                                                                                                            <Key frame="24" value="44.3877" />
                                                                                                                                            <Key frame="34" value="65.4817" />
                                                                                                                                            <Key frame="43" value="65.6575" />
                                                                                                                                            <Key frame="52" value="59.5" />
                                                                                                                                            <Key frame="59" value="68.6458" />
                                                                                                                                            <Key frame="66" value="56.1652" />
                                                                                                                                            <Key frame="72" value="80.5991" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-41.8341" />
                                                                                                                                            <Key frame="24" value="19.1628" />
                                                                                                                                            <Key frame="34" value="26.1941" />
                                                                                                                                            <Key frame="43" value="44.2119" />
                                                                                                                                            <Key frame="52" value="40.8721" />
                                                                                                                                            <Key frame="59" value="53.4029" />
                                                                                                                                            <Key frame="66" value="53.4029" />
                                                                                                                                            <Key frame="72" value="48.6944" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-12.0436" />
                                                                                                                                            <Key frame="24" value="-29.0067" />
                                                                                                                                            <Key frame="34" value="-3.34229" />
                                                                                                                                            <Key frame="43" value="3.1617" />
                                                                                                                                            <Key frame="52" value="-10.8131" />
                                                                                                                                            <Key frame="59" value="-2.02391" />
                                                                                                                                            <Key frame="66" value="-2.72705" />
                                                                                                                                            <Key frame="72" value="-1.0571" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-10.4615" />
                                                                                                                                            <Key frame="24" value="-18" />
                                                                                                                                            <Key frame="34" value="15.0271" />
                                                                                                                                            <Key frame="43" value="-16.7897" />
                                                                                                                                            <Key frame="52" value="-30.325" />
                                                                                                                                            <Key frame="59" value="-13.3619" />
                                                                                                                                            <Key frame="66" value="-20.4812" />
                                                                                                                                            <Key frame="72" value="-15.9987" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-33.8359" />
                                                                                                                                            <Key frame="24" value="-49.8322" />
                                                                                                                                            <Key frame="34" value="-0.524946" />
                                                                                                                                            <Key frame="43" value="-35.5937" />
                                                                                                                                            <Key frame="52" value="-89.0319" />
                                                                                                                                            <Key frame="59" value="-91.3171" />
                                                                                                                                            <Key frame="66" value="-83.9342" />
                                                                                                                                            <Key frame="72" value="-90.5261" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="121.039" />
                                                                                                                                            <Key frame="24" value="121.039" />
                                                                                                                                            <Key frame="34" value="104.149" />
                                                                                                                                            <Key frame="43" value="113.554" />
                                                                                                                                            <Key frame="52" value="61.7" />
                                                                                                                                            <Key frame="59" value="66.3558" />
                                                                                                                                            <Key frame="66" value="62.3128" />
                                                                                                                                            <Key frame="72" value="80.067" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-68.1542" />
                                                                                                                                            <Key frame="24" value="-68.1542" />
                                                                                                                                            <Key frame="34" value="-68.1542" />
                                                                                                                                            <Key frame="43" value="-29.9735" />
                                                                                                                                            <Key frame="52" value="42.3614" />
                                                                                                                                            <Key frame="59" value="52.8695" />
                                                                                                                                            <Key frame="66" value="52.8205" />
                                                                                                                                            <Key frame="72" value="47.8986" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-2.46337" />
                                                                                                                                            <Key frame="24" value="-4.57277" />
                                                                                                                                            <Key frame="34" value="-2.37548" />
                                                                                                                                            <Key frame="43" value="26.0135" />
                                                                                                                                            <Key frame="52" value="10.3688" />
                                                                                                                                            <Key frame="59" value="2.72224" />
                                                                                                                                            <Key frame="66" value="2.89802" />
                                                                                                                                            <Key frame="72" value="0.524946" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                    </ActuatorList>
                                                                                                                                </Timeline>
                                                                                                                            </Box>
                                                                                                                            <Box name="BellyToCrouch" id="12" tooltip="Crouch from lie down position (on the belly)." x="707" y="382">
                                                                                                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                                                <Timeline enable="1" fps="10" start_frame="0" end_frame="-1" size="300">
                                                                                                                                    <ActuatorList model="Nao">
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="10" />
                                                                                                                                            <Key frame="20" value="-13" />
                                                                                                                                            <Key frame="34" value="16.4" />
                                                                                                                                            <Key frame="45" value="17" />
                                                                                                                                            <Key frame="58" value="-28.4" />
                                                                                                                                            <Key frame="65" value="-17" />
                                                                                                                                            <Key frame="76" value="3" />
                                                                                                                                            <Key frame="89" value="-22.4" />
                                                                                                                                            <Key frame="100" value="-1" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-33.0497" />
                                                                                                                                            <Key frame="20" value="-31.3797" />
                                                                                                                                            <Key frame="34" value="6.15002" />
                                                                                                                                            <Key frame="45" value="29.5" />
                                                                                                                                            <Key frame="58" value="21.8" />
                                                                                                                                            <Key frame="65" value="21.2674" />
                                                                                                                                            <Key frame="76" value="-6" />
                                                                                                                                            <Key frame="89" value="-30.5887" />
                                                                                                                                            <Key frame="100" value="0.4" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-1.57965" />
                                                                                                                                            <Key frame="20" value="-86.6" />
                                                                                                                                            <Key frame="34" value="-70.0473" />
                                                                                                                                            <Key frame="45" value="-13.5329" />
                                                                                                                                            <Key frame="58" value="12.483" />
                                                                                                                                            <Key frame="65" value="25.7547" />
                                                                                                                                            <Key frame="76" value="52.3859" />
                                                                                                                                            <Key frame="89" value="55.0226" />
                                                                                                                                            <Key frame="100" value="77.5229" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="87.982" />
                                                                                                                                            <Key frame="20" value="11" />
                                                                                                                                            <Key frame="34" value="4.74856" />
                                                                                                                                            <Key frame="45" value="4.74856" />
                                                                                                                                            <Key frame="58" value="13.0104" />
                                                                                                                                            <Key frame="65" value="10.4615" />
                                                                                                                                            <Key frame="76" value="0.498473" />
                                                                                                                                            <Key frame="89" value="7.56109" />
                                                                                                                                            <Key frame="100" value="0.79343" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-119" />
                                                                                                                                            <Key frame="20" value="-89.4714" />
                                                                                                                                            <Key frame="34" value="-92.4597" />
                                                                                                                                            <Key frame="45" value="-96.5906" />
                                                                                                                                            <Key frame="58" value="-112.323" />
                                                                                                                                            <Key frame="65" value="-111.796" />
                                                                                                                                            <Key frame="76" value="-38.1426" />
                                                                                                                                            <Key frame="89" value="-22.6737" />
                                                                                                                                            <Key frame="100" value="-49.6564" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-6" />
                                                                                                                                            <Key frame="20" value="-21.8874" />
                                                                                                                                            <Key frame="34" value="-36.3896" />
                                                                                                                                            <Key frame="45" value="-89.2125" />
                                                                                                                                            <Key frame="58" value="-0.498473" />
                                                                                                                                            <Key frame="65" value="-0.498473" />
                                                                                                                                            <Key frame="76" value="-24.2605" />
                                                                                                                                            <Key frame="89" value="-37.2" />
                                                                                                                                            <Key frame="100" value="-47.8155" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-86.4831" />
                                                                                                                                            <Key frame="20" value="-86.4831" />
                                                                                                                                            <Key frame="34" value="-85.7799" />
                                                                                                                                            <Key frame="45" value="-81.8248" />
                                                                                                                                            <Key frame="58" value="-82.2643" />
                                                                                                                                            <Key frame="65" value="-82.5279" />
                                                                                                                                            <Key frame="76" value="-82.7037" />
                                                                                                                                            <Key frame="89" value="-82.5279" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0.0185718" />
                                                                                                                                            <Key frame="20" value="0.0127537" />
                                                                                                                                            <Key frame="34" value="0.0262082" />
                                                                                                                                            <Key frame="45" value="0.0469355" />
                                                                                                                                            <Key frame="58" value="0.0494809" />
                                                                                                                                            <Key frame="65" value="0.04839" />
                                                                                                                                            <Key frame="76" value="0.0472991" />
                                                                                                                                            <Key frame="89" value="0.04839" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="4.83164" />
                                                                                                                                            <Key frame="20" value="-86.6" />
                                                                                                                                            <Key frame="34" value="-71.6342" />
                                                                                                                                            <Key frame="45" value="4.12851" />
                                                                                                                                            <Key frame="58" value="73" />
                                                                                                                                            <Key frame="65" value="43.3" />
                                                                                                                                            <Key frame="76" value="43" />
                                                                                                                                            <Key frame="89" value="74" />
                                                                                                                                            <Key frame="100" value="86.9225" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-89.0319" />
                                                                                                                                            <Key frame="20" value="-0.964405" />
                                                                                                                                            <Key frame="34" value="-4.39218" />
                                                                                                                                            <Key frame="45" value="-4.04062" />
                                                                                                                                            <Key frame="58" value="-8.96255" />
                                                                                                                                            <Key frame="65" value="-53.8" />
                                                                                                                                            <Key frame="76" value="-38.8" />
                                                                                                                                            <Key frame="89" value="-48.5" />
                                                                                                                                            <Key frame="100" value="-4.83164" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="119" />
                                                                                                                                            <Key frame="20" value="90.5309" />
                                                                                                                                            <Key frame="34" value="91.9371" />
                                                                                                                                            <Key frame="45" value="102.396" />
                                                                                                                                            <Key frame="58" value="76.0287" />
                                                                                                                                            <Key frame="65" value="71.5" />
                                                                                                                                            <Key frame="76" value="55.7258" />
                                                                                                                                            <Key frame="89" value="55" />
                                                                                                                                            <Key frame="100" value="51.6827" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0.5" />
                                                                                                                                            <Key frame="20" value="20.2127" />
                                                                                                                                            <Key frame="34" value="36.5606" />
                                                                                                                                            <Key frame="45" value="48.7775" />
                                                                                                                                            <Key frame="58" value="88.8561" />
                                                                                                                                            <Key frame="65" value="42" />
                                                                                                                                            <Key frame="76" value="42.2" />
                                                                                                                                            <Key frame="89" value="66.1801" />
                                                                                                                                            <Key frame="100" value="63.016" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="88.8609" />
                                                                                                                                            <Key frame="20" value="88.8609" />
                                                                                                                                            <Key frame="34" value="86.9273" />
                                                                                                                                            <Key frame="45" value="82.9722" />
                                                                                                                                            <Key frame="58" value="80.5112" />
                                                                                                                                            <Key frame="65" value="80.687" />
                                                                                                                                            <Key frame="76" value="80.687" />
                                                                                                                                            <Key frame="89" value="31.2" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0.0585718" />
                                                                                                                                            <Key frame="20" value="0.0196627" />
                                                                                                                                            <Key frame="34" value="0.0407536" />
                                                                                                                                            <Key frame="45" value="0.0545718" />
                                                                                                                                            <Key frame="58" value="0.0574809" />
                                                                                                                                            <Key frame="65" value="0.0574809" />
                                                                                                                                            <Key frame="76" value="0.0549355" />
                                                                                                                                            <Key frame="89" value="0.0574809" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-1.93121" />
                                                                                                                                            <Key frame="20" value="2" />
                                                                                                                                            <Key frame="34" value="-24.9588" />
                                                                                                                                            <Key frame="45" value="-44.6466" />
                                                                                                                                            <Key frame="58" value="-59.6761" />
                                                                                                                                            <Key frame="65" value="-65.621" />
                                                                                                                                            <Key frame="76" value="-65.621" />
                                                                                                                                            <Key frame="89" value="-32.5175" />
                                                                                                                                            <Key frame="100" value="0" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-1.8" />
                                                                                                                                            <Key frame="20" value="-0.00240423" />
                                                                                                                                            <Key frame="34" value="-0.090296" />
                                                                                                                                            <Key frame="45" value="-17.8444" />
                                                                                                                                            <Key frame="58" value="-14.5924" />
                                                                                                                                            <Key frame="65" value="-18.3718" />
                                                                                                                                            <Key frame="76" value="-13.0104" />
                                                                                                                                            <Key frame="89" value="4.30429" />
                                                                                                                                            <Key frame="100" value="-0.6" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="4.39218" />
                                                                                                                                            <Key frame="20" value="-0.00240423" />
                                                                                                                                            <Key frame="34" value="-90.3551" />
                                                                                                                                            <Key frame="45" value="-95.1891" />
                                                                                                                                            <Key frame="58" value="-68.7337" />
                                                                                                                                            <Key frame="65" value="-91.5856" />
                                                                                                                                            <Key frame="76" value="-18.4597" />
                                                                                                                                            <Key frame="89" value="-40.6963" />
                                                                                                                                            <Key frame="100" value="-60" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-4.48007" />
                                                                                                                                            <Key frame="20" value="114" />
                                                                                                                                            <Key frame="34" value="119.535" />
                                                                                                                                            <Key frame="45" value="99.8474" />
                                                                                                                                            <Key frame="58" value="121.478" />
                                                                                                                                            <Key frame="65" value="121.478" />
                                                                                                                                            <Key frame="76" value="121.478" />
                                                                                                                                            <Key frame="89" value="121.478" />
                                                                                                                                            <Key frame="100" value="120" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="53.2648" />
                                                                                                                                            <Key frame="20" value="-59" />
                                                                                                                                            <Key frame="34" value="-65.2133" />
                                                                                                                                            <Key frame="45" value="-67.9785" />
                                                                                                                                            <Key frame="58" value="-67.9785" />
                                                                                                                                            <Key frame="65" value="-33.748" />
                                                                                                                                            <Key frame="76" value="-67.9785" />
                                                                                                                                            <Key frame="89" value="-67.9785" />
                                                                                                                                            <Key frame="100" value="-60" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-10.8" />
                                                                                                                                            <Key frame="20" value="-0.00240423" />
                                                                                                                                            <Key frame="34" value="-0.353971" />
                                                                                                                                            <Key frame="45" value="0.261271" />
                                                                                                                                            <Key frame="58" value="5.62267" />
                                                                                                                                            <Key frame="65" value="0.788621" />
                                                                                                                                            <Key frame="76" value="5.44688" />
                                                                                                                                            <Key frame="89" value="-2.02391" />
                                                                                                                                            <Key frame="100" value="0" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-3.60596" />
                                                                                                                                            <Key frame="20" value="-0.00240423" />
                                                                                                                                            <Key frame="34" value="-0.090296" />
                                                                                                                                            <Key frame="45" value="21.619" />
                                                                                                                                            <Key frame="58" value="17.0486" />
                                                                                                                                            <Key frame="65" value="17.0486" />
                                                                                                                                            <Key frame="76" value="-11.1647" />
                                                                                                                                            <Key frame="89" value="-7.29742" />
                                                                                                                                            <Key frame="100" value="0.6" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="3.51807" />
                                                                                                                                            <Key frame="20" value="0.00240423" />
                                                                                                                                            <Key frame="34" value="-89.9108" />
                                                                                                                                            <Key frame="45" value="-73.3872" />
                                                                                                                                            <Key frame="58" value="-59.4124" />
                                                                                                                                            <Key frame="65" value="-66.4437" />
                                                                                                                                            <Key frame="76" value="-67.7621" />
                                                                                                                                            <Key frame="89" value="-72.7719" />
                                                                                                                                            <Key frame="100" value="-60" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="6.9" />
                                                                                                                                            <Key frame="20" value="114" />
                                                                                                                                            <Key frame="34" value="121.039" />
                                                                                                                                            <Key frame="45" value="16.1697" />
                                                                                                                                            <Key frame="58" value="23.201" />
                                                                                                                                            <Key frame="65" value="20.4764" />
                                                                                                                                            <Key frame="76" value="41.2188" />
                                                                                                                                            <Key frame="89" value="115.399" />
                                                                                                                                            <Key frame="100" value="120" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="52.8205" />
                                                                                                                                            <Key frame="20" value="-59" />
                                                                                                                                            <Key frame="34" value="-65.9212" />
                                                                                                                                            <Key frame="45" value="12.3903" />
                                                                                                                                            <Key frame="58" value="40.6915" />
                                                                                                                                            <Key frame="65" value="52.8695" />
                                                                                                                                            <Key frame="76" value="47.2833" />
                                                                                                                                            <Key frame="89" value="-28.743" />
                                                                                                                                            <Key frame="100" value="-60" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0.0854875" />
                                                                                                                                            <Key frame="20" value="-0.00240423" />
                                                                                                                                            <Key frame="34" value="0.0854875" />
                                                                                                                                            <Key frame="45" value="25.9257" />
                                                                                                                                            <Key frame="58" value="17.2244" />
                                                                                                                                            <Key frame="65" value="6.76526" />
                                                                                                                                            <Key frame="76" value="2.37067" />
                                                                                                                                            <Key frame="89" value="6.94104" />
                                                                                                                                            <Key frame="100" value="0" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                    </ActuatorList>
                                                                                                                                </Timeline>
                                                                                                                            </Box>
                                                                                                                            <Box name="BackToSitDown" id="14" tooltip="Sit down from lie down position (on the back)." x="923" y="91">
                                                                                                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                                                <Timeline enable="1" fps="10" start_frame="0" end_frame="-1" size="300" resources_acquisition="1">
                                                                                                                                    <BehaviorLayer name="behavior_layer1">
                                                                                                                                        <BehaviorKeyframe name="keyframe10" index="10">
                                                                                                                                            <Diagram>
                                                                                                                                                <Box name="Disable Anti-Collision" id="2" tooltip="Disable the collision protection on some specific part of NAO&apos;s body.&#x0A;&#x0A;Note: When this box is unloaded, the collision protection state will be reset to&#x0A;its previous state (enabled or disabled)." x="129" y="64">
                                                                                                                                                    <bitmap>media/images/box/sensors/anti_collision.png</bitmap>
                                                                                                                                                    <script language="4">
                                                                                                                                                        <content>
                                                                                                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy( "ALMotion" )

    def onLoad(self):
        self.collisionLArmState = self.motion.getCollisionProtectionEnabled("LArm")
        self.collisionRArmState = self.motion.getCollisionProtectionEnabled("RArm")

    def onUnload(self):
        self.motion.setCollisionProtectionEnabled("LArm", self.collisionLArmState)
        self.motion.setCollisionProtectionEnabled("RArm", self.collisionRArmState)

    def onInput_onSet(self):
        # enable/disable collision protection
        result = self.motion.setCollisionProtectionEnabled( self.getParameter("Body part"), False )
        if( result ):
            self.success()
        else:
            self.logger.warning( "Disabling collision protection failed. Deactivation succeeds only if the current state of the chain is not in collision. If you want to deactivate collision of both arms, they need to be off collision." )
            self.failure()]]>
</content>
                                                                                                                                                    </script>
                                                                                                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                                    <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="The anti-collision feature is enabled or disabled when this input is stimulated." id="2" />
                                                                                                                                                    <Output name="success" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the collision protection has been successfully enabled or disabled.&#x0A;&#x0A;Note: The only case where there is a failure is when you try to disable the&#x0A;anti-collision while it is currently in collision with some part of his body." id="3" />
                                                                                                                                                    <Output name="failure" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the collision protection has failed to be enabled or disabled.&#x0A;&#x0A;Note: The only case where there is a failure is when you try to disable the&#x0A;anti-collision while it is currently in collision with some part of his body." id="4" />
                                                                                                                                                    <Parameter name="Body part" inherits_from_parent="0" content_type="3" value="Arms" default_value="Arms" custom_choice="0" tooltip="Body part which avoids the collision." id="5">
                                                                                                                                                        <Choice value="Arms" />
                                                                                                                                                        <Choice value="LArm" />
                                                                                                                                                        <Choice value="RArm" />
                                                                                                                                                    </Parameter>
                                                                                                                                                </Box>
                                                                                                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                                                                            </Diagram>
                                                                                                                                        </BehaviorKeyframe>
                                                                                                                                    </BehaviorLayer>
                                                                                                                                    <ActuatorList model="Nao">
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-1.40867" />
                                                                                                                                            <Key frame="20" value="-2.73208e-05" />
                                                                                                                                            <Key frame="28" value="2.37067" />
                                                                                                                                            <Key frame="36" value="3.86374e-05" />
                                                                                                                                            <Key frame="44" value="-0.353971" />
                                                                                                                                            <Key frame="50" value="0.788621" />
                                                                                                                                            <Key frame="56" value="1.40386" />
                                                                                                                                            <Key frame="62" value="-1.32078" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="3.60116" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="28" value="29.5016" />
                                                                                                                                            <Key frame="36" value="-38.5028" />
                                                                                                                                            <Key frame="44" value="-1.23289" />
                                                                                                                                            <Key frame="50" value="11.1598" />
                                                                                                                                            <Key frame="56" value="4.2164" />
                                                                                                                                            <Key frame="62" value="-2.02391" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="119.496" />
                                                                                                                                            <Key frame="20" value="120" />
                                                                                                                                            <Key frame="26" value="111.889" />
                                                                                                                                            <Key frame="36" value="119.496" />
                                                                                                                                            <Key frame="44" value="119.5" />
                                                                                                                                            <Key frame="50" value="109.955" />
                                                                                                                                            <Key frame="56" value="59.4172" />
                                                                                                                                            <Key frame="59" value="41.8" />
                                                                                                                                            <Key frame="62" value="53.0011" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="61.5266" />
                                                                                                                                            <Key frame="20" value="21" />
                                                                                                                                            <Key frame="26" value="20" />
                                                                                                                                            <Key frame="36" value="20" />
                                                                                                                                            <Key frame="44" value="23.5" />
                                                                                                                                            <Key frame="50" value="51.507" />
                                                                                                                                            <Key frame="56" value="42.4541" />
                                                                                                                                            <Key frame="62" value="13.8893" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-43.8556" />
                                                                                                                                            <Key frame="20" value="9" />
                                                                                                                                            <Key frame="26" value="14.7682" />
                                                                                                                                            <Key frame="36" value="5" />
                                                                                                                                            <Key frame="44" value="3.78175" />
                                                                                                                                            <Key frame="50" value="-90.3503" />
                                                                                                                                            <Key frame="56" value="-61.1702" />
                                                                                                                                            <Key frame="62" value="-30.0566" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-40.6963" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="26" value="-88.5" />
                                                                                                                                            <Key frame="36" value="-89.5017" />
                                                                                                                                            <Key frame="44" value="-40.9" />
                                                                                                                                            <Key frame="46" value="-60.4" />
                                                                                                                                            <Key frame="50" value="-54.8468" />
                                                                                                                                            <Key frame="56" value="-65.6575" />
                                                                                                                                            <Key frame="62" value="-72.7768" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-66.0043" />
                                                                                                                                            <Key frame="26" value="-98.8758" />
                                                                                                                                            <Key frame="44" value="-63.6312" />
                                                                                                                                            <Key frame="50" value="-14.1482" />
                                                                                                                                            <Key frame="62" value="3.2544" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="26" value="0.0182082" />
                                                                                                                                            <Key frame="44" value="0.00293558" />
                                                                                                                                            <Key frame="50" value="0.126571" />
                                                                                                                                            <Key frame="62" value="0.2996" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="119.496" />
                                                                                                                                            <Key frame="20" value="120" />
                                                                                                                                            <Key frame="26" value="116.806" />
                                                                                                                                            <Key frame="36" value="119.496" />
                                                                                                                                            <Key frame="44" value="119.5" />
                                                                                                                                            <Key frame="50" value="74.9692" />
                                                                                                                                            <Key frame="56" value="51.7658" />
                                                                                                                                            <Key frame="59" value="40.3" />
                                                                                                                                            <Key frame="62" value="51.6779" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-56.1604" />
                                                                                                                                            <Key frame="20" value="-21" />
                                                                                                                                            <Key frame="26" value="-20" />
                                                                                                                                            <Key frame="36" value="-20" />
                                                                                                                                            <Key frame="44" value="-23" />
                                                                                                                                            <Key frame="50" value="-67.1469" />
                                                                                                                                            <Key frame="56" value="-22.7616" />
                                                                                                                                            <Key frame="62" value="-12.3903" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="43.5967" />
                                                                                                                                            <Key frame="20" value="-9" />
                                                                                                                                            <Key frame="26" value="-7.02893" />
                                                                                                                                            <Key frame="36" value="-5" />
                                                                                                                                            <Key frame="44" value="-3.42537" />
                                                                                                                                            <Key frame="50" value="54.6711" />
                                                                                                                                            <Key frame="56" value="55.1984" />
                                                                                                                                            <Key frame="62" value="25.1394" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="35.7695" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="26" value="88.5" />
                                                                                                                                            <Key frame="36" value="89.5017" />
                                                                                                                                            <Key frame="44" value="50.1" />
                                                                                                                                            <Key frame="46" value="59.3" />
                                                                                                                                            <Key frame="50" value="38.9336" />
                                                                                                                                            <Key frame="56" value="64.3343" />
                                                                                                                                            <Key frame="62" value="70.7504" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="40.4326" />
                                                                                                                                            <Key frame="26" value="102.484" />
                                                                                                                                            <Key frame="44" value="41.2236" />
                                                                                                                                            <Key frame="50" value="2.72705" />
                                                                                                                                            <Key frame="62" value="-3.42537" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0.0502082" />
                                                                                                                                            <Key frame="26" value="0.0763898" />
                                                                                                                                            <Key frame="44" value="0.0905716" />
                                                                                                                                            <Key frame="50" value="0.0127537" />
                                                                                                                                            <Key frame="62" value="0.3004" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-26.9804" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="31" value="0.441863" />
                                                                                                                                            <Key frame="36" value="-2.73208e-05" />
                                                                                                                                            <Key frame="44" value="-37.5274" />
                                                                                                                                            <Key frame="50" value="-40.34" />
                                                                                                                                            <Key frame="62" value="-35.418" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="8.52309" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="31" value="1.31597" />
                                                                                                                                            <Key frame="36" value="0" />
                                                                                                                                            <Key frame="44" value="-3.51807" />
                                                                                                                                            <Key frame="50" value="6.98985" />
                                                                                                                                            <Key frame="62" value="15.3786" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="10.6325" />
                                                                                                                                            <Key frame="20" value="-10" />
                                                                                                                                            <Key frame="31" value="16.1697" />
                                                                                                                                            <Key frame="36" value="-10" />
                                                                                                                                            <Key frame="44" value="-66.7122" />
                                                                                                                                            <Key frame="50" value="-90" />
                                                                                                                                            <Key frame="62" value="-91.234" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="10.9889" />
                                                                                                                                            <Key frame="20" value="96" />
                                                                                                                                            <Key frame="31" value="116.107" />
                                                                                                                                            <Key frame="36" value="96" />
                                                                                                                                            <Key frame="44" value="62.7571" />
                                                                                                                                            <Key frame="50" value="78.8859" />
                                                                                                                                            <Key frame="62" value="80.687" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="26.7215" />
                                                                                                                                            <Key frame="20" value="14" />
                                                                                                                                            <Key frame="31" value="-21.4432" />
                                                                                                                                            <Key frame="36" value="14" />
                                                                                                                                            <Key frame="44" value="41.1357" />
                                                                                                                                            <Key frame="50" value="44.1094" />
                                                                                                                                            <Key frame="62" value="48.6944" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-9.5826" />
                                                                                                                                            <Key frame="20" value="-4.94951e-06" />
                                                                                                                                            <Key frame="31" value="2.28278" />
                                                                                                                                            <Key frame="36" value="-4.94951e-06" />
                                                                                                                                            <Key frame="44" value="8.25942" />
                                                                                                                                            <Key frame="50" value="6.87076" />
                                                                                                                                            <Key frame="62" value="-1.0571" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-2.55126" />
                                                                                                                                            <Key frame="20" value="-8.991e-06" />
                                                                                                                                            <Key frame="31" value="-3.34229" />
                                                                                                                                            <Key frame="36" value="-8.991e-06" />
                                                                                                                                            <Key frame="44" value="3.68905" />
                                                                                                                                            <Key frame="50" value="-8.06912" />
                                                                                                                                            <Key frame="62" value="-15.9987" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="14.3288" />
                                                                                                                                            <Key frame="20" value="-10" />
                                                                                                                                            <Key frame="31" value="21.448" />
                                                                                                                                            <Key frame="36" value="-10" />
                                                                                                                                            <Key frame="44" value="-67.4984" />
                                                                                                                                            <Key frame="50" value="-90" />
                                                                                                                                            <Key frame="62" value="-90.5261" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="5.2711" />
                                                                                                                                            <Key frame="20" value="96" />
                                                                                                                                            <Key frame="31" value="115.751" />
                                                                                                                                            <Key frame="36" value="96" />
                                                                                                                                            <Key frame="44" value="61.6976" />
                                                                                                                                            <Key frame="50" value="80.3062" />
                                                                                                                                            <Key frame="62" value="79.9791" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="47.2833" />
                                                                                                                                            <Key frame="20" value="14" />
                                                                                                                                            <Key frame="31" value="-26.0184" />
                                                                                                                                            <Key frame="36" value="14" />
                                                                                                                                            <Key frame="44" value="38.8457" />
                                                                                                                                            <Key frame="50" value="44.4668" />
                                                                                                                                            <Key frame="62" value="47.8986" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="1.93121" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="31" value="1.93121" />
                                                                                                                                            <Key frame="36" value="0" />
                                                                                                                                            <Key frame="44" value="-9.75839" />
                                                                                                                                            <Key frame="50" value="-5.20441" />
                                                                                                                                            <Key frame="62" value="0.524946" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                    </ActuatorList>
                                                                                                                                </Timeline>
                                                                                                                            </Box>
                                                                                                                            <Box name="SideToBelly" id="6" tooltip="Lie down on the back or the belly from an other lie down position (on the side)." x="513" y="538">
                                                                                                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                                                <Timeline enable="1" fps="10" start_frame="0" end_frame="-1" size="300">
                                                                                                                                    <ActuatorList model="Nao">
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="41.3067" />
                                                                                                                                            <Key frame="10" value="41.3067" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="8.52309" />
                                                                                                                                            <Key frame="10" value="8.52309" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="113.383" />
                                                                                                                                            <Key frame="10" value="113.383" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="44.6514" />
                                                                                                                                            <Key frame="10" value="44.6514" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-52.9084" />
                                                                                                                                            <Key frame="10" value="-52.9084" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-19.5144" />
                                                                                                                                            <Key frame="10" value="-19.5144" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-37" />
                                                                                                                                            <Key frame="10" value="-37" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="0.146571" />
                                                                                                                                            <Key frame="10" value="0.146571" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="108.72" />
                                                                                                                                            <Key frame="10" value="108.72" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-45.965" />
                                                                                                                                            <Key frame="10" value="-45.965" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="56.8684" />
                                                                                                                                            <Key frame="10" value="56.8684" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="26.8046" />
                                                                                                                                            <Key frame="10" value="26.8046" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="38.8505" />
                                                                                                                                            <Key frame="10" value="38.8505" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="0.200389" />
                                                                                                                                            <Key frame="10" value="0.200389" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-65.5648" />
                                                                                                                                            <Key frame="10" value="-65.5648" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="1.75543" />
                                                                                                                                            <Key frame="10" value="1.75543" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="23.8163" />
                                                                                                                                            <Key frame="10" value="23.8163" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-5.2711" />
                                                                                                                                            <Key frame="10" value="-5.2711" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="29.9735" />
                                                                                                                                            <Key frame="10" value="29.9735" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="3.86483" />
                                                                                                                                            <Key frame="10" value="3.86483" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-14.4166" />
                                                                                                                                            <Key frame="10" value="-14.4166" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="2.02391" />
                                                                                                                                            <Key frame="10" value="2.02391" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-5.27591" />
                                                                                                                                            <Key frame="10" value="-5.27591" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="20.3885" />
                                                                                                                                            <Key frame="10" value="20.3885" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-19.6902" />
                                                                                                                                            <Key frame="10" value="-19.6902" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                    </ActuatorList>
                                                                                                                                </Timeline>
                                                                                                                            </Box>
                                                                                                                            <Box name="Switch Case" id="9" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="261" y="101">
                                                                                                                                <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Back")):
			self.output_1(p)
		elif(p == self.typeConversion("Stand")):
			self.output_2(p)
		elif(p == self.typeConversion("Crouch")):
			self.output_3(p)
		elif(p == self.typeConversion("Knee")):
			self.output_4(p)
		elif(p == self.typeConversion("Frog")):
			self.output_5(p)
		elif(p == self.typeConversion("Belly")):
			self.output_6(p)
		elif(p == self.typeConversion("Left")):
			self.output_7(p)
		elif(p == self.typeConversion("Right")):
			self.output_8(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
</content>
                                                                                                                                </script>
                                                                                                                                <pluginContent>
                                                                                                                                    <keywords>
                                                                                                                                        <keyword>&quot;Back&quot;</keyword>
                                                                                                                                        <keyword>&quot;Stand&quot;</keyword>
                                                                                                                                        <keyword>&quot;Crouch&quot;</keyword>
                                                                                                                                        <keyword>&quot;Knee&quot;</keyword>
                                                                                                                                        <keyword>&quot;Frog&quot;</keyword>
                                                                                                                                        <keyword>&quot;Belly&quot;</keyword>
                                                                                                                                        <keyword>&quot;Left&quot;</keyword>
                                                                                                                                        <keyword>&quot;Right&quot;</keyword>
                                                                                                                                        <keyword></keyword>
                                                                                                                                    </keywords>
                                                                                                                                </pluginContent>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                                                                                                                <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                                                                                                                <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                                                                                                                <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                                                                                                                <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                                                                                                                <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                                                                                                                                <Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="8" />
                                                                                                                                <Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="9" />
                                                                                                                                <Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="10" />
                                                                                                                                <Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="11" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Switch Case" id="1" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="795" y="538">
                                                                                                                                <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Belly")):
			self.output_1(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
</content>
                                                                                                                                </script>
                                                                                                                                <pluginContent>
                                                                                                                                    <keywords>
                                                                                                                                        <keyword>&quot;Belly&quot;</keyword>
                                                                                                                                        <keyword></keyword>
                                                                                                                                    </keywords>
                                                                                                                                </pluginContent>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                                                                                                                <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                                                                                                                <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Switch Case" id="4" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="977" y="378">
                                                                                                                                <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Crouch")):
			self.output_1(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
</content>
                                                                                                                                </script>
                                                                                                                                <pluginContent>
                                                                                                                                    <keywords>
                                                                                                                                        <keyword>&quot;Crouch&quot;</keyword>
                                                                                                                                        <keyword></keyword>
                                                                                                                                    </keywords>
                                                                                                                                </pluginContent>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                                                                                                                <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                                                                                                                <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Get Robot Pose" id="5" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="656" y="542">
                                                                                                                                <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPose")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                                                                                                                <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Get Robot Pose" id="2" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="845" y="378">
                                                                                                                                <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPose")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                                                                                                                <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Get Robot Pose" id="3" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="104" y="49">
                                                                                                                                <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPose")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                                                                                                                <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Relax Motors" id="7" tooltip="Relax motors for a while for a better electric current consumption.&#x0A;&#x0A;!!Warning!! This box must be applied only after a Sit Down. In other positions NAO&#x0A;could fall." x="1087" y="131">
                                                                                                                                <bitmap>media/images/box/movement/stiffness.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        # WARNING: This should only be called when sitting and its
        # behavior may change in future version. The aim of the method
        # is to reduce battery usage when motors are stiff while sitting.
        try:
            ALMotion._relaxMotorsWhenSitting()
        except:
            pass
        self.onStopped()]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                                                                            </Box>
                                                                                                                            <Link inputowner="11" indexofinput="2" outputowner="9" indexofoutput="6" />
                                                                                                                            <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="8" />
                                                                                                                            <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="9" />
                                                                                                                            <Link inputowner="6" indexofinput="2" outputowner="9" indexofoutput="11" />
                                                                                                                            <Link inputowner="14" indexofinput="2" outputowner="9" indexofoutput="4" />
                                                                                                                            <Link inputowner="11" indexofinput="2" outputowner="9" indexofoutput="5" />
                                                                                                                            <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="7" />
                                                                                                                            <Link inputowner="6" indexofinput="2" outputowner="9" indexofoutput="10" />
                                                                                                                            <Link inputowner="0" indexofinput="4" outputowner="9" indexofoutput="3" />
                                                                                                                            <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="3" />
                                                                                                                            <Link inputowner="12" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                                                            <Link inputowner="11" indexofinput="2" outputowner="4" indexofoutput="4" />
                                                                                                                            <Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="3" />
                                                                                                                            <Link inputowner="5" indexofinput="2" outputowner="6" indexofoutput="4" />
                                                                                                                            <Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                                                            <Link inputowner="2" indexofinput="2" outputowner="12" indexofoutput="4" />
                                                                                                                            <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                                                            <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                                            <Link inputowner="9" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                                                                            <Link inputowner="7" indexofinput="2" outputowner="14" indexofoutput="4" />
                                                                                                                            <Link inputowner="7" indexofinput="2" outputowner="11" indexofoutput="4" />
                                                                                                                            <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="3" />
                                                                                                                        </Diagram>
                                                                                                                    </BehaviorKeyframe>
                                                                                                                </BehaviorLayer>
                                                                                                            </Timeline>
                                                                                                        </Box>
                                                                                                        <Box name="Side" id="6" tooltip='Stimulates the rightOutput or the leftOutput output depending on the side&#x0A;parameter. If it is set to &quot;Random&quot; then the side is chosen randomly.' x="451" y="468">
                                                                                                            <bitmap>media/images/box/movement/move_arm.png</bitmap>
                                                                                                            <bitmap>media/images/box/movement/move_leftarm.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import random

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        side = self.getParameter("Side")
        if( side == "Random" ):
            side = random.choice( ["Left", "Right"] )
        if( side == "Left" ):
            self.leftOutput()
        else:
            self.rightOutput()]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip='When this input is stimulated the output corresponding to the side set in&#x0A;parameters is stimulated. If the side parameter is set to &quot;Random&quot; then the&#x0A;side is chosen randomly.' id="2" />
                                                                                                            <Output name="rightOutput" type="1" type_size="1" nature="2" inner="0" tooltip="The output corresponding to the right." id="3" />
                                                                                                            <Output name="leftOutput" type="1" type_size="1" nature="2" inner="0" tooltip="The output corresponding to the left." id="4" />
                                                                                                            <Parameter name="Side" inherits_from_parent="1" content_type="3" value="Random" default_value="Random" custom_choice="0" tooltip='Side chosen. If set to &quot;Random&quot; the side is chosen randomly.' id="5">
                                                                                                                <Choice value="Left" />
                                                                                                                <Choice value="Random" />
                                                                                                                <Choice value="Right" />
                                                                                                            </Parameter>
                                                                                                        </Box>
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="9" indexofoutput="3" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="5" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="6" />
                                                                                                        <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="7" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                                        <Link inputowner="9" indexofinput="2" outputowner="7" indexofoutput="3" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="4" indexofoutput="3" />
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="13" indexofoutput="4" />
                                                                                                        <Link inputowner="13" indexofinput="2" outputowner="6" indexofoutput="3" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                                                        <Link inputowner="3" indexofinput="2" outputowner="6" indexofoutput="4" />
                                                                                                        <Link inputowner="6" indexofinput="2" outputowner="9" indexofoutput="4" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                        </Timeline>
                                                                                        <Resource name="All motors" type="Lock" timeout="5" />
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="3" outputowner="1" indexofoutput="5" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="10" indexofoutput="3" />
                                                                                    <Link inputowner="7" indexofinput="3" outputowner="4" indexofoutput="3" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="5" />
                                                                                    <Link inputowner="7" indexofinput="2" outputowner="5" indexofoutput="4" />
                                                                                    <Link inputowner="14" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="HeadCalmDown" id="15" tooltip="Enter tooltip here" x="86" y="12">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Input name="FrontTactilTouched" type="0" type_size="1" nature="4" stm_value_name="FrontTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                                                                    <Input name="RearTactilTouched" type="0" type_size="1" nature="4" stm_value_name="RearTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" />
                                                                    <Input name="MiddleTactilTouched" type="0" type_size="1" nature="4" stm_value_name="MiddleTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="6" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="7" />
                                                                    <Output name="deltaExcitation" type="2" type_size="1" nature="2" inner="0" tooltip="" id="8" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="PressDetection" id="1" tooltip="Enter tooltip here" x="172" y="12">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    NONE = 0
    PRESSED = 1

    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        self.states =  [(False, 0), (False, 0), (False, 0)]

        self.state = self.NONE
        self.states_len = len(self.states)

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def onInput_front(self, p):
        self.states_compute(0, p)

    def onInput_rear(self, p):
        self.states_compute(1, p)

    def onInput_middle(self, p):
        self.states_compute(2, p)

    def states_compute(self, id, value):
        """
        Call events corresponding to input modifications
        """
        pressed = value == 1
        self.states[id] = (pressed, time.time())

        #How many states are True
        count = 0
        for s in self.states:
            if s[0]:
                count += 1

        # All states are True and current is None:
        if count == self.states_len and self.state == self.NONE:
            mean = reduce(lambda x, y: x + y[1], self.states, 0) / float(self.states_len)
            max_dev = reduce(lambda x, y : max(x, abs(y[1] - mean)), self.states, 0)

            #self.log(mean)
            #self.log(max_dev)

            if max_dev < 0.1:
                self.state = self.PRESSED
                self.pressed()
        elif count == 0 and self.state == self.PRESSED:
            self.state = self.NONE
            self.released()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Input name="front" type="2" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                                                        <Input name="rear" type="2" type_size="1" nature="1" inner="0" tooltip="" id="5" />
                                                                                        <Input name="middle" type="2" type_size="1" nature="1" inner="0" tooltip="" id="6" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="7" />
                                                                                        <Output name="pressed" type="1" type_size="1" nature="2" inner="0" tooltip="" id="8" />
                                                                                        <Output name="released" type="1" type_size="1" nature="2" inner="0" tooltip="" id="9" />
                                                                                    </Box>
                                                                                    <Box name="CalmDown" id="2" tooltip="Enter tooltip here" x="544" y="10">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Output name="output" type="2" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                                                        <Timeline enable="1" fps="10" start_frame="0" end_frame="-1" size="300">
                                                                                            <BehaviorLayer name="behavior_layer1">
                                                                                                <BehaviorKeyframe name="PreStart" index="1">
                                                                                                    <Diagram />
                                                                                                </BehaviorKeyframe>
                                                                                                <BehaviorKeyframe name="ShowAndCalm" index="21">
                                                                                                    <Diagram>
                                                                                                        <Box name="Excitation Ears Leds" id="2" tooltip="Set the intensity of all the LEDs of one of or both of NAO&apos;s ears." x="546" y="59">
                                                                                                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.memory = ALProxy("ALMemory")
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        pass

    def onInput_onStart(self, value):
        value *= 10
        for i in range(1, 11):
            if i < value:
                self.leds.post.on("LeftEarLed%d" % i)
                self.leds.post.on("RightEarLed%d"% i)
            elif (i + 1) < value:
                self.leds.post.fade("LeftEarLed%d" % i, float(value - i), 0)
                self.leds.post.fade("RightEarLed%d" % i, float(value - i), 0)
            else:
                self.leds.post.off("LeftEarLed%d" % i)
                self.leds.post.off("RightEarLed%d"% i)]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="2" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                                                            <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the ear where the LED light is set." id="4">
                                                                                                                <Choice value="Both" />
                                                                                                                <Choice value="Left" />
                                                                                                                <Choice value="Right" />
                                                                                                            </Parameter>
                                                                                                            <Parameter name="Intensity (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="LEDs intensity, from 0 (off) to 100 (max)." id="5" />
                                                                                                            <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="6" />
                                                                                                        </Box>
                                                                                                        <Box name="Timer" id="3" tooltip="Send a signal with a predefined period." x="260" y="27">
                                                                                                            <bitmap>media/images/box/wait.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def startTimer(self, period = 1):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer(period, self.startTimer, [period])
        self.tb.start()
        self.timerOutput()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Period (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning ):
            self.onStopped()]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the timer using the configured period value." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the timer." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="4" />
                                                                                                            <Output name="timerOutput" type="1" type_size="1" nature="2" inner="0" tooltip="Send a bang periodically." id="5" />
                                                                                                            <Parameter name="Period (s)" inherits_from_parent="0" content_type="2" value="0.02" default_value="1" min="0" max="5000" tooltip="Defines the period of the timer box (in seconds).&#x0A;&#x0A;For example, if this parameter is equal to 1s, the timerOutput will be stimulated&#x0A;every second until the onStop input is stimulated." id="6" />
                                                                                                        </Box>
                                                                                                        <Box name="ReduceExcitation" id="4" tooltip="Enter tooltip here" x="400" y="27">
                                                                                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.memory = ALProxy("ALMemory")
        self.delta = .01
        self.excitation = self.memory.getData("Life/Mood/Excitation")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):

        self.excitation = min(1.0, max(0.0, self.excitation - self.delta))
        self.onStopped(self.excitation)]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="4" indexofoutput="3" />
                                                                                                        <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="5" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="4" indexofoutput="3" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                        </Timeline>
                                                                                        <Resource name="Head" type="Lock" timeout="5" />
                                                                                        <Resource name="Left ear leds" type="Lock" timeout="5" />
                                                                                        <Resource name="Right ear leds" type="Lock" timeout="5" />
                                                                                    </Box>
                                                                                    <Box name="updateMemory" id="3" tooltip="Enter tooltip here" x="732" y="144">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.excitation = ALProxy("ALMemory").getData("Life/Mood/Excitation")
        self.init_excitation = self.excitation

    def onInput_input(self, p):
        self.excitation = p

    def onInput_finished(self):
        ALProxy("ALMemory").insertData("Life/Mood/Excitation", self.excitation)
        self.output(self.init_excitation - self.excitation)]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="input" type="2" type_size="1" nature="1" inner="0" tooltip="" id="2" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                                                        <Input name="finished" type="1" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                                                        <Output name="output" type="2" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                                                    </Box>
                                                                                    <Box name="Excitation Ears Leds" id="4" tooltip="Set the intensity of all the LEDs of one of or both of NAO&apos;s ears." x="506" y="300">
                                                                                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.memory = ALProxy("ALMemory")
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        pass

    def onInput_onStart(self):
        value = self.memory.getData("Life/Mood/Excitation") * 10

        for i in range(1, 11):
            if i < value:
                self.leds.post.on("LeftEarLed%d" % i)
                self.leds.post.on("RightEarLed%d"% i)
            elif (i + 1) < value:
                self.leds.post.fade("LeftEarLed%d" % i, int(value - i), 0)
                self.leds.post.fade("RightEarLed%d" % i, int(value - i), 0)
            else:
                self.leds.post.off("LeftEarLed%d" % i)
                self.leds.post.off("RightEarLed%d"% i)]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                                        <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the ear where the LED light is set." id="4">
                                                                                            <Choice value="Both" />
                                                                                            <Choice value="Left" />
                                                                                            <Choice value="Right" />
                                                                                        </Parameter>
                                                                                        <Parameter name="Intensity (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="LEDs intensity, from 0 (off) to 100 (max)." id="5" />
                                                                                        <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="6" />
                                                                                    </Box>
                                                                                    <Box name="Timer" id="5" tooltip="Send a signal with a predefined period." x="375" y="297">
                                                                                        <bitmap>media/images/box/wait.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def startTimer(self, period = 1):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer(period, self.startTimer, [period])
        self.tb.start()
        self.timerOutput()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Period (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning ):
            self.onStopped()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the timer using the configured period value." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the timer." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="4" />
                                                                                        <Output name="timerOutput" type="1" type_size="1" nature="2" inner="0" tooltip="Send a bang periodically." id="5" />
                                                                                        <Parameter name="Period (s)" inherits_from_parent="0" content_type="2" value="2" default_value="1" min="0" max="5000" tooltip="Defines the period of the timer box (in seconds).&#x0A;&#x0A;For example, if this parameter is equal to 1s, the timerOutput will be stimulated&#x0A;every second until the onStop input is stimulated." id="6" />
                                                                                    </Box>
                                                                                    <Box name="Comment" id="9" tooltip="To comment your behavior. Enter the text here and move the box where you like&#x0A;to add the comment.&#x0A;&#x0A;Note: This box is not functional and has no effect on the behavior." plugin="textedit_plugin" x="82" y="393">
                                                                                        <bitmap>media/images/box/box-script.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self):
		self.onStopped("HeadCalmDown is completel broken! (its got some redundant nested boxes too) it fails to set excitement level")]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <text>HeadCalmDown is completel broken! (its got some redundant nested boxes too) it fails to set excitement level</text>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="4" outputowner="0" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="5" outputowner="0" indexofoutput="5" />
                                                                                    <Link inputowner="1" indexofinput="6" outputowner="0" indexofoutput="6" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="8" />
                                                                                    <Link inputowner="2" indexofinput="3" outputowner="1" indexofoutput="9" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" />
                                                                                    <Link inputowner="3" indexofinput="4" outputowner="1" indexofoutput="9" />
                                                                                    <Link inputowner="0" indexofinput="8" outputowner="3" indexofoutput="5" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="5" indexofoutput="5" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="5" indexofinput="3" outputowner="1" indexofoutput="8" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="9" />
                                                                                    <Link inputowner="3" indexofinput="3" outputowner="1" indexofoutput="8" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="IdleTime" id="6" tooltip="Enter tooltip here" x="1225" y="316">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.memory = ALProxy("ALMemory")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        #self.log("Idle:" + str(p))

        cur = self.memory.getData("Life/idle")
        next = int(time.time() + p)
        self.memory.insertData("Life/idle", max(cur, next))
        self.stopActivities()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="2" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="stopActivities" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                </Box>
                                                                <Box name="TactileCodes" id="18" tooltip="Detection de sequence tactile sur la tÃªte de Nao." x="84" y="232">
                                                                    <bitmap>media/images/box/icons_appu/fingerprint.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class SequenceHandler():
    def __init__(self, aSeq):
        self.aTactilSequence = aSeq
        self.reset()

    def reset(self):
        self.nTapTime = None
        self.nTapIndex = 2

    def update(self, aState, nTime):
        # In any case, if too much time elasped, sequence is invalidated
        if self.nTapTime != None and (nTime - self.nTapTime) > self.aTactilSequence[self.nTapIndex-1]:
            self.reset()
        # If current sensors state match current expected shape
        if aState == self.aTactilSequence[self.nTapIndex]:
            self.nTapTime = nTime
            self.nTapIndex += 2
        # If current sensor state does not match sequence at current index BUT match sequence at first index
        elif aState == self.aTactilSequence[1]:
            self.nTapTime = nTime
            self.nTapIndex = 4
        # If we've reach the end of the sequence, then output !!
        if self.nTapIndex > len(self.aTactilSequence):
            return self.aTactilSequence[0]
        else:
            return None

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.bIsRunning = False
        # Build a list of devices with full name
        self.aDeviceNames = ["%sTactilTouched" % name for name in ["Front", "Middle", "Rear"]]

        # Parameters
        parameters = [   ["CaressFtoR", "Caress front to rear", [1, 0, 0], 0.5, [1, 1, 0], 0.5, [0, 1, 0], 0.5, [0, 1, 1], 0.5, [0, 0, 1]],
                                ["CaressRtoF", "Caress rear to front", [0, 0, 1], 0.5, [0, 1, 1], 0.5, [0, 1, 0], 0.5, [1, 1, 0], 0.5, [1, 0, 0]],
                                ["SingleTap", "Single tap", [1, 1, 1], 1.5, [0, 0, 0]],
                                ["EnumerateFtoR", "Enumerate front to rear", [1, 0, 0], 1.0, [0, 1, 0], 1.0, [0, 0, 1]],
                                ["EnumerateRtoF", "Enumerate rear to front", [0, 0, 1], 1.0, [0, 1, 0], 1.0, [1, 0, 0]],
                                ["ZoomIn", "Zoom in", [1, 0, 1], 1.0, [0, 1, 0]],
                                ["ZoomOut", "Zoom out", [0, 1, 0], 1.0, [1, 0, 1]],
                                ["DoubleFront", "Double front", [1, 0, 0], 1.0, [0, 0, 0], 1.0, [1, 0, 0]],
                                ["DoubleMiddle", "Double middle", [0, 1, 0], 1.0, [0, 0, 0], 1.0, [0, 1, 0]],
                                ["DoubleRear", "Double rear", [0, 0, 1], 1.0, [0, 0, 0], 1.0, [0, 0, 1]],
                                ["DoubleTap", "Double tap", [1, 1, 1], 1.0, [0, 0, 0], 1.0, [1, 1, 1]],
                                ["SecretCode", "Secret code", [1, 0, 1], 1.0, [0, 0, 0], 1.0, [1, 0, 1]],
                                ["CalmDown", "Calm down", [1, 1, 1], 8.0, [0, 0, 0]]    ]
        # Create a sequence handler object for each enable sequence
        self.aSequenceHandler = []
        for seq in parameters:
            if self.getParameter(seq[1]):
                self.aSequenceHandler.append(SequenceHandler(seq))

    def onLoad(self):
        self.bIsRunning = False
        self.onInput_reset()

    def onUnload(self):
        self.onInput_onStop()

    def onSensorChange(self, pDataName, pValue, pMessage):
        "This is called whenever one of the three tactil sensors state change"
        aState = ALMemory.getListData( self.aDeviceNames )
        # This prevent to process several times the same sensor state
        if aState != self.aState:
            self.aState = aState
            nTime = time.time()
            #~ self.log(str(aState))
            for seq in self.aSequenceHandler:
                sOutput = seq.update(aState, nTime)
                if  sOutput != None:
                    self.Match(sOutput)
                    # Force all other sequence to be reset to prevent multiple match.
                    # But this will prevent sequences like "DoubleTap" to work since each "SingleTap" will reset "DoubleTap"
                    self.onInput_reset()
                    # Get the output function from the sequence name
                    try:
                        func = getattr(self, sOutput)
                        func()
                    # If no output function found, just forget it
                    except:
                        pass

    def onInput_onStart(self):
        if not self.bIsRunning:
            self.bIsRunning = True
            # Save initial sensor state
            self.aState = None#ALMemory.getListData( self.aDeviceNames )
            # Subscribe to each sensor device
            for device in self.aDeviceNames:
                ALMemory.subscribeToEvent( device, self.getName(), "onSensorChange" )

    def onInput_onStop(self):
        if self.bIsRunning:
            for device in self.aDeviceNames:
                ALMemory.unsubscribeToEvent( device, self.getName() )
            self.onInput_reset()
            self.bIsRunning = False

    def onInput_reset(self):
        for seq in self.aSequenceHandler:
            seq.reset()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="Match" type="3" type_size="1" nature="2" inner="0" tooltip="double tap" id="4" />
                                                                    <Output name="SingleTap" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                                    <Output name="DoubleFront" type="1" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                                                                    <Output name="DoubleMiddle" type="1" type_size="1" nature="2" inner="0" tooltip="" id="7" />
                                                                    <Output name="DoubleRear" type="1" type_size="1" nature="2" inner="0" tooltip="" id="8" />
                                                                    <Output name="EnumerateRtoF" type="1" type_size="1" nature="2" inner="0" tooltip="" id="9" />
                                                                    <Output name="EnumerateFtoR" type="1" type_size="1" nature="2" inner="0" tooltip="" id="10" />
                                                                    <Output name="CaressRtoF" type="1" type_size="1" nature="2" inner="0" tooltip="" id="11" />
                                                                    <Output name="CaressFtoR" type="1" type_size="1" nature="2" inner="0" tooltip="" id="12" />
                                                                    <Output name="DoubleTap" type="1" type_size="1" nature="2" inner="0" tooltip="" id="13" />
                                                                    <Output name="CalmDown" type="1" type_size="1" nature="2" inner="0" tooltip="" id="14" />
                                                                    <Output name="ZoomOut" type="1" type_size="1" nature="2" inner="0" tooltip="" id="15" />
                                                                    <Output name="ZoomIn" type="1" type_size="1" nature="2" inner="0" tooltip="" id="16" />
                                                                    <Output name="SecretCode" type="1" type_size="1" nature="2" inner="0" tooltip="" id="17" />
                                                                    <Parameter name="Caress front to rear" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Caress front to rear" id="18" />
                                                                    <Parameter name="Caress rear to front" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="19" />
                                                                    <Parameter name="Single tap" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="20" />
                                                                    <Parameter name="Double front" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="21" />
                                                                    <Parameter name="Double middle" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="22" />
                                                                    <Parameter name="Double rear" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="23" />
                                                                    <Parameter name="Calm down" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="24" />
                                                                    <Parameter name="Enumerate front to rear" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="25" />
                                                                    <Parameter name="Enumerate rear to front" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="26" />
                                                                    <Parameter name="Zoom in" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="27" />
                                                                    <Parameter name="Zoom out" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="28" />
                                                                    <Parameter name="Double tap" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="" id="29" />
                                                                    <Parameter name="Secret code" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="30" />
                                                                </Box>
                                                                <Box name="HeadTap" id="2" tooltip="Enter tooltip here" x="83" y="121">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Input name="FrontTactilTouched" type="0" type_size="1" nature="4" stm_value_name="FrontTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                                                                    <Input name="RearTactilTouched" type="0" type_size="1" nature="4" stm_value_name="RearTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" />
                                                                    <Input name="MiddleTactilTouched" type="0" type_size="1" nature="4" stm_value_name="MiddleTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="6" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="7" />
                                                                    <Output name="stopApps" type="2" type_size="1" nature="2" inner="0" tooltip="" id="8" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="DelayCompute" id="2" tooltip="Enter tooltip here" x="443" y="143">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.first_tick = -float("inf")

        self.max_delta = float(self.getParameter("delay_max") -
                                        self.getParameter("delay_min"))

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_start(self):
        #~ self.accepted() #~ activate output of the box
        self.first_tick = time.time()

    def onInput_end(self):
        delta = time.time() - self.first_tick

        if (delta > self.getParameter("delay_min") and
            delta <= self.getParameter("delay_max")):
            self.accepted(delta / self.max_delta)]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="start" type="1" type_size="1" nature="1" inner="0" tooltip="" id="2" />
                                                                                        <Input name="end" type="1" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                                                        <Output name="accepted" type="2" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                                        <Parameter name="delay_min" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="20" tooltip="The delay (in second) minimal to accept the event" id="5" />
                                                                                        <Parameter name="delay_max" inherits_from_parent="0" content_type="2" value="0.5" default_value="0" min="0" max="20" tooltip="The delay (in second) maximal to accept the event" id="6" />
                                                                                    </Box>
                                                                                    <Box name="PressDetection" id="1" tooltip="Enter tooltip here" x="232" y="141">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    NONE = 0
    PRESSED = 1

    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        self.states =  [(False, 0), (False, 0), (False, 0)]

        self.state = self.NONE
        self.states_len = len(self.states)

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass

    def onInput_front(self, p):
        self.states_compute(0, p)

    def onInput_rear(self, p):
        self.states_compute(1, p)

    def onInput_middle(self, p):
        self.states_compute(2, p)

    def states_compute(self, id, value):
        """
        Call events corresponding to input modifications
        """
        pressed = value == 1
        self.states[id] = (pressed, time.time())

        #How many states are True
        count = 0
        for s in self.states:
            if s[0]:
                count += 1

        # All states are True and current is None:
        if count == self.states_len and self.state == self.NONE:
            mean = reduce(lambda x, y: x + y[1], self.states, 0) / float(self.states_len)
            max_dev = reduce(lambda x, y : max(x, abs(y[1] - mean)), self.states, 0)

            #self.log(mean)
            #self.log(max_dev)

            if max_dev < 0.1:
                self.state = self.PRESSED
                self.pressed()
        elif count == 0 and self.state == self.PRESSED:
            self.state = self.NONE
            self.released()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Input name="front" type="2" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                                                        <Input name="rear" type="2" type_size="1" nature="1" inner="0" tooltip="" id="5" />
                                                                                        <Input name="middle" type="2" type_size="1" nature="1" inner="0" tooltip="" id="6" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="7" />
                                                                                        <Output name="pressed" type="1" type_size="1" nature="2" inner="0" tooltip="" id="8" />
                                                                                        <Output name="released" type="1" type_size="1" nature="2" inner="0" tooltip="" id="9" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="8" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="4" outputowner="0" indexofoutput="4" />
                                                                                    <Link inputowner="1" indexofinput="5" outputowner="0" indexofoutput="5" />
                                                                                    <Link inputowner="1" indexofinput="6" outputowner="0" indexofoutput="6" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="8" />
                                                                                    <Link inputowner="2" indexofinput="3" outputowner="1" indexofoutput="9" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="ClickOff" id="1" tooltip="Play the sound, but NOW!&#x0A;v0.6&#x0A;&#x0A;- use preloading of sound, but sadly, it&apos;s notloaded at init but at onload (so at the loading of a timeline, argghhhh)" x="439" y="647">
                                                                    <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[# PlaySoundWithPreloading
# v0.6
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []
        self.loadedSoundID = self.player.loadFile( ALFrameManager.getBehaviorPath(self.behaviorId) + self.getParameter("Sound File") );


    def onUnload(self):
        try:
            self.player.unloadFile(self.loadedSoundID)
        except:
            #self.log("Could not unload the sound")
            pass
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            id = self.player.post.play(self.loadedSoundID,self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()
# PlaySoundWithPreloading - end
pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="5" />
                                                                    <Parameter name="Panorama" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="6" />
                                                                    <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="7" />
                                                                    <Parameter name="Sound File" inherits_from_parent="0" content_type="4" value="/sounds/clickon.wav" default_value="" tooltip="select your sound file from project ressource" id="8" />
                                                                    <Resource name="Audio player" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Box name="ClickOn" id="27" tooltip="Play the sound, but NOW!&#x0A;v0.6&#x0A;&#x0A;- use preloading of sound, but sadly, it&apos;s notloaded at init but at onload (so at the loading of a timeline, argghhhh)" x="440" y="541">
                                                                    <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[# PlaySoundWithPreloading
# v0.6
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []
        self.loadedSoundID = self.player.loadFile( ALFrameManager.getBehaviorPath(self.behaviorId) + self.getParameter("Sound File") );


    def onUnload(self):
        try:
            self.player.unloadFile(self.loadedSoundID)
        except:
            #self.log("Could not unload the sound")
            pass
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            id = self.player.post.play(self.loadedSoundID,self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()
# PlaySoundWithPreloading - end
pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="5" />
                                                                    <Parameter name="Panorama" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="6" />
                                                                    <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="7" />
                                                                    <Parameter name="Sound File" inherits_from_parent="0" content_type="4" value="/sounds/clickoff.wav" default_value="" tooltip="select your sound file from project ressource" id="8" />
                                                                    <Resource name="Audio player" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Box name="VolumeDown" id="22" tooltip="Lower volume. See the changes on the ear leds.&#x0A;Be careful, code is not exactly the same as VolumeUp." x="288" y="646">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.audiodevice = ALProxy("ALAudioDevice")

    def onLoad(self):
        self.telepathe = ALProxy("ALTelepathe")
        self.mynao = ALProxy("ALMyNao")

    def onUnload(self):
        pass

     # return the led of the ear associated to this angle
    def processAngle(self, angle):
        return [(288 + angle) % 360, (252 + angle) % 360]

    # set instantly the led associated with the angle
    def setLeds(self, angle):
        aProcess = self.processAngle(angle)
        sName = "Ears/Led/Right"+"/"+ str(aProcess[1]) +"Deg/Actuator/Value"
        ALLeds.on(sName)
        sName = "Ears/Led/Left"+"/"+ str(aProcess[0]) +"Deg/Actuator/Value"
        ALLeds.on(sName)

        aProcess = self.processAngle(angle + 36)
        sName = "Ears/Led/Right"+"/"+ str(aProcess[1]) +"Deg/Actuator/Value"
        ALLeds.on(sName)
        sName = "Ears/Led/Left"+"/"+ str(aProcess[0]) +"Deg/Actuator/Value"
        ALLeds.on(sName)

    # set smoothly the led associated with the angle
    def fadeLeds(self, angle):
        nFadeTime = 1.0
        nFadeIntensity = 0.0
        aProcess = self.processAngle(angle)
        sName = "Ears/Led/Right"+"/"+ str(aProcess[1]) +"Deg/Actuator/Value"
        ALLeds.post.fade(sName, nFadeIntensity, nFadeTime)
        sName = "Ears/Led/Left"+"/"+ str(aProcess[0]) +"Deg/Actuator/Value"
        ALLeds.post.fade(sName, nFadeIntensity, nFadeTime)

        aProcess = self.processAngle(angle + 36)
        sName = "Ears/Led/Right"+"/"+ str(aProcess[1]) +"Deg/Actuator/Value"
        ALLeds.post.fade(sName, nFadeIntensity, nFadeTime)
        sName = "Ears/Led/Left"+"/"+ str(aProcess[0]) +"Deg/Actuator/Value"
        ALLeds.post.fade(sName, nFadeIntensity, nFadeTime)


    # lower the volume
    def changeVolume(self, step):
        # stop ear leds for display to follow
        ALLeds.off("EarLeds")
        audiodevice = ALProxy("ALAudioDevice")
        nInitVolume = audiodevice.getOutputVolume()
        #self.log("Init Volume = %s" % nInitVolume)

        # fix #13171: unmute if muted
        if audiodevice.isAudioOutMuted():
            audiodevice.muteAudioOut(False)

        # init settings
        nAngleScaled = 0
        nStartScaled = 50
        nStepScaled = 10

        #  display the current volume
        for i in range (nStartScaled, nInitVolume, nStepScaled):
            self.setLeds(nAngleScaled)
            nAngleScaled += 72

        #decrease volume and clamp
        nFinalVolume = min(100, max(0, nInitVolume - step))

        audiodevice.setOutputVolume(nFinalVolume)
        self.playSound()

        # display new volume
        for j in range (100, nFinalVolume, - nStepScaled):
            self.fadeLeds(nAngleScaled)
            nAngleScaled -= 72

        # light all the ears again
        time.sleep(1.2)
        ALLeds.on("EarLeds")
        #self.onStopped()

    def onInput_onStart(self):
        self.changeVolume(self.getParameter("step"))]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Diminue le volume" id="2" />
                                                                    <Output name="playSound" type="1" type_size="1" nature="2" inner="0" tooltip="" id="3" />
                                                                    <Parameter name="step" inherits_from_parent="0" content_type="1" value="25" default_value="10" min="0" max="100" tooltip="percentage of output volume" id="4" />
                                                                </Box>
                                                                <Box name="VolumeUp" id="21" tooltip="Increase volume. See the changes on the ear leds.&#x0A;Be careful, code is not exactly the same as VolumeDown" x="289" y="540">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.audiodevice = ALProxy("ALAudioDevice")

    def onLoad(self):
        self.telepathe = ALProxy("ALTelepathe")
        self.mynao = ALProxy("ALMyNao")

    def onUnload(self):
        pass

    # return the led of the ear associated to this angle
    def processAngle(self, angle):
        return [(288 + angle) % 360, (252 + angle) % 360]

    # set instantly the led associated with the angle
    def setLeds(self, angle):
        aProcess = self.processAngle(angle)
        sName = "Ears/Led/Right"+"/"+ str(aProcess[1]) +"Deg/Actuator/Value"
        ALLeds.on(sName)
        sName = "Ears/Led/Left"+"/"+ str(aProcess[0]) +"Deg/Actuator/Value"
        ALLeds.on(sName)

        aProcess = self.processAngle(angle + 36)
        sName = "Ears/Led/Right"+"/"+ str(aProcess[1]) +"Deg/Actuator/Value"
        ALLeds.on(sName)
        sName = "Ears/Led/Left"+"/"+ str(aProcess[0]) +"Deg/Actuator/Value"
        ALLeds.on(sName)

    # set smoothly the led associated with the angle
    def fadeLeds(self, angle):
        nFadeTime = 1.0
        nFadeIntensity = 1.0
        aProcess = self.processAngle(angle)
        sName = "Ears/Led/Right"+"/"+ str(aProcess[1]) +"Deg/Actuator/Value"
        ALLeds.post.fade(sName, nFadeIntensity, nFadeTime)
        sName = "Ears/Led/Left"+"/"+ str(aProcess[0]) +"Deg/Actuator/Value"
        ALLeds.post.fade(sName, nFadeIntensity, nFadeTime)

        aProcess = self.processAngle(angle + 36)
        sName = "Ears/Led/Right"+"/"+ str(aProcess[1]) +"Deg/Actuator/Value"
        ALLeds.post.fade(sName, nFadeIntensity, nFadeTime)
        sName = "Ears/Led/Left"+"/"+ str(aProcess[0]) +"Deg/Actuator/Value"
        ALLeds.post.fade(sName, nFadeIntensity, nFadeTime)

    # increase the volume
    def changeVolume(self, step):
        # stop ear leds for display to follow
        ALLeds.off("EarLeds")

        audiodevice = ALProxy("ALAudioDevice")
        nInitVolume = audiodevice.getOutputVolume()

        # fix #13171: unmute if muted
        if audiodevice.isAudioOutMuted():
            audiodevice.muteAudioOut(False)

        # init settings
        nAngleScaled = 0
        i = 0
        nStartScaled = 50
        nStepScaled = 10

        #  display the current volume
        for i in range (nStartScaled, nInitVolume, nStepScaled):
            self.setLeds(nAngleScaled)
            nAngleScaled += 72

        # Increase and clamp volume
        nFinalVolume = min(100, max(nInitVolume + step, 0))

        audiodevice.setOutputVolume(nFinalVolume)
        self.playSound()

        # display new volume
        for j in range (max(i, nStartScaled), nFinalVolume, nStepScaled):
            self.fadeLeds(nAngleScaled)
            nAngleScaled += 72

        # light all the ears again
        time.sleep(1.2)
        ALLeds.on("EarLeds")
        #self.onStopped()

    def onInput_onStart(self):
        self.changeVolume(self.getParameter("step"))

    def onInput_onStop(self):
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Diminue le volume" id="2" />
                                                                    <Output name="playSound" type="1" type_size="1" nature="2" inner="0" tooltip="" id="3" />
                                                                    <Parameter name="step" inherits_from_parent="0" content_type="1" value="25" default_value="10" min="0" max="100" tooltip="percentage of output volume" id="4" />
                                                                </Box>
                                                                <Box name="inFrame" id="4" tooltip="Read a data from ALMemory" x="92" y="523">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self._name = "inFrame/%s" % self.getParameter("var name")

    def onUnload(self):
        try:
            ALProxy("ALMemory").insertData(self._name, False)
        except Exception as e:
            self.log(str(e))

    def onInput_onStart(self):
        try:
            ALProxy("ALMemory").insertData(self._name, True)
        except Exception as e:
            self.log(str(e))

        self.onStopped()

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="" id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="2" inner="0" tooltip="Value of the read data" id="4" />
                                                                    <Parameter name="var name" inherits_from_parent="0" content_type="3" value="SolitaryActivity" default_value="" custom_choice="0" tooltip="Name of the data to read from memory" id="5" />
                                                                </Box>
                                                                <Box name="Number Edit" id="5" tooltip="Send the number you entered when the input is stimulated." plugin="numberedit_plugin" x="1038" y="335">
                                                                    <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self):
		self.onStopped(5)]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <number>5</number>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the number on the output." id="2" />
                                                                    <Output name="onStopped" type="2" type_size="1" nature="2" inner="0" tooltip="The number you entered." id="3" />
                                                                </Box>
                                                                <Box name="Popup" id="7" tooltip="Play a sound file. Select the file in parameters. The format of the file can be&#x0A;wav, mp3, or ogg." x="380" y="269">
                                                                    <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="File name" inherits_from_parent="0" content_type="4" value="/sounds/popup.wav" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" />
                                                                    <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                                                                    <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                                                                    <Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                                                                    <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Play Sound File" id="2" tooltip="Play the sound." x="576" y="66">
                                                                                        <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                                                                        <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                                                                        <Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                                                                        <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                                                                    </Box>
                                                                                    <Box name="Get Attached File" id="1" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="350" y="67">
                                                                                        <bitmap>media/images/box/folder.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
    def onInput_onStart(self):
        self.onStopped(ALFrameManager.getBehaviorPath(self.behaviorId) + self.getParameter("File name"))]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                                                        <Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                    <Resource name="Audio player" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Box name="Say" id="10" tooltip="Say some text. Note that you must open the box to enter the text." x="879" y="495">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Say Text" id="2" tooltip="Say the text received on its input." x="422" y="65">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text" id="5" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 我脚部的马达很热，请让我休息一会儿。 ",
			"English" : " My legs are hot, please let me take a break! ",
			"French" : " J\'ai chaud au jambes, j\'ai besoin de me reposer! ",
			"German" : " Meine Beine sind heiß gelaufen. Ich muss eine Pause machen. ",
			"Italian" : " Ciao ",
			"Japanese" : " 足がむくんできたよ。少し休ませて欲しいな。 ",
			"Korean" : " ìëíì¸ì  ",
			"Portuguese" : " OlÃ¡ ",
			"Brazilian" : "  ",
			"Spanish" : " Hola ",
			"Arabic" : "  ",
			"Polish" : "  ",
			"Czech" : "  ",
			"Dutch" : "  ",
			"Danish" : "  ",
			"Finnish" : " Jalkani tarvitsevat lepoa! ",
			"Swedish" : "  ",
			"Russian" : "  ",
			"Turkish" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <chinese>我脚部的马达很热，请让我休息一会儿。</chinese>
                                                                                            <english>My legs are hot, please let me take a break!</english>
                                                                                            <french>J&apos;ai chaud au jambes, j&apos;ai besoin de me reposer!</french>
                                                                                            <german>Meine Beine sind heiß gelaufen. Ich muss eine Pause machen.</german>
                                                                                            <italian>Ciao</italian>
                                                                                            <japanese>足がむくんできたよ。少し休ませて欲しいな。</japanese>
                                                                                            <korean>ìëíì¸ì </korean>
                                                                                            <portuguese>OlÃ¡</portuguese>
                                                                                            <brazilian></brazilian>
                                                                                            <spanish>Hola</spanish>
                                                                                            <arabic></arabic>
                                                                                            <polish></polish>
                                                                                            <czech></czech>
                                                                                            <dutch></dutch>
                                                                                            <danish></danish>
                                                                                            <finnish>Jalkani tarvitsevat lepoa!</finnish>
                                                                                            <swedish></swedish>
                                                                                            <russian></russian>
                                                                                            <turkish></turkish>
                                                                                            <language>2</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                    <Resource name="Speech" type="Lock" timeout="0" />
                                                                </Box>
                                                                <Box name="FilterTooHot" id="11" tooltip="Enter tooltip here" x="735" y="469">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #Robots legs too hot ?
        try:
            v = ALProxy("ALMemory").getData("/Life/hot/legs")
        except:
            v = False

        #Did we already try to used them
        try:
            t = int(ALProxy("ALMemory").getData("Life/hot/legs/attempt"))
        except:
            t = 0

        #Solve!
        if v and t < time.time() - 20:
            ALProxy("ALMemory").insertData("Life/hot/legs/attempt", int(time.time()))
            self.onKO()
        else:
            self.onOK()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="onOK" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                    <Output name="onKO" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                </Box>
                                                                <Box name="Wait" id="12" tooltip="Wait a moment before sending a signal on the output. The wait can be stopped any&#x0A;time. You may restart it any time, and it will start again." x="591" y="461">
                                                                    <bitmap>media/images/box/wait.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def triggerOutput( self, rPeriod = 1 ):
        self.onUnload() # to clean everything
        self.timerOutput()

    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] )
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Timeout (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning ):
            self.timerOutput()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                                                                    <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is ellapsed, or if the box is stopped." id="4" />
                                                                    <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1.5" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                                                                </Box>
                                                                <Box name="Wait" id="13" tooltip="Wait a moment before sending a signal on the output. The wait can be stopped any&#x0A;time. You may restart it any time, and it will start again." x="592" y="355">
                                                                    <bitmap>media/images/box/wait.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def triggerOutput( self, rPeriod = 1 ):
        self.onUnload() # to clean everything
        self.timerOutput()

    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] )
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Timeout (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning ):
            self.timerOutput()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                                                                    <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is ellapsed, or if the box is stopped." id="4" />
                                                                    <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1.5" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                                                                </Box>
                                                                <Box name="SitDown" id="3" tooltip="Last modification:&#x0A;02/10/2013&#x0A;&#x0A;Choose between original timeline movement or ALRobotPosture movement&#x0A;================&#x0A;16/12/2011&#x0A;&#x0A;Initial draft&#x0A;================&#x0A;Nao sits" x="879" y="298">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="" id="5" />
                                                                    <Timeline enable="1" fps="10" start_frame="0" end_frame="-1" size="300">
                                                                        <BehaviorLayer name="main">
                                                                            <BehaviorKeyframe name="Init" index="1">
                                                                                <Diagram>
                                                                                    <Box name="CheckRobotPosture" id="2" tooltip="Enter tooltip here" x="124" y="25">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onInput_onStart(self):
        try:
            TestProxy = ALProxy("ALRobotPosture")
            if(TestProxy.ping()):
                self.useRobotPosture() #~ activate output of the box
            else:
                raise
        except:
            self.useTimeline() #~ activate output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Output name="useRobotPosture" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                                        <Output name="useTimeline" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                                    </Box>
                                                                                    <Box name="Goto Timeline" id="3" tooltip="Jump to the frame name set in parameters." x="300" y="123">
                                                                                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onInput_onGo(self):
        try:
            self.getParentTimeline().goTo(self.getParameter("Frame name"))
        except: # if NAOqi < 1.14
            self.gotoAndStopParent(self.getParameter("Frame name"))]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoTimeline when a signal is received on this input." id="2" />
                                                                                        <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="Timeline" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                                                                    </Box>
                                                                                    <Box name="Goto RobotPosture" id="4" tooltip="Jump to the frame name set in parameters." x="294" y="16">
                                                                                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onInput_onGo(self):
        try:
            self.getParentTimeline().goTo(self.getParameter("Frame name"))
        except: # if NAOqi < 1.14
            self.gotoAndStopParent(self.getParameter("Frame name"))]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoTimeline when a signal is received on this input." id="2" />
                                                                                        <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="RobotPosture" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                                                                    </Box>
                                                                                    <Box name="Stop" id="5" tooltip="Stop the parent timeline at the current frame index.&#x0A;&#x0A;!!Warning!! This box does not stop the behavior! It is only the timeline which will&#x0A;stop playing, the keyframes and boxes will still be running." x="127" y="125">
                                                                                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onInput_onStop(self):
        self.stopTimelineParent()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                                                                                    </Box>
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                            <BehaviorKeyframe name="RobotPosture" index="14">
                                                                                <Diagram>
                                                                                    <Box name="Sit Down" id="1" tooltip="NAO tries to sit down from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="194" y="45">
                                                                                        <bitmap>media/images/box/movement/sit_ground.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when NAO succeed in sitting down." id="4" />
                                                                                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to sit down after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                                                                        <Timeline enable="0">
                                                                                            <BehaviorLayer name="SitDownBehavior">
                                                                                                <BehaviorKeyframe name="DetectRobotPose" index="1">
                                                                                                    <Diagram>
                                                                                                        <Box name="Goto Posture" id="7" tooltip="The robot goes from its current postition to the asked posture." x="371" y="101">
                                                                                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.postureProxy = ALProxy("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureProxy.stopMove()

    def onInput_onStart(self):
        result = self.postureProxy.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                                                                                            <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                                                                                            <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Sit" default_value="Sit" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                                                                                                <Choice value="Crouch" />
                                                                                                                <Choice value="LyingBack" />
                                                                                                                <Choice value="LyingBelly" />
                                                                                                                <Choice value="Sit" />
                                                                                                                <Choice value="SitRelax" />
                                                                                                                <Choice value="StandInit" />
                                                                                                                <Choice value="Stand" />
                                                                                                                <Choice value="StandZero" />
                                                                                                            </Parameter>
                                                                                                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                                                                                            <Resource name="All motors" type="Lock" timeout="0" />
                                                                                                            <Resource name="Stiffness" type="Lock" timeout="0" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="4" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="7" indexofoutput="5" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                        </Timeline>
                                                                                        <Resource name="All motors" type="Lock" timeout="0" />
                                                                                    </Box>
                                                                                    <Box name="GotoFailure" id="3" tooltip="Jump to the frame name set in parameters and stop the parent timeline.&#x0A;&#x0A;!!Warning!! This box does not stop the behavior! It is only the timeline which will&#x0A;stop playing, the keyframes and boxes will still be running." x="356" y="94">
                                                                                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onInput_onGo(self):
        try:
            self.getParentTimeline().goTo(self.getParameter("Frame name"))
        except: # if NAOqi < 1.14
            self.gotoAndStopParent(self.getParameter("Frame name"))]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                                        <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="Failure" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                            <BehaviorKeyframe name="Timeline" index="32">
                                                                                <Diagram>
                                                                                    <Box name="Sit Down" id="4" tooltip="NAO tries to sit down from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="96" y="57">
                                                                                        <bitmap>media/images/box/movement/sit_ground.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when NAO succeed in sitting down." id="4" />
                                                                                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to sit down after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                                                                        <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="1" max="10" tooltip="The maximum number that the robot tries to sit down and fails before the failure&#x0A;output is stimulated." id="6" />
                                                                                        <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Random" default_value="Random" custom_choice="0" tooltip='Side of the arm used to sit down. If it is set to &quot;Random&quot; the side is chosen randomly.' id="7">
                                                                                            <Choice value="Left" />
                                                                                            <Choice value="Random" />
                                                                                            <Choice value="Right" />
                                                                                        </Parameter>
                                                                                        <Timeline enable="0">
                                                                                            <BehaviorLayer name="SitDownBehavior">
                                                                                                <BehaviorKeyframe name="DetectRobotPose" index="1">
                                                                                                    <Diagram>
                                                                                                        <Box name="Check Count" id="9" tooltip="Check number of tries. If the current try number is higher than the maximum&#x0A;number of tries set in parent box parameters, then the failed output is&#x0A;stimulated, else the tryAgain output is stimulated." x="850" y="221">
                                                                                                            <bitmap>media/images/box/box-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.nTries = 0

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.nTries += 1
        if (self.nTries > self.getParameter("Maximum of tries")):
            self.failed()
        else:
            self.tryAgain()

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Output name="failed" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent if the current try number is higher than the maximum number of tries&#x0A;set in parent box parameters." id="3" />
                                                                                                            <Output name="tryAgain" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent if the current try number is smaller than or equal to the maximum&#x0A;number of tries set in parent box parameters." id="4" />
                                                                                                        </Box>
                                                                                                        <Box name="Right Sit Motion" id="13" tooltip="The robot makes the right motion to sit down depending on its current position." x="596" y="407">
                                                                                                            <bitmap>media/images/box/movement/sit_ground.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.count = 0
        pass

    def onInput_onStop(self):
        self.onUnload()
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent after a step to sit down is done." id="4" />
                                                                                                            <Timeline enable="0">
                                                                                                                <BehaviorLayer name="SitDownBehavior">
                                                                                                                    <BehaviorKeyframe name="DetectRobotPose" index="1">
                                                                                                                        <Diagram>
                                                                                                                            <Box name="CrouchToSitDown" id="11" tooltip="Sit down from crouch or stand position." x="941" y="228">
                                                                                                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                                                <Timeline enable="1" fps="10" start_frame="0" end_frame="-1" size="300">
                                                                                                                                    <ActuatorList model="Nao">
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-18.1081" />
                                                                                                                                            <Key frame="24" value="-25.2273" />
                                                                                                                                            <Key frame="34" value="-36.3017" />
                                                                                                                                            <Key frame="43" value="-35.9501" />
                                                                                                                                            <Key frame="52" value="-23.4695" />
                                                                                                                                            <Key frame="59" value="-10.5494" />
                                                                                                                                            <Key frame="66" value="-0.00240423" />
                                                                                                                                            <Key frame="72" value="-1.23289" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="21.2674" />
                                                                                                                                            <Key frame="24" value="21.5311" />
                                                                                                                                            <Key frame="34" value="21.0916" />
                                                                                                                                            <Key frame="43" value="20.4764" />
                                                                                                                                            <Key frame="52" value="21.0916" />
                                                                                                                                            <Key frame="59" value="21.0037" />
                                                                                                                                            <Key frame="66" value="21.7069" />
                                                                                                                                            <Key frame="72" value="-1.93602" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="59.8" />
                                                                                                                                            <Key frame="24" value="41.8" />
                                                                                                                                            <Key frame="29" value="41.8" />
                                                                                                                                            <Key frame="34" value="57.9182" />
                                                                                                                                            <Key frame="43" value="86.2194" />
                                                                                                                                            <Key frame="52" value="116.542" />
                                                                                                                                            <Key frame="59" value="88.1" />
                                                                                                                                            <Key frame="66" value="38.8" />
                                                                                                                                            <Key frame="72" value="52.2932" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="19.2459" />
                                                                                                                                            <Key frame="24" value="30.6718" />
                                                                                                                                            <Key frame="34" value="27.6" />
                                                                                                                                            <Key frame="43" value="48" />
                                                                                                                                            <Key frame="52" value="25.4" />
                                                                                                                                            <Key frame="59" value="89.2" />
                                                                                                                                            <Key frame="66" value="32.6054" />
                                                                                                                                            <Key frame="72" value="12.5661" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-32.2587" />
                                                                                                                                            <Key frame="24" value="-4.9" />
                                                                                                                                            <Key frame="34" value="6.06212" />
                                                                                                                                            <Key frame="43" value="-89" />
                                                                                                                                            <Key frame="52" value="-18.8991" />
                                                                                                                                            <Key frame="59" value="-69.2" />
                                                                                                                                            <Key frame="66" value="-43.5967" />
                                                                                                                                            <Key frame="72" value="-25.0515" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-54.9299" />
                                                                                                                                            <Key frame="24" value="-68.9" />
                                                                                                                                            <Key frame="34" value="-40" />
                                                                                                                                            <Key frame="43" value="-51.7" />
                                                                                                                                            <Key frame="47" value="-27.9" />
                                                                                                                                            <Key frame="52" value="-39.3" />
                                                                                                                                            <Key frame="59" value="-55" />
                                                                                                                                            <Key frame="66" value="-75.7603" />
                                                                                                                                            <Key frame="72" value="-73.3872" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="5.00742" />
                                                                                                                                            <Key frame="24" value="-41.0478" />
                                                                                                                                            <Key frame="34" value="-41.0478" />
                                                                                                                                            <Key frame="43" value="-41.0478" />
                                                                                                                                            <Key frame="52" value="-41.751" />
                                                                                                                                            <Key frame="59" value="-41.8389" />
                                                                                                                                            <Key frame="66" value="-41.3994" />
                                                                                                                                            <Key frame="72" value="3.42537" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="0.231662" />
                                                                                                                                            <Key frame="24" value="0.0669354" />
                                                                                                                                            <Key frame="34" value="0.0665718" />
                                                                                                                                            <Key frame="43" value="0.0665718" />
                                                                                                                                            <Key frame="52" value="0.0731171" />
                                                                                                                                            <Key frame="59" value="0.0694809" />
                                                                                                                                            <Key frame="66" value="0.0607536" />
                                                                                                                                            <Key frame="72" value="0.3004" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="46.3" />
                                                                                                                                            <Key frame="24" value="34" />
                                                                                                                                            <Key frame="34" value="99.9353" />
                                                                                                                                            <Key frame="39" value="119" />
                                                                                                                                            <Key frame="52" value="119.496" />
                                                                                                                                            <Key frame="59" value="108.197" />
                                                                                                                                            <Key frame="66" value="44.8" />
                                                                                                                                            <Key frame="72" value="53.3527" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-32.5223" />
                                                                                                                                            <Key frame="24" value="-53.3" />
                                                                                                                                            <Key frame="29" value="-43.7" />
                                                                                                                                            <Key frame="34" value="-31.7" />
                                                                                                                                            <Key frame="39" value="-30.1" />
                                                                                                                                            <Key frame="52" value="-31.7" />
                                                                                                                                            <Key frame="59" value="-89.2" />
                                                                                                                                            <Key frame="66" value="-31.4676" />
                                                                                                                                            <Key frame="72" value="-15.1198" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="8" />
                                                                                                                                            <Key frame="24" value="0.261271" />
                                                                                                                                            <Key frame="34" value="-3.95753" />
                                                                                                                                            <Key frame="39" value="-8.44001" />
                                                                                                                                            <Key frame="52" value="6.7" />
                                                                                                                                            <Key frame="59" value="100.37" />
                                                                                                                                            <Key frame="66" value="64.598" />
                                                                                                                                            <Key frame="72" value="29.705" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="48" />
                                                                                                                                            <Key frame="24" value="27.4246" />
                                                                                                                                            <Key frame="34" value="4.48488" />
                                                                                                                                            <Key frame="39" value="5.80326" />
                                                                                                                                            <Key frame="52" value="33.9" />
                                                                                                                                            <Key frame="59" value="59.5051" />
                                                                                                                                            <Key frame="66" value="74.0951" />
                                                                                                                                            <Key frame="72" value="73.4799" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="10.8083" />
                                                                                                                                            <Key frame="24" value="60.4671" />
                                                                                                                                            <Key frame="34" value="60.2913" />
                                                                                                                                            <Key frame="39" value="59.764" />
                                                                                                                                            <Key frame="52" value="59.764" />
                                                                                                                                            <Key frame="59" value="60.0276" />
                                                                                                                                            <Key frame="66" value="60.8187" />
                                                                                                                                            <Key frame="72" value="-3.43018" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="0.406207" />
                                                                                                                                            <Key frame="24" value="0.0854807" />
                                                                                                                                            <Key frame="34" value="0.0883898" />
                                                                                                                                            <Key frame="39" value="0.103299" />
                                                                                                                                            <Key frame="52" value="0.117844" />
                                                                                                                                            <Key frame="59" value="0.114935" />
                                                                                                                                            <Key frame="66" value="0.121117" />
                                                                                                                                            <Key frame="72" value="0.2996" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-22.7616" />
                                                                                                                                            <Key frame="24" value="-24.2557" />
                                                                                                                                            <Key frame="34" value="-52.0295" />
                                                                                                                                            <Key frame="43" value="-33.5722" />
                                                                                                                                            <Key frame="52" value="-30.9355" />
                                                                                                                                            <Key frame="59" value="-45.4376" />
                                                                                                                                            <Key frame="66" value="-44.5587" />
                                                                                                                                            <Key frame="72" value="-35.1543" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="10.4615" />
                                                                                                                                            <Key frame="24" value="18" />
                                                                                                                                            <Key frame="34" value="-15.0271" />
                                                                                                                                            <Key frame="43" value="16.7897" />
                                                                                                                                            <Key frame="52" value="30.325" />
                                                                                                                                            <Key frame="59" value="13.3619" />
                                                                                                                                            <Key frame="66" value="20.4812" />
                                                                                                                                            <Key frame="72" value="15.9987" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-33.8359" />
                                                                                                                                            <Key frame="24" value="-49.8322" />
                                                                                                                                            <Key frame="34" value="-0.524946" />
                                                                                                                                            <Key frame="43" value="-35.5937" />
                                                                                                                                            <Key frame="52" value="-89.0319" />
                                                                                                                                            <Key frame="59" value="-91.3171" />
                                                                                                                                            <Key frame="66" value="-83.9342" />
                                                                                                                                            <Key frame="72" value="-90.5261" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="121.039" />
                                                                                                                                            <Key frame="24" value="121.039" />
                                                                                                                                            <Key frame="34" value="104.149" />
                                                                                                                                            <Key frame="43" value="113.554" />
                                                                                                                                            <Key frame="52" value="61.7" />
                                                                                                                                            <Key frame="59" value="66.3558" />
                                                                                                                                            <Key frame="66" value="62.3128" />
                                                                                                                                            <Key frame="72" value="80.067" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-68.1542" />
                                                                                                                                            <Key frame="24" value="-68.1542" />
                                                                                                                                            <Key frame="34" value="-68.1542" />
                                                                                                                                            <Key frame="43" value="-29.9735" />
                                                                                                                                            <Key frame="52" value="42.3614" />
                                                                                                                                            <Key frame="59" value="52.8695" />
                                                                                                                                            <Key frame="66" value="52.8205" />
                                                                                                                                            <Key frame="72" value="47.8986" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="2.46337" />
                                                                                                                                            <Key frame="24" value="4.57277" />
                                                                                                                                            <Key frame="34" value="2.37548" />
                                                                                                                                            <Key frame="43" value="-26.0135" />
                                                                                                                                            <Key frame="52" value="-10.3688" />
                                                                                                                                            <Key frame="59" value="-2.72224" />
                                                                                                                                            <Key frame="66" value="-2.89802" />
                                                                                                                                            <Key frame="72" value="-0.524946" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-7.90785" />
                                                                                                                                            <Key frame="24" value="-14.6755" />
                                                                                                                                            <Key frame="34" value="-21.7947" />
                                                                                                                                            <Key frame="43" value="-32.957" />
                                                                                                                                            <Key frame="52" value="-30.6718" />
                                                                                                                                            <Key frame="59" value="-12.3024" />
                                                                                                                                            <Key frame="66" value="-18.4549" />
                                                                                                                                            <Key frame="72" value="-15.3786" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-43.8604" />
                                                                                                                                            <Key frame="24" value="-49.2218" />
                                                                                                                                            <Key frame="34" value="-78.226" />
                                                                                                                                            <Key frame="43" value="-94.5739" />
                                                                                                                                            <Key frame="52" value="-88.3336" />
                                                                                                                                            <Key frame="59" value="-92.2008" />
                                                                                                                                            <Key frame="66" value="-81.2144" />
                                                                                                                                            <Key frame="72" value="-90.8824" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="108.461" />
                                                                                                                                            <Key frame="24" value="44.3877" />
                                                                                                                                            <Key frame="34" value="65.4817" />
                                                                                                                                            <Key frame="43" value="65.6575" />
                                                                                                                                            <Key frame="52" value="59.5" />
                                                                                                                                            <Key frame="59" value="68.6458" />
                                                                                                                                            <Key frame="66" value="56.1652" />
                                                                                                                                            <Key frame="72" value="80.5991" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-41.8341" />
                                                                                                                                            <Key frame="24" value="19.1628" />
                                                                                                                                            <Key frame="34" value="26.1941" />
                                                                                                                                            <Key frame="43" value="44.2119" />
                                                                                                                                            <Key frame="52" value="40.8721" />
                                                                                                                                            <Key frame="59" value="53.4029" />
                                                                                                                                            <Key frame="66" value="53.4029" />
                                                                                                                                            <Key frame="72" value="48.6944" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="12.0436" />
                                                                                                                                            <Key frame="24" value="29.0067" />
                                                                                                                                            <Key frame="34" value="3.34229" />
                                                                                                                                            <Key frame="43" value="-3.1617" />
                                                                                                                                            <Key frame="52" value="10.8131" />
                                                                                                                                            <Key frame="59" value="2.02391" />
                                                                                                                                            <Key frame="66" value="2.72705" />
                                                                                                                                            <Key frame="72" value="1.0571" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                    </ActuatorList>
                                                                                                                                </Timeline>
                                                                                                                            </Box>
                                                                                                                            <Box name="BellyToCrouch" id="12" tooltip="Crouch from lie down position (on the belly)." x="707" y="382">
                                                                                                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                                                <Timeline enable="1" fps="10" start_frame="0" end_frame="-1" size="300">
                                                                                                                                    <ActuatorList model="Nao">
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="10" />
                                                                                                                                            <Key frame="20" value="-13" />
                                                                                                                                            <Key frame="34" value="16.4" />
                                                                                                                                            <Key frame="45" value="17" />
                                                                                                                                            <Key frame="58" value="-28.4" />
                                                                                                                                            <Key frame="65" value="-17" />
                                                                                                                                            <Key frame="76" value="3" />
                                                                                                                                            <Key frame="89" value="-22.4" />
                                                                                                                                            <Key frame="100" value="-1" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-33.0497" />
                                                                                                                                            <Key frame="20" value="-31.3797" />
                                                                                                                                            <Key frame="34" value="6.15002" />
                                                                                                                                            <Key frame="45" value="29.5" />
                                                                                                                                            <Key frame="58" value="21.8" />
                                                                                                                                            <Key frame="65" value="21.2674" />
                                                                                                                                            <Key frame="76" value="-6" />
                                                                                                                                            <Key frame="89" value="-30.5887" />
                                                                                                                                            <Key frame="100" value="0.4" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="4.83164" />
                                                                                                                                            <Key frame="20" value="-86.6" />
                                                                                                                                            <Key frame="34" value="-71.6342" />
                                                                                                                                            <Key frame="45" value="4.12851" />
                                                                                                                                            <Key frame="58" value="73" />
                                                                                                                                            <Key frame="65" value="43.3" />
                                                                                                                                            <Key frame="76" value="43" />
                                                                                                                                            <Key frame="89" value="74" />
                                                                                                                                            <Key frame="100" value="86.9225" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="89.0319" />
                                                                                                                                            <Key frame="20" value="0.964405" />
                                                                                                                                            <Key frame="34" value="4.39218" />
                                                                                                                                            <Key frame="45" value="4.04062" />
                                                                                                                                            <Key frame="58" value="8.96255" />
                                                                                                                                            <Key frame="65" value="53.8" />
                                                                                                                                            <Key frame="76" value="38.8" />
                                                                                                                                            <Key frame="89" value="48.5" />
                                                                                                                                            <Key frame="100" value="4.83164" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-119" />
                                                                                                                                            <Key frame="20" value="-90.5309" />
                                                                                                                                            <Key frame="34" value="-91.9371" />
                                                                                                                                            <Key frame="45" value="-102.396" />
                                                                                                                                            <Key frame="58" value="-76.0287" />
                                                                                                                                            <Key frame="65" value="-71.5" />
                                                                                                                                            <Key frame="76" value="-55.7258" />
                                                                                                                                            <Key frame="89" value="-55" />
                                                                                                                                            <Key frame="100" value="-51.6827" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-0.5" />
                                                                                                                                            <Key frame="20" value="-20.2127" />
                                                                                                                                            <Key frame="34" value="-36.5606" />
                                                                                                                                            <Key frame="45" value="-48.7775" />
                                                                                                                                            <Key frame="58" value="-88.8561" />
                                                                                                                                            <Key frame="65" value="-42" />
                                                                                                                                            <Key frame="76" value="-42.2" />
                                                                                                                                            <Key frame="89" value="-66.1801" />
                                                                                                                                            <Key frame="100" value="-63.016" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-88.8609" />
                                                                                                                                            <Key frame="20" value="-88.8609" />
                                                                                                                                            <Key frame="34" value="-86.9273" />
                                                                                                                                            <Key frame="45" value="-82.9722" />
                                                                                                                                            <Key frame="58" value="-80.5112" />
                                                                                                                                            <Key frame="65" value="-80.687" />
                                                                                                                                            <Key frame="76" value="-80.687" />
                                                                                                                                            <Key frame="89" value="-31.2" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0.0585718" />
                                                                                                                                            <Key frame="20" value="0.0196627" />
                                                                                                                                            <Key frame="34" value="0.0407536" />
                                                                                                                                            <Key frame="45" value="0.0545718" />
                                                                                                                                            <Key frame="58" value="0.0574809" />
                                                                                                                                            <Key frame="65" value="0.0574809" />
                                                                                                                                            <Key frame="76" value="0.0549355" />
                                                                                                                                            <Key frame="89" value="0.0574809" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-1.57965" />
                                                                                                                                            <Key frame="20" value="-86.6" />
                                                                                                                                            <Key frame="34" value="-70.0473" />
                                                                                                                                            <Key frame="45" value="-13.5329" />
                                                                                                                                            <Key frame="58" value="12.483" />
                                                                                                                                            <Key frame="65" value="25.7547" />
                                                                                                                                            <Key frame="76" value="52.3859" />
                                                                                                                                            <Key frame="89" value="55.0226" />
                                                                                                                                            <Key frame="100" value="77.5229" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-87.982" />
                                                                                                                                            <Key frame="20" value="-11" />
                                                                                                                                            <Key frame="34" value="-4.74856" />
                                                                                                                                            <Key frame="45" value="-4.74856" />
                                                                                                                                            <Key frame="58" value="-13.0104" />
                                                                                                                                            <Key frame="65" value="-10.4615" />
                                                                                                                                            <Key frame="76" value="-0.498473" />
                                                                                                                                            <Key frame="89" value="-7.56109" />
                                                                                                                                            <Key frame="100" value="-0.79343" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="119" />
                                                                                                                                            <Key frame="20" value="89.4714" />
                                                                                                                                            <Key frame="34" value="92.4597" />
                                                                                                                                            <Key frame="45" value="96.5906" />
                                                                                                                                            <Key frame="58" value="112.323" />
                                                                                                                                            <Key frame="65" value="111.796" />
                                                                                                                                            <Key frame="76" value="38.1426" />
                                                                                                                                            <Key frame="89" value="22.6737" />
                                                                                                                                            <Key frame="100" value="49.6564" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="6" />
                                                                                                                                            <Key frame="20" value="21.8874" />
                                                                                                                                            <Key frame="34" value="36.3896" />
                                                                                                                                            <Key frame="45" value="89.2125" />
                                                                                                                                            <Key frame="58" value="0.498473" />
                                                                                                                                            <Key frame="65" value="0.498473" />
                                                                                                                                            <Key frame="76" value="24.2605" />
                                                                                                                                            <Key frame="89" value="37.2" />
                                                                                                                                            <Key frame="100" value="47.8155" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="86.4831" />
                                                                                                                                            <Key frame="20" value="86.4831" />
                                                                                                                                            <Key frame="34" value="85.7799" />
                                                                                                                                            <Key frame="45" value="81.8248" />
                                                                                                                                            <Key frame="58" value="82.2643" />
                                                                                                                                            <Key frame="65" value="82.5279" />
                                                                                                                                            <Key frame="76" value="82.7037" />
                                                                                                                                            <Key frame="89" value="82.5279" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0.0185718" />
                                                                                                                                            <Key frame="20" value="0.0127537" />
                                                                                                                                            <Key frame="34" value="0.0262082" />
                                                                                                                                            <Key frame="45" value="0.0469355" />
                                                                                                                                            <Key frame="58" value="0.0494809" />
                                                                                                                                            <Key frame="65" value="0.04839" />
                                                                                                                                            <Key frame="76" value="0.0472991" />
                                                                                                                                            <Key frame="89" value="0.04839" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-1.93121" />
                                                                                                                                            <Key frame="20" value="2" />
                                                                                                                                            <Key frame="34" value="-24.9588" />
                                                                                                                                            <Key frame="45" value="-44.6466" />
                                                                                                                                            <Key frame="58" value="-59.6761" />
                                                                                                                                            <Key frame="65" value="-65.621" />
                                                                                                                                            <Key frame="76" value="-65.621" />
                                                                                                                                            <Key frame="89" value="-32.5175" />
                                                                                                                                            <Key frame="100" value="0" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="3.60596" />
                                                                                                                                            <Key frame="20" value="0.00240423" />
                                                                                                                                            <Key frame="34" value="0.090296" />
                                                                                                                                            <Key frame="45" value="-21.619" />
                                                                                                                                            <Key frame="58" value="-17.0486" />
                                                                                                                                            <Key frame="65" value="-17.0486" />
                                                                                                                                            <Key frame="76" value="11.1647" />
                                                                                                                                            <Key frame="89" value="7.29742" />
                                                                                                                                            <Key frame="100" value="-0.6" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="3.51807" />
                                                                                                                                            <Key frame="20" value="0.00240423" />
                                                                                                                                            <Key frame="34" value="-89.9108" />
                                                                                                                                            <Key frame="45" value="-73.3872" />
                                                                                                                                            <Key frame="58" value="-59.4124" />
                                                                                                                                            <Key frame="65" value="-66.4437" />
                                                                                                                                            <Key frame="76" value="-67.7621" />
                                                                                                                                            <Key frame="89" value="-72.7719" />
                                                                                                                                            <Key frame="100" value="-60" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="6.9" />
                                                                                                                                            <Key frame="20" value="114" />
                                                                                                                                            <Key frame="34" value="121.039" />
                                                                                                                                            <Key frame="45" value="16.1697" />
                                                                                                                                            <Key frame="58" value="23.201" />
                                                                                                                                            <Key frame="65" value="20.4764" />
                                                                                                                                            <Key frame="76" value="41.2188" />
                                                                                                                                            <Key frame="89" value="115.399" />
                                                                                                                                            <Key frame="100" value="120" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="52.8205" />
                                                                                                                                            <Key frame="20" value="-59" />
                                                                                                                                            <Key frame="34" value="-65.9212" />
                                                                                                                                            <Key frame="45" value="12.3903" />
                                                                                                                                            <Key frame="58" value="40.6915" />
                                                                                                                                            <Key frame="65" value="52.8695" />
                                                                                                                                            <Key frame="76" value="47.2833" />
                                                                                                                                            <Key frame="89" value="-28.743" />
                                                                                                                                            <Key frame="100" value="-60" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-0.0854875" />
                                                                                                                                            <Key frame="20" value="0.00240423" />
                                                                                                                                            <Key frame="34" value="-0.0854875" />
                                                                                                                                            <Key frame="45" value="-25.9257" />
                                                                                                                                            <Key frame="58" value="-17.2244" />
                                                                                                                                            <Key frame="65" value="-6.76526" />
                                                                                                                                            <Key frame="76" value="-2.37067" />
                                                                                                                                            <Key frame="89" value="-6.94104" />
                                                                                                                                            <Key frame="100" value="0" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="1.8" />
                                                                                                                                            <Key frame="20" value="0.00240423" />
                                                                                                                                            <Key frame="34" value="0.090296" />
                                                                                                                                            <Key frame="45" value="17.8444" />
                                                                                                                                            <Key frame="58" value="14.5924" />
                                                                                                                                            <Key frame="65" value="18.3718" />
                                                                                                                                            <Key frame="76" value="13.0104" />
                                                                                                                                            <Key frame="89" value="-4.30429" />
                                                                                                                                            <Key frame="100" value="0.6" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="4.39218" />
                                                                                                                                            <Key frame="20" value="-0.00240423" />
                                                                                                                                            <Key frame="34" value="-90.3551" />
                                                                                                                                            <Key frame="45" value="-95.1891" />
                                                                                                                                            <Key frame="58" value="-68.7337" />
                                                                                                                                            <Key frame="65" value="-91.5856" />
                                                                                                                                            <Key frame="76" value="-18.4597" />
                                                                                                                                            <Key frame="89" value="-40.6963" />
                                                                                                                                            <Key frame="100" value="-60" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-4.48007" />
                                                                                                                                            <Key frame="20" value="114" />
                                                                                                                                            <Key frame="34" value="119.535" />
                                                                                                                                            <Key frame="45" value="99.8474" />
                                                                                                                                            <Key frame="58" value="121.478" />
                                                                                                                                            <Key frame="65" value="121.478" />
                                                                                                                                            <Key frame="76" value="121.478" />
                                                                                                                                            <Key frame="89" value="121.478" />
                                                                                                                                            <Key frame="100" value="120" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="53.2648" />
                                                                                                                                            <Key frame="20" value="-59" />
                                                                                                                                            <Key frame="34" value="-65.2133" />
                                                                                                                                            <Key frame="45" value="-67.9785" />
                                                                                                                                            <Key frame="58" value="-67.9785" />
                                                                                                                                            <Key frame="65" value="-33.748" />
                                                                                                                                            <Key frame="76" value="-67.9785" />
                                                                                                                                            <Key frame="89" value="-67.9785" />
                                                                                                                                            <Key frame="100" value="-60" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="10.8" />
                                                                                                                                            <Key frame="20" value="0.00240423" />
                                                                                                                                            <Key frame="34" value="0.353971" />
                                                                                                                                            <Key frame="45" value="-0.261271" />
                                                                                                                                            <Key frame="58" value="-5.62267" />
                                                                                                                                            <Key frame="65" value="-0.788621" />
                                                                                                                                            <Key frame="76" value="-5.44688" />
                                                                                                                                            <Key frame="89" value="2.02391" />
                                                                                                                                            <Key frame="100" value="0" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                    </ActuatorList>
                                                                                                                                </Timeline>
                                                                                                                            </Box>
                                                                                                                            <Box name="BackToSitDown" id="14" tooltip="Sit down from lie down position (on the back)." x="923" y="91">
                                                                                                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                                                <Timeline enable="1" fps="10" start_frame="0" end_frame="-1" size="300" resources_acquisition="1">
                                                                                                                                    <BehaviorLayer name="behavior_layer1">
                                                                                                                                        <BehaviorKeyframe name="keyframe10" index="10">
                                                                                                                                            <Diagram>
                                                                                                                                                <Box name="Disable Anti-Collision" id="2" tooltip="Disable the collision protection on some specific part of NAO&apos;s body.&#x0A;&#x0A;Note: When this box is unloaded, the collision protection state will be reset to&#x0A;its previous state (enabled or disabled)." x="126" y="44">
                                                                                                                                                    <bitmap>media/images/box/sensors/anti_collision.png</bitmap>
                                                                                                                                                    <script language="4">
                                                                                                                                                        <content>
                                                                                                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy( "ALMotion" )
        
    def onLoad(self):
        self.collisionLArmState = self.motion.getCollisionProtectionEnabled("LArm")
        self.collisionRArmState = self.motion.getCollisionProtectionEnabled("RArm")
        
    def onUnload(self):
        self.motion.setCollisionProtectionEnabled("LArm", self.collisionLArmState)
        self.motion.setCollisionProtectionEnabled("RArm", self.collisionRArmState)

    def onInput_onSet(self):
        # enable/disable collision protection
        result = self.motion.setCollisionProtectionEnabled( self.getParameter("Body part"), False )
        if( result ):
            self.success()
        else:
            self.logger.warning( "Disabling collision protection failed. Deactivation succeeds only if the current state of the chain is not in collision. If you want to deactivate collision of both arms, they need to be off collision." )
            self.failure()]]>
</content>
                                                                                                                                                    </script>
                                                                                                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                                    <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="The anti-collision feature is enabled or disabled when this input is stimulated." id="2" />
                                                                                                                                                    <Output name="success" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the collision protection has been successfully enabled or disabled.&#x0A;&#x0A;Note: The only case where there is a failure is when you try to disable the&#x0A;anti-collision while it is currently in collision with some part of his body." id="3" />
                                                                                                                                                    <Output name="failure" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the collision protection has failed to be enabled or disabled.&#x0A;&#x0A;Note: The only case where there is a failure is when you try to disable the&#x0A;anti-collision while it is currently in collision with some part of his body." id="4" />
                                                                                                                                                    <Parameter name="Body part" inherits_from_parent="0" content_type="3" value="Arms" default_value="Arms" custom_choice="0" tooltip="Body part which avoids the collision." id="5">
                                                                                                                                                        <Choice value="Arms" />
                                                                                                                                                        <Choice value="LArm" />
                                                                                                                                                        <Choice value="RArm" />
                                                                                                                                                    </Parameter>
                                                                                                                                                </Box>
                                                                                                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                                                                            </Diagram>
                                                                                                                                        </BehaviorKeyframe>
                                                                                                                                    </BehaviorLayer>
                                                                                                                                    <ActuatorList model="Nao">
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-1.40867" />
                                                                                                                                            <Key frame="20" value="-2.73208e-05" />
                                                                                                                                            <Key frame="28" value="2.37067" />
                                                                                                                                            <Key frame="36" value="3.86374e-05" />
                                                                                                                                            <Key frame="44" value="-0.353971" />
                                                                                                                                            <Key frame="50" value="0.788621" />
                                                                                                                                            <Key frame="56" value="1.40386" />
                                                                                                                                            <Key frame="62" value="-1.32078" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="3.60116" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="28" value="29.5016" />
                                                                                                                                            <Key frame="36" value="-38.5028" />
                                                                                                                                            <Key frame="44" value="-1.23289" />
                                                                                                                                            <Key frame="50" value="11.1598" />
                                                                                                                                            <Key frame="56" value="4.2164" />
                                                                                                                                            <Key frame="62" value="-2.02391" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="119.496" />
                                                                                                                                            <Key frame="20" value="120" />
                                                                                                                                            <Key frame="26" value="116.806" />
                                                                                                                                            <Key frame="36" value="119.496" />
                                                                                                                                            <Key frame="44" value="119.5" />
                                                                                                                                            <Key frame="50" value="74.9692" />
                                                                                                                                            <Key frame="56" value="51.7658" />
                                                                                                                                            <Key frame="59" value="40.3" />
                                                                                                                                            <Key frame="62" value="51.6779" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="56.1604" />
                                                                                                                                            <Key frame="20" value="21" />
                                                                                                                                            <Key frame="26" value="20" />
                                                                                                                                            <Key frame="36" value="20" />
                                                                                                                                            <Key frame="44" value="23" />
                                                                                                                                            <Key frame="50" value="67.1469" />
                                                                                                                                            <Key frame="56" value="22.7616" />
                                                                                                                                            <Key frame="62" value="12.3903" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-43.5967" />
                                                                                                                                            <Key frame="20" value="9" />
                                                                                                                                            <Key frame="26" value="7.02893" />
                                                                                                                                            <Key frame="36" value="5" />
                                                                                                                                            <Key frame="44" value="3.42537" />
                                                                                                                                            <Key frame="50" value="-54.6711" />
                                                                                                                                            <Key frame="56" value="-55.1984" />
                                                                                                                                            <Key frame="62" value="-25.1394" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-35.7695" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="26" value="-88.5" />
                                                                                                                                            <Key frame="36" value="-89.5017" />
                                                                                                                                            <Key frame="44" value="-50.1" />
                                                                                                                                            <Key frame="46" value="-59.3" />
                                                                                                                                            <Key frame="50" value="-38.9336" />
                                                                                                                                            <Key frame="56" value="-64.3343" />
                                                                                                                                            <Key frame="62" value="-70.7504" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-40.4326" />
                                                                                                                                            <Key frame="26" value="-102.484" />
                                                                                                                                            <Key frame="44" value="-41.2236" />
                                                                                                                                            <Key frame="50" value="-2.72705" />
                                                                                                                                            <Key frame="62" value="3.42537" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0.0502082" />
                                                                                                                                            <Key frame="26" value="0.0763898" />
                                                                                                                                            <Key frame="44" value="0.0905716" />
                                                                                                                                            <Key frame="50" value="0.0127537" />
                                                                                                                                            <Key frame="62" value="0.3004" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="119.496" />
                                                                                                                                            <Key frame="20" value="120" />
                                                                                                                                            <Key frame="26" value="111.889" />
                                                                                                                                            <Key frame="36" value="119.496" />
                                                                                                                                            <Key frame="44" value="119.5" />
                                                                                                                                            <Key frame="50" value="109.955" />
                                                                                                                                            <Key frame="56" value="59.4172" />
                                                                                                                                            <Key frame="59" value="41.8" />
                                                                                                                                            <Key frame="62" value="53.0011" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-61.5266" />
                                                                                                                                            <Key frame="20" value="-21" />
                                                                                                                                            <Key frame="26" value="-20" />
                                                                                                                                            <Key frame="36" value="-20" />
                                                                                                                                            <Key frame="44" value="-23.5" />
                                                                                                                                            <Key frame="50" value="-51.507" />
                                                                                                                                            <Key frame="56" value="-42.4541" />
                                                                                                                                            <Key frame="62" value="-13.8893" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="43.8556" />
                                                                                                                                            <Key frame="20" value="-9" />
                                                                                                                                            <Key frame="26" value="-14.7682" />
                                                                                                                                            <Key frame="36" value="-5" />
                                                                                                                                            <Key frame="44" value="-3.78175" />
                                                                                                                                            <Key frame="50" value="90.3503" />
                                                                                                                                            <Key frame="56" value="61.1702" />
                                                                                                                                            <Key frame="62" value="30.0566" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="40.6963" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="26" value="88.5" />
                                                                                                                                            <Key frame="36" value="89.5017" />
                                                                                                                                            <Key frame="44" value="40.9" />
                                                                                                                                            <Key frame="46" value="60.4" />
                                                                                                                                            <Key frame="50" value="54.8468" />
                                                                                                                                            <Key frame="56" value="65.6575" />
                                                                                                                                            <Key frame="62" value="72.7768" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="66.0043" />
                                                                                                                                            <Key frame="26" value="98.8758" />
                                                                                                                                            <Key frame="44" value="63.6312" />
                                                                                                                                            <Key frame="50" value="14.1482" />
                                                                                                                                            <Key frame="62" value="-3.2544" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="26" value="0.0182082" />
                                                                                                                                            <Key frame="44" value="0.00293558" />
                                                                                                                                            <Key frame="50" value="0.126571" />
                                                                                                                                            <Key frame="62" value="0.2996" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-26.9804" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="31" value="0.441863" />
                                                                                                                                            <Key frame="36" value="-2.73208e-05" />
                                                                                                                                            <Key frame="44" value="-37.5274" />
                                                                                                                                            <Key frame="50" value="-40.34" />
                                                                                                                                            <Key frame="62" value="-35.418" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="2.55126" />
                                                                                                                                            <Key frame="20" value="8.991e-06" />
                                                                                                                                            <Key frame="31" value="3.34229" />
                                                                                                                                            <Key frame="36" value="8.991e-06" />
                                                                                                                                            <Key frame="44" value="-3.68905" />
                                                                                                                                            <Key frame="50" value="8.06912" />
                                                                                                                                            <Key frame="62" value="15.9987" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="14.3288" />
                                                                                                                                            <Key frame="20" value="-10" />
                                                                                                                                            <Key frame="31" value="21.448" />
                                                                                                                                            <Key frame="36" value="-10" />
                                                                                                                                            <Key frame="44" value="-67.4984" />
                                                                                                                                            <Key frame="50" value="-90" />
                                                                                                                                            <Key frame="62" value="-90.5261" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="5.2711" />
                                                                                                                                            <Key frame="20" value="96" />
                                                                                                                                            <Key frame="31" value="115.751" />
                                                                                                                                            <Key frame="36" value="96" />
                                                                                                                                            <Key frame="44" value="61.6976" />
                                                                                                                                            <Key frame="50" value="80.3062" />
                                                                                                                                            <Key frame="62" value="79.9791" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="47.2833" />
                                                                                                                                            <Key frame="20" value="14" />
                                                                                                                                            <Key frame="31" value="-26.0184" />
                                                                                                                                            <Key frame="36" value="14" />
                                                                                                                                            <Key frame="44" value="38.8457" />
                                                                                                                                            <Key frame="50" value="44.4668" />
                                                                                                                                            <Key frame="62" value="47.8986" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-1.93121" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="31" value="-1.93121" />
                                                                                                                                            <Key frame="36" value="0" />
                                                                                                                                            <Key frame="44" value="9.75839" />
                                                                                                                                            <Key frame="50" value="5.20441" />
                                                                                                                                            <Key frame="62" value="-0.524946" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-8.52309" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="31" value="-1.31597" />
                                                                                                                                            <Key frame="36" value="0" />
                                                                                                                                            <Key frame="44" value="3.51807" />
                                                                                                                                            <Key frame="50" value="-6.98985" />
                                                                                                                                            <Key frame="62" value="-15.3786" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="10.6325" />
                                                                                                                                            <Key frame="20" value="-10" />
                                                                                                                                            <Key frame="31" value="16.1697" />
                                                                                                                                            <Key frame="36" value="-10" />
                                                                                                                                            <Key frame="44" value="-66.7122" />
                                                                                                                                            <Key frame="50" value="-90" />
                                                                                                                                            <Key frame="62" value="-91.234" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="10.9889" />
                                                                                                                                            <Key frame="20" value="96" />
                                                                                                                                            <Key frame="31" value="116.107" />
                                                                                                                                            <Key frame="36" value="96" />
                                                                                                                                            <Key frame="44" value="62.7571" />
                                                                                                                                            <Key frame="50" value="78.8859" />
                                                                                                                                            <Key frame="62" value="80.687" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="26.7215" />
                                                                                                                                            <Key frame="20" value="14" />
                                                                                                                                            <Key frame="31" value="-21.4432" />
                                                                                                                                            <Key frame="36" value="14" />
                                                                                                                                            <Key frame="44" value="41.1357" />
                                                                                                                                            <Key frame="50" value="44.1094" />
                                                                                                                                            <Key frame="62" value="48.6944" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="9.5826" />
                                                                                                                                            <Key frame="20" value="4.94951e-06" />
                                                                                                                                            <Key frame="31" value="-2.28278" />
                                                                                                                                            <Key frame="36" value="4.94951e-06" />
                                                                                                                                            <Key frame="44" value="-8.25942" />
                                                                                                                                            <Key frame="50" value="-6.87076" />
                                                                                                                                            <Key frame="62" value="1.0571" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                    </ActuatorList>
                                                                                                                                </Timeline>
                                                                                                                            </Box>
                                                                                                                            <Box name="SideToBelly" id="6" tooltip="Lie down on the back or the belly from an other lie down position (on the side)." x="513" y="538">
                                                                                                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                                                <Timeline enable="1" fps="10" start_frame="0" end_frame="-1" size="300">
                                                                                                                                    <ActuatorList model="Nao">
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="41.3067" />
                                                                                                                                            <Key frame="10" value="41.3067" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="8.52309" />
                                                                                                                                            <Key frame="10" value="8.52309" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="108.72" />
                                                                                                                                            <Key frame="10" value="108.72" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="45.965" />
                                                                                                                                            <Key frame="10" value="45.965" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-56.8684" />
                                                                                                                                            <Key frame="10" value="-56.8684" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-26.8046" />
                                                                                                                                            <Key frame="10" value="-26.8046" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-38.8505" />
                                                                                                                                            <Key frame="10" value="-38.8505" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="0.200389" />
                                                                                                                                            <Key frame="10" value="0.200389" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="113.383" />
                                                                                                                                            <Key frame="10" value="113.383" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-44.6514" />
                                                                                                                                            <Key frame="10" value="-44.6514" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="52.9084" />
                                                                                                                                            <Key frame="10" value="52.9084" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="19.5144" />
                                                                                                                                            <Key frame="10" value="19.5144" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="37" />
                                                                                                                                            <Key frame="10" value="37" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="0.146571" />
                                                                                                                                            <Key frame="10" value="0.146571" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-65.5648" />
                                                                                                                                            <Key frame="10" value="-65.5648" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="14.4166" />
                                                                                                                                            <Key frame="10" value="14.4166" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="2.02391" />
                                                                                                                                            <Key frame="10" value="2.02391" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-5.27591" />
                                                                                                                                            <Key frame="10" value="-5.27591" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="20.3885" />
                                                                                                                                            <Key frame="10" value="20.3885" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="19.6902" />
                                                                                                                                            <Key frame="10" value="19.6902" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-1.75543" />
                                                                                                                                            <Key frame="10" value="-1.75543" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="23.8163" />
                                                                                                                                            <Key frame="10" value="23.8163" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-5.2711" />
                                                                                                                                            <Key frame="10" value="-5.2711" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="29.9735" />
                                                                                                                                            <Key frame="10" value="29.9735" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-3.86483" />
                                                                                                                                            <Key frame="10" value="-3.86483" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                    </ActuatorList>
                                                                                                                                </Timeline>
                                                                                                                            </Box>
                                                                                                                            <Box name="Switch Case" id="9" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="261" y="101">
                                                                                                                                <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Back")):
			self.output_1(p)
		elif(p == self.typeConversion("Stand")):
			self.output_2(p)
		elif(p == self.typeConversion("Crouch")):
			self.output_3(p)
		elif(p == self.typeConversion("Knee")):
			self.output_4(p)
		elif(p == self.typeConversion("Frog")):
			self.output_5(p)
		elif(p == self.typeConversion("Belly")):
			self.output_6(p)
		elif(p == self.typeConversion("Left")):
			self.output_7(p)
		elif(p == self.typeConversion("Right")):
			self.output_8(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
</content>
                                                                                                                                </script>
                                                                                                                                <pluginContent>
                                                                                                                                    <keywords>
                                                                                                                                        <keyword>&quot;Back&quot;</keyword>
                                                                                                                                        <keyword>&quot;Stand&quot;</keyword>
                                                                                                                                        <keyword>&quot;Crouch&quot;</keyword>
                                                                                                                                        <keyword>&quot;Knee&quot;</keyword>
                                                                                                                                        <keyword>&quot;Frog&quot;</keyword>
                                                                                                                                        <keyword>&quot;Belly&quot;</keyword>
                                                                                                                                        <keyword>&quot;Left&quot;</keyword>
                                                                                                                                        <keyword>&quot;Right&quot;</keyword>
                                                                                                                                        <keyword></keyword>
                                                                                                                                    </keywords>
                                                                                                                                </pluginContent>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                                                                                                                <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                                                                                                                <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                                                                                                                <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                                                                                                                <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                                                                                                                <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                                                                                                                                <Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="8" />
                                                                                                                                <Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="9" />
                                                                                                                                <Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="10" />
                                                                                                                                <Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="11" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Switch Case" id="1" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="795" y="538">
                                                                                                                                <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Belly")):
			self.output_1(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
</content>
                                                                                                                                </script>
                                                                                                                                <pluginContent>
                                                                                                                                    <keywords>
                                                                                                                                        <keyword>&quot;Belly&quot;</keyword>
                                                                                                                                        <keyword></keyword>
                                                                                                                                    </keywords>
                                                                                                                                </pluginContent>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                                                                                                                <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                                                                                                                <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Switch Case" id="4" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="977" y="378">
                                                                                                                                <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Crouch")):
			self.output_1(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
</content>
                                                                                                                                </script>
                                                                                                                                <pluginContent>
                                                                                                                                    <keywords>
                                                                                                                                        <keyword>&quot;Crouch&quot;</keyword>
                                                                                                                                        <keyword></keyword>
                                                                                                                                    </keywords>
                                                                                                                                </pluginContent>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                                                                                                                <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                                                                                                                <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Get Robot Pose" id="5" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="656" y="542">
                                                                                                                                <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPose")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                                                                                                                <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Get Robot Pose" id="2" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="845" y="378">
                                                                                                                                <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPose")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                                                                                                                <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Get Robot Pose" id="3" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="104" y="49">
                                                                                                                                <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPose")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                                                                                                                <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Relax Motors" id="7" tooltip="Relax motors for a while for a better electric current consumption.&#x0A;&#x0A;!!Warning!! This box must be applied only after a Sit Down. In other positions NAO&#x0A;could fall." x="1087" y="131">
                                                                                                                                <bitmap>media/images/box/movement/stiffness.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        # WARNING: This should only be called when sitting and its
        # behavior may change in future version. The aim of the method
        # is to reduce battery usage when motors are stiff while sitting.
        try:
            ALMotion._relaxMotorsWhenSitting()
        except:
            pass
        self.onStopped()]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                                                                            </Box>
                                                                                                                            <Link inputowner="11" indexofinput="2" outputowner="9" indexofoutput="6" />
                                                                                                                            <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="8" />
                                                                                                                            <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="9" />
                                                                                                                            <Link inputowner="6" indexofinput="2" outputowner="9" indexofoutput="11" />
                                                                                                                            <Link inputowner="14" indexofinput="2" outputowner="9" indexofoutput="4" />
                                                                                                                            <Link inputowner="11" indexofinput="2" outputowner="9" indexofoutput="5" />
                                                                                                                            <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="7" />
                                                                                                                            <Link inputowner="6" indexofinput="2" outputowner="9" indexofoutput="10" />
                                                                                                                            <Link inputowner="0" indexofinput="4" outputowner="9" indexofoutput="3" />
                                                                                                                            <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="3" />
                                                                                                                            <Link inputowner="12" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                                                            <Link inputowner="11" indexofinput="2" outputowner="4" indexofoutput="4" />
                                                                                                                            <Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="3" />
                                                                                                                            <Link inputowner="5" indexofinput="2" outputowner="6" indexofoutput="4" />
                                                                                                                            <Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                                                            <Link inputowner="2" indexofinput="2" outputowner="12" indexofoutput="4" />
                                                                                                                            <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                                                            <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                                            <Link inputowner="9" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                                                                            <Link inputowner="7" indexofinput="2" outputowner="14" indexofoutput="4" />
                                                                                                                            <Link inputowner="7" indexofinput="2" outputowner="11" indexofoutput="4" />
                                                                                                                            <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="3" />
                                                                                                                        </Diagram>
                                                                                                                    </BehaviorKeyframe>
                                                                                                                </BehaviorLayer>
                                                                                                            </Timeline>
                                                                                                        </Box>
                                                                                                        <Box name="Switch Case" id="1" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="431" y="128">
                                                                                                            <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Sit")):
			self.output_1(p)
		elif(p == self.typeConversion("Unknown")):
			self.output_2(p)
		elif(p == self.typeConversion("HeadBack")):
			self.output_3(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <keywords>
                                                                                                                    <keyword>&quot;Sit&quot;</keyword>
                                                                                                                    <keyword>&quot;Unknown&quot;</keyword>
                                                                                                                    <keyword>&quot;HeadBack&quot;</keyword>
                                                                                                                    <keyword></keyword>
                                                                                                                </keywords>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                                                                                            <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                                                                                            <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                                                                                            <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                                                                                            <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                                                                                        </Box>
                                                                                                        <Box name="Only Once" id="4" tooltip="This box&apos;s output is stimulated only the first time the onSignal input is." x="104" y="62">
                                                                                                            <bitmap>media/images/box/box-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bFirstTime = True

    def onUnload(self):
        self.bFirstTime = True

    def onInput_onSignal(self):
        if( self.bFirstTime ):
            self.bFirstTime = False
            self.firstTime()]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onSignal" type="1" type_size="1" nature="1" inner="0" tooltip="The signal that must pass only once." id="2" />
                                                                                                            <Output name="firstTime" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent first time the onSignal input is stimulated." id="3" />
                                                                                                        </Box>
                                                                                                        <Box name="Set Stiffness" id="7" tooltip="Set motors stiffness." x="707" y="221">
                                                                                                            <bitmap>media/images/box/movement/stiffness.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def setStiffness(self, stiffness):
        self.bIsRunning = True
        duration = self.getParameter("Duration (s)")
        if(self.getParameter("Head")):
            ALMotion.post.stiffnessInterpolation("Head", stiffness, duration)
        if(self.getParameter("Left arm")):
            ALMotion.post.stiffnessInterpolation("LArm", stiffness, duration)
        if(self.getParameter("Right arm")):
            ALMotion.post.stiffnessInterpolation("RArm", stiffness, duration)
        if(self.getParameter("Left leg")):
            ALMotion.post.stiffnessInterpolation("LLeg", stiffness, duration)
        if(self.getParameter("Right leg")):
            ALMotion.post.stiffnessInterpolation("RLeg", stiffness, duration)
        time.sleep(duration)
        self.bIsRunning = False

    def onInput_onSet(self):
        if( self.bIsRunning ):
            return
        self.setStiffness(self.getParameter("Motors stiffness (%)")/100.)
        self.onReady() #~ activate output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="When this input is stimulated, the stiffness of the selected motors is set to&#x0A;the stiffness parameter value." id="2" />
                                                                                                            <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when stiffness has been set." id="3" />
                                                                                                            <Parameter name="Head" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the head stiffness?" id="4" />
                                                                                                            <Parameter name="Left arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left arm stiffness?" id="5" />
                                                                                                            <Parameter name="Right arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right arm stiffness?" id="6" />
                                                                                                            <Parameter name="Left leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left leg stiffness?" id="7" />
                                                                                                            <Parameter name="Right leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right leg stiffness?" id="8" />
                                                                                                            <Parameter name="Motors stiffness (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Stiffness value the motors are set to." id="9" />
                                                                                                            <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.02" max="10" tooltip="How much time to go to the max/min stiffness in seconds." id="10" />
                                                                                                        </Box>
                                                                                                        <Box name="Get Robot Pose" id="2" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="272" y="115">
                                                                                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPose")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                                                                                            <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                                                                                        </Box>
                                                                                                        <Box name="Left Sit Motion" id="3" tooltip="The robot makes the right motion to sit down depending on its current position." x="597" y="514">
                                                                                                            <bitmap>media/images/box/movement/sit_ground.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.count = 0
        pass

    def onInput_onStop(self):
        self.onUnload()
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent after a step to sit down is done." id="4" />
                                                                                                            <Timeline enable="0">
                                                                                                                <BehaviorLayer name="SitDownBehavior">
                                                                                                                    <BehaviorKeyframe name="DetectRobotPose" index="1">
                                                                                                                        <Diagram>
                                                                                                                            <Box name="CrouchToSitDown" id="11" tooltip="Sit down from crouch or stand position." x="941" y="228">
                                                                                                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                                                <Timeline enable="1" fps="10" start_frame="0" end_frame="-1" size="300">
                                                                                                                                    <ActuatorList model="Nao">
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-18.1081" />
                                                                                                                                            <Key frame="24" value="-25.2273" />
                                                                                                                                            <Key frame="34" value="-36.3017" />
                                                                                                                                            <Key frame="43" value="-35.9501" />
                                                                                                                                            <Key frame="52" value="-23.4695" />
                                                                                                                                            <Key frame="59" value="-10.5494" />
                                                                                                                                            <Key frame="66" value="-0.00240423" />
                                                                                                                                            <Key frame="72" value="-1.23289" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="21.2674" />
                                                                                                                                            <Key frame="24" value="21.5311" />
                                                                                                                                            <Key frame="34" value="21.0916" />
                                                                                                                                            <Key frame="43" value="20.4764" />
                                                                                                                                            <Key frame="52" value="21.0916" />
                                                                                                                                            <Key frame="59" value="21.0037" />
                                                                                                                                            <Key frame="66" value="21.7069" />
                                                                                                                                            <Key frame="72" value="-1.93602" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="46.3" />
                                                                                                                                            <Key frame="24" value="34" />
                                                                                                                                            <Key frame="34" value="99.9353" />
                                                                                                                                            <Key frame="39" value="119" />
                                                                                                                                            <Key frame="52" value="119.496" />
                                                                                                                                            <Key frame="59" value="108.197" />
                                                                                                                                            <Key frame="66" value="44.8" />
                                                                                                                                            <Key frame="72" value="53.3527" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="32.5223" />
                                                                                                                                            <Key frame="24" value="53.3" />
                                                                                                                                            <Key frame="29" value="43.7" />
                                                                                                                                            <Key frame="34" value="31.7" />
                                                                                                                                            <Key frame="39" value="30.1" />
                                                                                                                                            <Key frame="52" value="31.7" />
                                                                                                                                            <Key frame="59" value="89.2" />
                                                                                                                                            <Key frame="66" value="31.4676" />
                                                                                                                                            <Key frame="72" value="15.1198" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-8" />
                                                                                                                                            <Key frame="24" value="-0.261271" />
                                                                                                                                            <Key frame="34" value="3.95753" />
                                                                                                                                            <Key frame="39" value="8.44001" />
                                                                                                                                            <Key frame="52" value="-6.7" />
                                                                                                                                            <Key frame="59" value="-100.37" />
                                                                                                                                            <Key frame="66" value="-64.598" />
                                                                                                                                            <Key frame="72" value="-29.705" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-48" />
                                                                                                                                            <Key frame="24" value="-27.4246" />
                                                                                                                                            <Key frame="34" value="-4.48488" />
                                                                                                                                            <Key frame="39" value="-5.80326" />
                                                                                                                                            <Key frame="52" value="-33.9" />
                                                                                                                                            <Key frame="59" value="-59.5051" />
                                                                                                                                            <Key frame="66" value="-74.0951" />
                                                                                                                                            <Key frame="72" value="-73.4799" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-10.8083" />
                                                                                                                                            <Key frame="24" value="-60.4671" />
                                                                                                                                            <Key frame="34" value="-60.2913" />
                                                                                                                                            <Key frame="39" value="-59.764" />
                                                                                                                                            <Key frame="52" value="-59.764" />
                                                                                                                                            <Key frame="59" value="-60.0276" />
                                                                                                                                            <Key frame="66" value="-60.8187" />
                                                                                                                                            <Key frame="72" value="3.43018" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="0.406207" />
                                                                                                                                            <Key frame="24" value="0.0854807" />
                                                                                                                                            <Key frame="34" value="0.0883898" />
                                                                                                                                            <Key frame="39" value="0.103299" />
                                                                                                                                            <Key frame="52" value="0.117844" />
                                                                                                                                            <Key frame="59" value="0.114935" />
                                                                                                                                            <Key frame="66" value="0.121117" />
                                                                                                                                            <Key frame="72" value="0.2996" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="59.8" />
                                                                                                                                            <Key frame="24" value="41.8" />
                                                                                                                                            <Key frame="29" value="41.8" />
                                                                                                                                            <Key frame="34" value="57.9182" />
                                                                                                                                            <Key frame="43" value="86.2194" />
                                                                                                                                            <Key frame="52" value="116.542" />
                                                                                                                                            <Key frame="59" value="88.1" />
                                                                                                                                            <Key frame="66" value="38.8" />
                                                                                                                                            <Key frame="72" value="52.2932" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-19.2459" />
                                                                                                                                            <Key frame="24" value="-30.6718" />
                                                                                                                                            <Key frame="34" value="-27.6" />
                                                                                                                                            <Key frame="43" value="-48" />
                                                                                                                                            <Key frame="52" value="-25.4" />
                                                                                                                                            <Key frame="59" value="-89.2" />
                                                                                                                                            <Key frame="66" value="-32.6054" />
                                                                                                                                            <Key frame="72" value="-12.5661" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="32.2587" />
                                                                                                                                            <Key frame="24" value="4.9" />
                                                                                                                                            <Key frame="34" value="-6.06212" />
                                                                                                                                            <Key frame="43" value="89" />
                                                                                                                                            <Key frame="52" value="18.8991" />
                                                                                                                                            <Key frame="59" value="69.2" />
                                                                                                                                            <Key frame="66" value="43.5967" />
                                                                                                                                            <Key frame="72" value="25.0515" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="54.9299" />
                                                                                                                                            <Key frame="24" value="68.9" />
                                                                                                                                            <Key frame="34" value="40" />
                                                                                                                                            <Key frame="43" value="51.7" />
                                                                                                                                            <Key frame="47" value="27.9" />
                                                                                                                                            <Key frame="52" value="39.3" />
                                                                                                                                            <Key frame="59" value="55" />
                                                                                                                                            <Key frame="66" value="75.7603" />
                                                                                                                                            <Key frame="72" value="73.3872" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-5.00742" />
                                                                                                                                            <Key frame="24" value="41.0478" />
                                                                                                                                            <Key frame="34" value="41.0478" />
                                                                                                                                            <Key frame="43" value="41.0478" />
                                                                                                                                            <Key frame="52" value="41.751" />
                                                                                                                                            <Key frame="59" value="41.8389" />
                                                                                                                                            <Key frame="66" value="41.3994" />
                                                                                                                                            <Key frame="72" value="-3.42537" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="0.231662" />
                                                                                                                                            <Key frame="24" value="0.0669354" />
                                                                                                                                            <Key frame="34" value="0.0665718" />
                                                                                                                                            <Key frame="43" value="0.0665718" />
                                                                                                                                            <Key frame="52" value="0.0731171" />
                                                                                                                                            <Key frame="59" value="0.0694809" />
                                                                                                                                            <Key frame="66" value="0.0607536" />
                                                                                                                                            <Key frame="72" value="0.3004" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-22.7616" />
                                                                                                                                            <Key frame="24" value="-24.2557" />
                                                                                                                                            <Key frame="34" value="-52.0295" />
                                                                                                                                            <Key frame="43" value="-33.5722" />
                                                                                                                                            <Key frame="52" value="-30.9355" />
                                                                                                                                            <Key frame="59" value="-45.4376" />
                                                                                                                                            <Key frame="66" value="-44.5587" />
                                                                                                                                            <Key frame="72" value="-35.1543" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="7.90785" />
                                                                                                                                            <Key frame="24" value="14.6755" />
                                                                                                                                            <Key frame="34" value="21.7947" />
                                                                                                                                            <Key frame="43" value="32.957" />
                                                                                                                                            <Key frame="52" value="30.6718" />
                                                                                                                                            <Key frame="59" value="12.3024" />
                                                                                                                                            <Key frame="66" value="18.4549" />
                                                                                                                                            <Key frame="72" value="15.3786" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-43.8604" />
                                                                                                                                            <Key frame="24" value="-49.2218" />
                                                                                                                                            <Key frame="34" value="-78.226" />
                                                                                                                                            <Key frame="43" value="-94.5739" />
                                                                                                                                            <Key frame="52" value="-88.3336" />
                                                                                                                                            <Key frame="59" value="-92.2008" />
                                                                                                                                            <Key frame="66" value="-81.2144" />
                                                                                                                                            <Key frame="72" value="-90.8824" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="108.461" />
                                                                                                                                            <Key frame="24" value="44.3877" />
                                                                                                                                            <Key frame="34" value="65.4817" />
                                                                                                                                            <Key frame="43" value="65.6575" />
                                                                                                                                            <Key frame="52" value="59.5" />
                                                                                                                                            <Key frame="59" value="68.6458" />
                                                                                                                                            <Key frame="66" value="56.1652" />
                                                                                                                                            <Key frame="72" value="80.5991" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-41.8341" />
                                                                                                                                            <Key frame="24" value="19.1628" />
                                                                                                                                            <Key frame="34" value="26.1941" />
                                                                                                                                            <Key frame="43" value="44.2119" />
                                                                                                                                            <Key frame="52" value="40.8721" />
                                                                                                                                            <Key frame="59" value="53.4029" />
                                                                                                                                            <Key frame="66" value="53.4029" />
                                                                                                                                            <Key frame="72" value="48.6944" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-12.0436" />
                                                                                                                                            <Key frame="24" value="-29.0067" />
                                                                                                                                            <Key frame="34" value="-3.34229" />
                                                                                                                                            <Key frame="43" value="3.1617" />
                                                                                                                                            <Key frame="52" value="-10.8131" />
                                                                                                                                            <Key frame="59" value="-2.02391" />
                                                                                                                                            <Key frame="66" value="-2.72705" />
                                                                                                                                            <Key frame="72" value="-1.0571" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-10.4615" />
                                                                                                                                            <Key frame="24" value="-18" />
                                                                                                                                            <Key frame="34" value="15.0271" />
                                                                                                                                            <Key frame="43" value="-16.7897" />
                                                                                                                                            <Key frame="52" value="-30.325" />
                                                                                                                                            <Key frame="59" value="-13.3619" />
                                                                                                                                            <Key frame="66" value="-20.4812" />
                                                                                                                                            <Key frame="72" value="-15.9987" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-33.8359" />
                                                                                                                                            <Key frame="24" value="-49.8322" />
                                                                                                                                            <Key frame="34" value="-0.524946" />
                                                                                                                                            <Key frame="43" value="-35.5937" />
                                                                                                                                            <Key frame="52" value="-89.0319" />
                                                                                                                                            <Key frame="59" value="-91.3171" />
                                                                                                                                            <Key frame="66" value="-83.9342" />
                                                                                                                                            <Key frame="72" value="-90.5261" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="121.039" />
                                                                                                                                            <Key frame="24" value="121.039" />
                                                                                                                                            <Key frame="34" value="104.149" />
                                                                                                                                            <Key frame="43" value="113.554" />
                                                                                                                                            <Key frame="52" value="61.7" />
                                                                                                                                            <Key frame="59" value="66.3558" />
                                                                                                                                            <Key frame="66" value="62.3128" />
                                                                                                                                            <Key frame="72" value="80.067" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-68.1542" />
                                                                                                                                            <Key frame="24" value="-68.1542" />
                                                                                                                                            <Key frame="34" value="-68.1542" />
                                                                                                                                            <Key frame="43" value="-29.9735" />
                                                                                                                                            <Key frame="52" value="42.3614" />
                                                                                                                                            <Key frame="59" value="52.8695" />
                                                                                                                                            <Key frame="66" value="52.8205" />
                                                                                                                                            <Key frame="72" value="47.8986" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="13" value="-2.46337" />
                                                                                                                                            <Key frame="24" value="-4.57277" />
                                                                                                                                            <Key frame="34" value="-2.37548" />
                                                                                                                                            <Key frame="43" value="26.0135" />
                                                                                                                                            <Key frame="52" value="10.3688" />
                                                                                                                                            <Key frame="59" value="2.72224" />
                                                                                                                                            <Key frame="66" value="2.89802" />
                                                                                                                                            <Key frame="72" value="0.524946" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                    </ActuatorList>
                                                                                                                                </Timeline>
                                                                                                                            </Box>
                                                                                                                            <Box name="BellyToCrouch" id="12" tooltip="Crouch from lie down position (on the belly)." x="707" y="382">
                                                                                                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                                                <Timeline enable="1" fps="10" start_frame="0" end_frame="-1" size="300">
                                                                                                                                    <ActuatorList model="Nao">
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="10" />
                                                                                                                                            <Key frame="20" value="-13" />
                                                                                                                                            <Key frame="34" value="16.4" />
                                                                                                                                            <Key frame="45" value="17" />
                                                                                                                                            <Key frame="58" value="-28.4" />
                                                                                                                                            <Key frame="65" value="-17" />
                                                                                                                                            <Key frame="76" value="3" />
                                                                                                                                            <Key frame="89" value="-22.4" />
                                                                                                                                            <Key frame="100" value="-1" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-33.0497" />
                                                                                                                                            <Key frame="20" value="-31.3797" />
                                                                                                                                            <Key frame="34" value="6.15002" />
                                                                                                                                            <Key frame="45" value="29.5" />
                                                                                                                                            <Key frame="58" value="21.8" />
                                                                                                                                            <Key frame="65" value="21.2674" />
                                                                                                                                            <Key frame="76" value="-6" />
                                                                                                                                            <Key frame="89" value="-30.5887" />
                                                                                                                                            <Key frame="100" value="0.4" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-1.57965" />
                                                                                                                                            <Key frame="20" value="-86.6" />
                                                                                                                                            <Key frame="34" value="-70.0473" />
                                                                                                                                            <Key frame="45" value="-13.5329" />
                                                                                                                                            <Key frame="58" value="12.483" />
                                                                                                                                            <Key frame="65" value="25.7547" />
                                                                                                                                            <Key frame="76" value="52.3859" />
                                                                                                                                            <Key frame="89" value="55.0226" />
                                                                                                                                            <Key frame="100" value="77.5229" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="87.982" />
                                                                                                                                            <Key frame="20" value="11" />
                                                                                                                                            <Key frame="34" value="4.74856" />
                                                                                                                                            <Key frame="45" value="4.74856" />
                                                                                                                                            <Key frame="58" value="13.0104" />
                                                                                                                                            <Key frame="65" value="10.4615" />
                                                                                                                                            <Key frame="76" value="0.498473" />
                                                                                                                                            <Key frame="89" value="7.56109" />
                                                                                                                                            <Key frame="100" value="0.79343" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-119" />
                                                                                                                                            <Key frame="20" value="-89.4714" />
                                                                                                                                            <Key frame="34" value="-92.4597" />
                                                                                                                                            <Key frame="45" value="-96.5906" />
                                                                                                                                            <Key frame="58" value="-112.323" />
                                                                                                                                            <Key frame="65" value="-111.796" />
                                                                                                                                            <Key frame="76" value="-38.1426" />
                                                                                                                                            <Key frame="89" value="-22.6737" />
                                                                                                                                            <Key frame="100" value="-49.6564" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-6" />
                                                                                                                                            <Key frame="20" value="-21.8874" />
                                                                                                                                            <Key frame="34" value="-36.3896" />
                                                                                                                                            <Key frame="45" value="-89.2125" />
                                                                                                                                            <Key frame="58" value="-0.498473" />
                                                                                                                                            <Key frame="65" value="-0.498473" />
                                                                                                                                            <Key frame="76" value="-24.2605" />
                                                                                                                                            <Key frame="89" value="-37.2" />
                                                                                                                                            <Key frame="100" value="-47.8155" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-86.4831" />
                                                                                                                                            <Key frame="20" value="-86.4831" />
                                                                                                                                            <Key frame="34" value="-85.7799" />
                                                                                                                                            <Key frame="45" value="-81.8248" />
                                                                                                                                            <Key frame="58" value="-82.2643" />
                                                                                                                                            <Key frame="65" value="-82.5279" />
                                                                                                                                            <Key frame="76" value="-82.7037" />
                                                                                                                                            <Key frame="89" value="-82.5279" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0.0185718" />
                                                                                                                                            <Key frame="20" value="0.0127537" />
                                                                                                                                            <Key frame="34" value="0.0262082" />
                                                                                                                                            <Key frame="45" value="0.0469355" />
                                                                                                                                            <Key frame="58" value="0.0494809" />
                                                                                                                                            <Key frame="65" value="0.04839" />
                                                                                                                                            <Key frame="76" value="0.0472991" />
                                                                                                                                            <Key frame="89" value="0.04839" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="4.83164" />
                                                                                                                                            <Key frame="20" value="-86.6" />
                                                                                                                                            <Key frame="34" value="-71.6342" />
                                                                                                                                            <Key frame="45" value="4.12851" />
                                                                                                                                            <Key frame="58" value="73" />
                                                                                                                                            <Key frame="65" value="43.3" />
                                                                                                                                            <Key frame="76" value="43" />
                                                                                                                                            <Key frame="89" value="74" />
                                                                                                                                            <Key frame="100" value="86.9225" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-89.0319" />
                                                                                                                                            <Key frame="20" value="-0.964405" />
                                                                                                                                            <Key frame="34" value="-4.39218" />
                                                                                                                                            <Key frame="45" value="-4.04062" />
                                                                                                                                            <Key frame="58" value="-8.96255" />
                                                                                                                                            <Key frame="65" value="-53.8" />
                                                                                                                                            <Key frame="76" value="-38.8" />
                                                                                                                                            <Key frame="89" value="-48.5" />
                                                                                                                                            <Key frame="100" value="-4.83164" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="119" />
                                                                                                                                            <Key frame="20" value="90.5309" />
                                                                                                                                            <Key frame="34" value="91.9371" />
                                                                                                                                            <Key frame="45" value="102.396" />
                                                                                                                                            <Key frame="58" value="76.0287" />
                                                                                                                                            <Key frame="65" value="71.5" />
                                                                                                                                            <Key frame="76" value="55.7258" />
                                                                                                                                            <Key frame="89" value="55" />
                                                                                                                                            <Key frame="100" value="51.6827" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0.5" />
                                                                                                                                            <Key frame="20" value="20.2127" />
                                                                                                                                            <Key frame="34" value="36.5606" />
                                                                                                                                            <Key frame="45" value="48.7775" />
                                                                                                                                            <Key frame="58" value="88.8561" />
                                                                                                                                            <Key frame="65" value="42" />
                                                                                                                                            <Key frame="76" value="42.2" />
                                                                                                                                            <Key frame="89" value="66.1801" />
                                                                                                                                            <Key frame="100" value="63.016" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="88.8609" />
                                                                                                                                            <Key frame="20" value="88.8609" />
                                                                                                                                            <Key frame="34" value="86.9273" />
                                                                                                                                            <Key frame="45" value="82.9722" />
                                                                                                                                            <Key frame="58" value="80.5112" />
                                                                                                                                            <Key frame="65" value="80.687" />
                                                                                                                                            <Key frame="76" value="80.687" />
                                                                                                                                            <Key frame="89" value="31.2" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0.0585718" />
                                                                                                                                            <Key frame="20" value="0.0196627" />
                                                                                                                                            <Key frame="34" value="0.0407536" />
                                                                                                                                            <Key frame="45" value="0.0545718" />
                                                                                                                                            <Key frame="58" value="0.0574809" />
                                                                                                                                            <Key frame="65" value="0.0574809" />
                                                                                                                                            <Key frame="76" value="0.0549355" />
                                                                                                                                            <Key frame="89" value="0.0574809" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-1.93121" />
                                                                                                                                            <Key frame="20" value="2" />
                                                                                                                                            <Key frame="34" value="-24.9588" />
                                                                                                                                            <Key frame="45" value="-44.6466" />
                                                                                                                                            <Key frame="58" value="-59.6761" />
                                                                                                                                            <Key frame="65" value="-65.621" />
                                                                                                                                            <Key frame="76" value="-65.621" />
                                                                                                                                            <Key frame="89" value="-32.5175" />
                                                                                                                                            <Key frame="100" value="0" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-1.8" />
                                                                                                                                            <Key frame="20" value="-0.00240423" />
                                                                                                                                            <Key frame="34" value="-0.090296" />
                                                                                                                                            <Key frame="45" value="-17.8444" />
                                                                                                                                            <Key frame="58" value="-14.5924" />
                                                                                                                                            <Key frame="65" value="-18.3718" />
                                                                                                                                            <Key frame="76" value="-13.0104" />
                                                                                                                                            <Key frame="89" value="4.30429" />
                                                                                                                                            <Key frame="100" value="-0.6" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="4.39218" />
                                                                                                                                            <Key frame="20" value="-0.00240423" />
                                                                                                                                            <Key frame="34" value="-90.3551" />
                                                                                                                                            <Key frame="45" value="-95.1891" />
                                                                                                                                            <Key frame="58" value="-68.7337" />
                                                                                                                                            <Key frame="65" value="-91.5856" />
                                                                                                                                            <Key frame="76" value="-18.4597" />
                                                                                                                                            <Key frame="89" value="-40.6963" />
                                                                                                                                            <Key frame="100" value="-60" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-4.48007" />
                                                                                                                                            <Key frame="20" value="114" />
                                                                                                                                            <Key frame="34" value="119.535" />
                                                                                                                                            <Key frame="45" value="99.8474" />
                                                                                                                                            <Key frame="58" value="121.478" />
                                                                                                                                            <Key frame="65" value="121.478" />
                                                                                                                                            <Key frame="76" value="121.478" />
                                                                                                                                            <Key frame="89" value="121.478" />
                                                                                                                                            <Key frame="100" value="120" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="53.2648" />
                                                                                                                                            <Key frame="20" value="-59" />
                                                                                                                                            <Key frame="34" value="-65.2133" />
                                                                                                                                            <Key frame="45" value="-67.9785" />
                                                                                                                                            <Key frame="58" value="-67.9785" />
                                                                                                                                            <Key frame="65" value="-33.748" />
                                                                                                                                            <Key frame="76" value="-67.9785" />
                                                                                                                                            <Key frame="89" value="-67.9785" />
                                                                                                                                            <Key frame="100" value="-60" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-10.8" />
                                                                                                                                            <Key frame="20" value="-0.00240423" />
                                                                                                                                            <Key frame="34" value="-0.353971" />
                                                                                                                                            <Key frame="45" value="0.261271" />
                                                                                                                                            <Key frame="58" value="5.62267" />
                                                                                                                                            <Key frame="65" value="0.788621" />
                                                                                                                                            <Key frame="76" value="5.44688" />
                                                                                                                                            <Key frame="89" value="-2.02391" />
                                                                                                                                            <Key frame="100" value="0" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-3.60596" />
                                                                                                                                            <Key frame="20" value="-0.00240423" />
                                                                                                                                            <Key frame="34" value="-0.090296" />
                                                                                                                                            <Key frame="45" value="21.619" />
                                                                                                                                            <Key frame="58" value="17.0486" />
                                                                                                                                            <Key frame="65" value="17.0486" />
                                                                                                                                            <Key frame="76" value="-11.1647" />
                                                                                                                                            <Key frame="89" value="-7.29742" />
                                                                                                                                            <Key frame="100" value="0.6" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="3.51807" />
                                                                                                                                            <Key frame="20" value="0.00240423" />
                                                                                                                                            <Key frame="34" value="-89.9108" />
                                                                                                                                            <Key frame="45" value="-73.3872" />
                                                                                                                                            <Key frame="58" value="-59.4124" />
                                                                                                                                            <Key frame="65" value="-66.4437" />
                                                                                                                                            <Key frame="76" value="-67.7621" />
                                                                                                                                            <Key frame="89" value="-72.7719" />
                                                                                                                                            <Key frame="100" value="-60" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="6.9" />
                                                                                                                                            <Key frame="20" value="114" />
                                                                                                                                            <Key frame="34" value="121.039" />
                                                                                                                                            <Key frame="45" value="16.1697" />
                                                                                                                                            <Key frame="58" value="23.201" />
                                                                                                                                            <Key frame="65" value="20.4764" />
                                                                                                                                            <Key frame="76" value="41.2188" />
                                                                                                                                            <Key frame="89" value="115.399" />
                                                                                                                                            <Key frame="100" value="120" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="52.8205" />
                                                                                                                                            <Key frame="20" value="-59" />
                                                                                                                                            <Key frame="34" value="-65.9212" />
                                                                                                                                            <Key frame="45" value="12.3903" />
                                                                                                                                            <Key frame="58" value="40.6915" />
                                                                                                                                            <Key frame="65" value="52.8695" />
                                                                                                                                            <Key frame="76" value="47.2833" />
                                                                                                                                            <Key frame="89" value="-28.743" />
                                                                                                                                            <Key frame="100" value="-60" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0.0854875" />
                                                                                                                                            <Key frame="20" value="-0.00240423" />
                                                                                                                                            <Key frame="34" value="0.0854875" />
                                                                                                                                            <Key frame="45" value="25.9257" />
                                                                                                                                            <Key frame="58" value="17.2244" />
                                                                                                                                            <Key frame="65" value="6.76526" />
                                                                                                                                            <Key frame="76" value="2.37067" />
                                                                                                                                            <Key frame="89" value="6.94104" />
                                                                                                                                            <Key frame="100" value="0" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                    </ActuatorList>
                                                                                                                                </Timeline>
                                                                                                                            </Box>
                                                                                                                            <Box name="BackToSitDown" id="14" tooltip="Sit down from lie down position (on the back)." x="923" y="91">
                                                                                                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                                                <Timeline enable="1" fps="10" start_frame="0" end_frame="-1" size="300" resources_acquisition="1">
                                                                                                                                    <BehaviorLayer name="behavior_layer1">
                                                                                                                                        <BehaviorKeyframe name="keyframe10" index="10">
                                                                                                                                            <Diagram>
                                                                                                                                                <Box name="Disable Anti-Collision" id="2" tooltip="Disable the collision protection on some specific part of NAO&apos;s body.&#x0A;&#x0A;Note: When this box is unloaded, the collision protection state will be reset to&#x0A;its previous state (enabled or disabled)." x="129" y="64">
                                                                                                                                                    <bitmap>media/images/box/sensors/anti_collision.png</bitmap>
                                                                                                                                                    <script language="4">
                                                                                                                                                        <content>
                                                                                                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy( "ALMotion" )
        
    def onLoad(self):
        self.collisionLArmState = self.motion.getCollisionProtectionEnabled("LArm")
        self.collisionRArmState = self.motion.getCollisionProtectionEnabled("RArm")
        
    def onUnload(self):
        self.motion.setCollisionProtectionEnabled("LArm", self.collisionLArmState)
        self.motion.setCollisionProtectionEnabled("RArm", self.collisionRArmState)

    def onInput_onSet(self):
        # enable/disable collision protection
        result = self.motion.setCollisionProtectionEnabled( self.getParameter("Body part"), False )
        if( result ):
            self.success()
        else:
            self.logger.warning( "Disabling collision protection failed. Deactivation succeeds only if the current state of the chain is not in collision. If you want to deactivate collision of both arms, they need to be off collision." )
            self.failure()]]>
</content>
                                                                                                                                                    </script>
                                                                                                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                                    <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="The anti-collision feature is enabled or disabled when this input is stimulated." id="2" />
                                                                                                                                                    <Output name="success" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the collision protection has been successfully enabled or disabled.&#x0A;&#x0A;Note: The only case where there is a failure is when you try to disable the&#x0A;anti-collision while it is currently in collision with some part of his body." id="3" />
                                                                                                                                                    <Output name="failure" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the collision protection has failed to be enabled or disabled.&#x0A;&#x0A;Note: The only case where there is a failure is when you try to disable the&#x0A;anti-collision while it is currently in collision with some part of his body." id="4" />
                                                                                                                                                    <Parameter name="Body part" inherits_from_parent="0" content_type="3" value="Arms" default_value="Arms" custom_choice="0" tooltip="Body part which avoids the collision." id="5">
                                                                                                                                                        <Choice value="Arms" />
                                                                                                                                                        <Choice value="LArm" />
                                                                                                                                                        <Choice value="RArm" />
                                                                                                                                                    </Parameter>
                                                                                                                                                </Box>
                                                                                                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                                                                            </Diagram>
                                                                                                                                        </BehaviorKeyframe>
                                                                                                                                    </BehaviorLayer>
                                                                                                                                    <ActuatorList model="Nao">
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-1.40867" />
                                                                                                                                            <Key frame="20" value="-2.73208e-05" />
                                                                                                                                            <Key frame="28" value="2.37067" />
                                                                                                                                            <Key frame="36" value="3.86374e-05" />
                                                                                                                                            <Key frame="44" value="-0.353971" />
                                                                                                                                            <Key frame="50" value="0.788621" />
                                                                                                                                            <Key frame="56" value="1.40386" />
                                                                                                                                            <Key frame="62" value="-1.32078" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="3.60116" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="28" value="29.5016" />
                                                                                                                                            <Key frame="36" value="-38.5028" />
                                                                                                                                            <Key frame="44" value="-1.23289" />
                                                                                                                                            <Key frame="50" value="11.1598" />
                                                                                                                                            <Key frame="56" value="4.2164" />
                                                                                                                                            <Key frame="62" value="-2.02391" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="119.496" />
                                                                                                                                            <Key frame="20" value="120" />
                                                                                                                                            <Key frame="26" value="111.889" />
                                                                                                                                            <Key frame="36" value="119.496" />
                                                                                                                                            <Key frame="44" value="119.5" />
                                                                                                                                            <Key frame="50" value="109.955" />
                                                                                                                                            <Key frame="56" value="59.4172" />
                                                                                                                                            <Key frame="59" value="41.8" />
                                                                                                                                            <Key frame="62" value="53.0011" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="61.5266" />
                                                                                                                                            <Key frame="20" value="21" />
                                                                                                                                            <Key frame="26" value="20" />
                                                                                                                                            <Key frame="36" value="20" />
                                                                                                                                            <Key frame="44" value="23.5" />
                                                                                                                                            <Key frame="50" value="51.507" />
                                                                                                                                            <Key frame="56" value="42.4541" />
                                                                                                                                            <Key frame="62" value="13.8893" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-43.8556" />
                                                                                                                                            <Key frame="20" value="9" />
                                                                                                                                            <Key frame="26" value="14.7682" />
                                                                                                                                            <Key frame="36" value="5" />
                                                                                                                                            <Key frame="44" value="3.78175" />
                                                                                                                                            <Key frame="50" value="-90.3503" />
                                                                                                                                            <Key frame="56" value="-61.1702" />
                                                                                                                                            <Key frame="62" value="-30.0566" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-40.6963" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="26" value="-88.5" />
                                                                                                                                            <Key frame="36" value="-89.5017" />
                                                                                                                                            <Key frame="44" value="-40.9" />
                                                                                                                                            <Key frame="46" value="-60.4" />
                                                                                                                                            <Key frame="50" value="-54.8468" />
                                                                                                                                            <Key frame="56" value="-65.6575" />
                                                                                                                                            <Key frame="62" value="-72.7768" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-66.0043" />
                                                                                                                                            <Key frame="26" value="-98.8758" />
                                                                                                                                            <Key frame="44" value="-63.6312" />
                                                                                                                                            <Key frame="50" value="-14.1482" />
                                                                                                                                            <Key frame="62" value="3.2544" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="26" value="0.0182082" />
                                                                                                                                            <Key frame="44" value="0.00293558" />
                                                                                                                                            <Key frame="50" value="0.126571" />
                                                                                                                                            <Key frame="62" value="0.2996" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="119.496" />
                                                                                                                                            <Key frame="20" value="120" />
                                                                                                                                            <Key frame="26" value="116.806" />
                                                                                                                                            <Key frame="36" value="119.496" />
                                                                                                                                            <Key frame="44" value="119.5" />
                                                                                                                                            <Key frame="50" value="74.9692" />
                                                                                                                                            <Key frame="56" value="51.7658" />
                                                                                                                                            <Key frame="59" value="40.3" />
                                                                                                                                            <Key frame="62" value="51.6779" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-56.1604" />
                                                                                                                                            <Key frame="20" value="-21" />
                                                                                                                                            <Key frame="26" value="-20" />
                                                                                                                                            <Key frame="36" value="-20" />
                                                                                                                                            <Key frame="44" value="-23" />
                                                                                                                                            <Key frame="50" value="-67.1469" />
                                                                                                                                            <Key frame="56" value="-22.7616" />
                                                                                                                                            <Key frame="62" value="-12.3903" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="43.5967" />
                                                                                                                                            <Key frame="20" value="-9" />
                                                                                                                                            <Key frame="26" value="-7.02893" />
                                                                                                                                            <Key frame="36" value="-5" />
                                                                                                                                            <Key frame="44" value="-3.42537" />
                                                                                                                                            <Key frame="50" value="54.6711" />
                                                                                                                                            <Key frame="56" value="55.1984" />
                                                                                                                                            <Key frame="62" value="25.1394" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="35.7695" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="26" value="88.5" />
                                                                                                                                            <Key frame="36" value="89.5017" />
                                                                                                                                            <Key frame="44" value="50.1" />
                                                                                                                                            <Key frame="46" value="59.3" />
                                                                                                                                            <Key frame="50" value="38.9336" />
                                                                                                                                            <Key frame="56" value="64.3343" />
                                                                                                                                            <Key frame="62" value="70.7504" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="40.4326" />
                                                                                                                                            <Key frame="26" value="102.484" />
                                                                                                                                            <Key frame="44" value="41.2236" />
                                                                                                                                            <Key frame="50" value="2.72705" />
                                                                                                                                            <Key frame="62" value="-3.42537" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0.0502082" />
                                                                                                                                            <Key frame="26" value="0.0763898" />
                                                                                                                                            <Key frame="44" value="0.0905716" />
                                                                                                                                            <Key frame="50" value="0.0127537" />
                                                                                                                                            <Key frame="62" value="0.3004" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-26.9804" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="31" value="0.441863" />
                                                                                                                                            <Key frame="36" value="-2.73208e-05" />
                                                                                                                                            <Key frame="44" value="-37.5274" />
                                                                                                                                            <Key frame="50" value="-40.34" />
                                                                                                                                            <Key frame="62" value="-35.418" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="8.52309" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="31" value="1.31597" />
                                                                                                                                            <Key frame="36" value="0" />
                                                                                                                                            <Key frame="44" value="-3.51807" />
                                                                                                                                            <Key frame="50" value="6.98985" />
                                                                                                                                            <Key frame="62" value="15.3786" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="10.6325" />
                                                                                                                                            <Key frame="20" value="-10" />
                                                                                                                                            <Key frame="31" value="16.1697" />
                                                                                                                                            <Key frame="36" value="-10" />
                                                                                                                                            <Key frame="44" value="-66.7122" />
                                                                                                                                            <Key frame="50" value="-90" />
                                                                                                                                            <Key frame="62" value="-91.234" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="10.9889" />
                                                                                                                                            <Key frame="20" value="96" />
                                                                                                                                            <Key frame="31" value="116.107" />
                                                                                                                                            <Key frame="36" value="96" />
                                                                                                                                            <Key frame="44" value="62.7571" />
                                                                                                                                            <Key frame="50" value="78.8859" />
                                                                                                                                            <Key frame="62" value="80.687" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="26.7215" />
                                                                                                                                            <Key frame="20" value="14" />
                                                                                                                                            <Key frame="31" value="-21.4432" />
                                                                                                                                            <Key frame="36" value="14" />
                                                                                                                                            <Key frame="44" value="41.1357" />
                                                                                                                                            <Key frame="50" value="44.1094" />
                                                                                                                                            <Key frame="62" value="48.6944" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-9.5826" />
                                                                                                                                            <Key frame="20" value="-4.94951e-06" />
                                                                                                                                            <Key frame="31" value="2.28278" />
                                                                                                                                            <Key frame="36" value="-4.94951e-06" />
                                                                                                                                            <Key frame="44" value="8.25942" />
                                                                                                                                            <Key frame="50" value="6.87076" />
                                                                                                                                            <Key frame="62" value="-1.0571" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-2.55126" />
                                                                                                                                            <Key frame="20" value="-8.991e-06" />
                                                                                                                                            <Key frame="31" value="-3.34229" />
                                                                                                                                            <Key frame="36" value="-8.991e-06" />
                                                                                                                                            <Key frame="44" value="3.68905" />
                                                                                                                                            <Key frame="50" value="-8.06912" />
                                                                                                                                            <Key frame="62" value="-15.9987" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="14.3288" />
                                                                                                                                            <Key frame="20" value="-10" />
                                                                                                                                            <Key frame="31" value="21.448" />
                                                                                                                                            <Key frame="36" value="-10" />
                                                                                                                                            <Key frame="44" value="-67.4984" />
                                                                                                                                            <Key frame="50" value="-90" />
                                                                                                                                            <Key frame="62" value="-90.5261" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="5.2711" />
                                                                                                                                            <Key frame="20" value="96" />
                                                                                                                                            <Key frame="31" value="115.751" />
                                                                                                                                            <Key frame="36" value="96" />
                                                                                                                                            <Key frame="44" value="61.6976" />
                                                                                                                                            <Key frame="50" value="80.3062" />
                                                                                                                                            <Key frame="62" value="79.9791" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="47.2833" />
                                                                                                                                            <Key frame="20" value="14" />
                                                                                                                                            <Key frame="31" value="-26.0184" />
                                                                                                                                            <Key frame="36" value="14" />
                                                                                                                                            <Key frame="44" value="38.8457" />
                                                                                                                                            <Key frame="50" value="44.4668" />
                                                                                                                                            <Key frame="62" value="47.8986" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="1.93121" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="31" value="1.93121" />
                                                                                                                                            <Key frame="36" value="0" />
                                                                                                                                            <Key frame="44" value="-9.75839" />
                                                                                                                                            <Key frame="50" value="-5.20441" />
                                                                                                                                            <Key frame="62" value="0.524946" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                    </ActuatorList>
                                                                                                                                </Timeline>
                                                                                                                            </Box>
                                                                                                                            <Box name="SideToBelly" id="6" tooltip="Lie down on the back or the belly from an other lie down position (on the side)." x="513" y="538">
                                                                                                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                                                <Timeline enable="1" fps="10" start_frame="0" end_frame="-1" size="300">
                                                                                                                                    <ActuatorList model="Nao">
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="41.3067" />
                                                                                                                                            <Key frame="10" value="41.3067" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="8.52309" />
                                                                                                                                            <Key frame="10" value="8.52309" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="113.383" />
                                                                                                                                            <Key frame="10" value="113.383" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="44.6514" />
                                                                                                                                            <Key frame="10" value="44.6514" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-52.9084" />
                                                                                                                                            <Key frame="10" value="-52.9084" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-19.5144" />
                                                                                                                                            <Key frame="10" value="-19.5144" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-37" />
                                                                                                                                            <Key frame="10" value="-37" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="0.146571" />
                                                                                                                                            <Key frame="10" value="0.146571" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="108.72" />
                                                                                                                                            <Key frame="10" value="108.72" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-45.965" />
                                                                                                                                            <Key frame="10" value="-45.965" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="56.8684" />
                                                                                                                                            <Key frame="10" value="56.8684" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="26.8046" />
                                                                                                                                            <Key frame="10" value="26.8046" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="38.8505" />
                                                                                                                                            <Key frame="10" value="38.8505" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="0.200389" />
                                                                                                                                            <Key frame="10" value="0.200389" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-65.5648" />
                                                                                                                                            <Key frame="10" value="-65.5648" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="1.75543" />
                                                                                                                                            <Key frame="10" value="1.75543" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="23.8163" />
                                                                                                                                            <Key frame="10" value="23.8163" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-5.2711" />
                                                                                                                                            <Key frame="10" value="-5.2711" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="29.9735" />
                                                                                                                                            <Key frame="10" value="29.9735" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="3.86483" />
                                                                                                                                            <Key frame="10" value="3.86483" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-14.4166" />
                                                                                                                                            <Key frame="10" value="-14.4166" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="2.02391" />
                                                                                                                                            <Key frame="10" value="2.02391" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-5.27591" />
                                                                                                                                            <Key frame="10" value="-5.27591" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="20.3885" />
                                                                                                                                            <Key frame="10" value="20.3885" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-19.6902" />
                                                                                                                                            <Key frame="10" value="-19.6902" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                    </ActuatorList>
                                                                                                                                </Timeline>
                                                                                                                            </Box>
                                                                                                                            <Box name="Switch Case" id="9" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="261" y="101">
                                                                                                                                <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Back")):
			self.output_1(p)
		elif(p == self.typeConversion("Stand")):
			self.output_2(p)
		elif(p == self.typeConversion("Crouch")):
			self.output_3(p)
		elif(p == self.typeConversion("Knee")):
			self.output_4(p)
		elif(p == self.typeConversion("Frog")):
			self.output_5(p)
		elif(p == self.typeConversion("Belly")):
			self.output_6(p)
		elif(p == self.typeConversion("Left")):
			self.output_7(p)
		elif(p == self.typeConversion("Right")):
			self.output_8(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
</content>
                                                                                                                                </script>
                                                                                                                                <pluginContent>
                                                                                                                                    <keywords>
                                                                                                                                        <keyword>&quot;Back&quot;</keyword>
                                                                                                                                        <keyword>&quot;Stand&quot;</keyword>
                                                                                                                                        <keyword>&quot;Crouch&quot;</keyword>
                                                                                                                                        <keyword>&quot;Knee&quot;</keyword>
                                                                                                                                        <keyword>&quot;Frog&quot;</keyword>
                                                                                                                                        <keyword>&quot;Belly&quot;</keyword>
                                                                                                                                        <keyword>&quot;Left&quot;</keyword>
                                                                                                                                        <keyword>&quot;Right&quot;</keyword>
                                                                                                                                        <keyword></keyword>
                                                                                                                                    </keywords>
                                                                                                                                </pluginContent>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                                                                                                                <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                                                                                                                <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                                                                                                                <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                                                                                                                <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                                                                                                                <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                                                                                                                                <Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="8" />
                                                                                                                                <Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="9" />
                                                                                                                                <Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="10" />
                                                                                                                                <Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="11" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Switch Case" id="1" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="795" y="538">
                                                                                                                                <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Belly")):
			self.output_1(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
</content>
                                                                                                                                </script>
                                                                                                                                <pluginContent>
                                                                                                                                    <keywords>
                                                                                                                                        <keyword>&quot;Belly&quot;</keyword>
                                                                                                                                        <keyword></keyword>
                                                                                                                                    </keywords>
                                                                                                                                </pluginContent>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                                                                                                                <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                                                                                                                <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Switch Case" id="4" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="977" y="378">
                                                                                                                                <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Crouch")):
			self.output_1(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
</content>
                                                                                                                                </script>
                                                                                                                                <pluginContent>
                                                                                                                                    <keywords>
                                                                                                                                        <keyword>&quot;Crouch&quot;</keyword>
                                                                                                                                        <keyword></keyword>
                                                                                                                                    </keywords>
                                                                                                                                </pluginContent>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                                                                                                                <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                                                                                                                <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Get Robot Pose" id="5" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="656" y="542">
                                                                                                                                <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPose")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                                                                                                                <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Get Robot Pose" id="2" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="845" y="378">
                                                                                                                                <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPose")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                                                                                                                <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Get Robot Pose" id="3" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="104" y="49">
                                                                                                                                <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPose")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                                                                                                                <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Relax Motors" id="7" tooltip="Relax motors for a while for a better electric current consumption.&#x0A;&#x0A;!!Warning!! This box must be applied only after a Sit Down. In other positions NAO&#x0A;could fall." x="1087" y="131">
                                                                                                                                <bitmap>media/images/box/movement/stiffness.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        # WARNING: This should only be called when sitting and its
        # behavior may change in future version. The aim of the method
        # is to reduce battery usage when motors are stiff while sitting.
        try:
            ALMotion._relaxMotorsWhenSitting()
        except:
            pass
        self.onStopped()]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                                                                            </Box>
                                                                                                                            <Link inputowner="11" indexofinput="2" outputowner="9" indexofoutput="6" />
                                                                                                                            <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="8" />
                                                                                                                            <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="9" />
                                                                                                                            <Link inputowner="6" indexofinput="2" outputowner="9" indexofoutput="11" />
                                                                                                                            <Link inputowner="14" indexofinput="2" outputowner="9" indexofoutput="4" />
                                                                                                                            <Link inputowner="11" indexofinput="2" outputowner="9" indexofoutput="5" />
                                                                                                                            <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="7" />
                                                                                                                            <Link inputowner="6" indexofinput="2" outputowner="9" indexofoutput="10" />
                                                                                                                            <Link inputowner="0" indexofinput="4" outputowner="9" indexofoutput="3" />
                                                                                                                            <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="3" />
                                                                                                                            <Link inputowner="12" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                                                            <Link inputowner="11" indexofinput="2" outputowner="4" indexofoutput="4" />
                                                                                                                            <Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="3" />
                                                                                                                            <Link inputowner="5" indexofinput="2" outputowner="6" indexofoutput="4" />
                                                                                                                            <Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                                                            <Link inputowner="2" indexofinput="2" outputowner="12" indexofoutput="4" />
                                                                                                                            <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                                                            <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                                            <Link inputowner="9" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                                                                            <Link inputowner="7" indexofinput="2" outputowner="14" indexofoutput="4" />
                                                                                                                            <Link inputowner="7" indexofinput="2" outputowner="11" indexofoutput="4" />
                                                                                                                            <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="3" />
                                                                                                                        </Diagram>
                                                                                                                    </BehaviorKeyframe>
                                                                                                                </BehaviorLayer>
                                                                                                            </Timeline>
                                                                                                        </Box>
                                                                                                        <Box name="Side" id="6" tooltip='Stimulates the rightOutput or the leftOutput output depending on the side&#x0A;parameter. If it is set to &quot;Random&quot; then the side is chosen randomly.' x="451" y="468">
                                                                                                            <bitmap>media/images/box/movement/move_arm.png</bitmap>
                                                                                                            <bitmap>media/images/box/movement/move_leftarm.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import random

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        side = self.getParameter("Side")
        if( side == "Random" ):
            side = random.choice( ["Left", "Right"] )
        if( side == "Left" ):
            self.leftOutput()
        else:
            self.rightOutput()]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip='When this input is stimulated the output corresponding to the side set in&#x0A;parameters is stimulated. If the side parameter is set to &quot;Random&quot; then the&#x0A;side is chosen randomly.' id="2" />
                                                                                                            <Output name="rightOutput" type="1" type_size="1" nature="2" inner="0" tooltip="The output corresponding to the right." id="3" />
                                                                                                            <Output name="leftOutput" type="1" type_size="1" nature="2" inner="0" tooltip="The output corresponding to the left." id="4" />
                                                                                                            <Parameter name="Side" inherits_from_parent="1" content_type="3" value="Random" default_value="Random" custom_choice="0" tooltip='Side chosen. If set to &quot;Random&quot; the side is chosen randomly.' id="5">
                                                                                                                <Choice value="Left" />
                                                                                                                <Choice value="Random" />
                                                                                                                <Choice value="Right" />
                                                                                                            </Parameter>
                                                                                                        </Box>
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="9" indexofoutput="3" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="5" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="6" />
                                                                                                        <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="7" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                                        <Link inputowner="9" indexofinput="2" outputowner="7" indexofoutput="3" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="4" indexofoutput="3" />
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="13" indexofoutput="4" />
                                                                                                        <Link inputowner="13" indexofinput="2" outputowner="6" indexofoutput="3" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                                                        <Link inputowner="3" indexofinput="2" outputowner="6" indexofoutput="4" />
                                                                                                        <Link inputowner="6" indexofinput="2" outputowner="9" indexofoutput="4" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                        </Timeline>
                                                                                        <Resource name="All motors" type="Lock" timeout="0" />
                                                                                    </Box>
                                                                                    <Box name="GotoFailure" id="1" tooltip="Jump to the frame name set in parameters and stop the parent timeline.&#x0A;&#x0A;!!Warning!! This box does not stop the behavior! It is only the timeline which will&#x0A;stop playing, the keyframes and boxes will still be running." x="255" y="105">
                                                                                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onInput_onGo(self):
        try:
            self.getParentTimeline().goTo(self.getParameter("Frame name"))
        except: # if NAOqi < 1.14
            self.gotoAndStopParent(self.getParameter("Frame name"))]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                                        <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="Failure" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="4" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="5" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                            <BehaviorKeyframe name="Failure" index="46">
                                                                                <Diagram>
                                                                                    <Box name="Say" id="1" tooltip="Say some text. Note that you must open the box to enter the text." x="203" y="80">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                                        <Timeline enable="0">
                                                                                            <BehaviorLayer name="behavior_layer1">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1">
                                                                                                    <Diagram>
                                                                                                        <Box name="Say Text" id="2" tooltip="Say the text received on its input." x="422" y="65">
                                                                                                            <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []
        
    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                                            <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                                            <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                                        </Box>
                                                                                                        <Box name="Localized Text" id="5" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Could you please help me? ",
			"French" : " Pourrais tu m\'aider? ",
			"German" : " Hallo ",
			"Italian" : " Ciao ",
			"Japanese" : " 手伝ってもらえませんか？ ",
			"Korean" : " 안녕하세요  ",
			"Portuguese" : " Olá ",
			"Brazilian" : "  ",
			"Spanish" : " Hola ",
			"Arabic" : "  ",
			"Polish" : "  ",
			"Czech" : "  ",
			"Dutch" : "  ",
			"Danish" : "  ",
			"Finnish" : "  ",
			"Swedish" : "  ",
			"Russian" : "  ",
			"Turkish" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <chinese>你好</chinese>
                                                                                                                <english>Could you please help me?</english>
                                                                                                                <french>Pourrais tu m&apos;aider?</french>
                                                                                                                <german>Hallo</german>
                                                                                                                <italian>Ciao</italian>
                                                                                                                <japanese>手伝ってもらえませんか？</japanese>
                                                                                                                <korean>안녕하세요 </korean>
                                                                                                                <portuguese>Olá</portuguese>
                                                                                                                <brazilian></brazilian>
                                                                                                                <spanish>Hola</spanish>
                                                                                                                <arabic></arabic>
                                                                                                                <polish></polish>
                                                                                                                <czech></czech>
                                                                                                                <dutch></dutch>
                                                                                                                <danish></danish>
                                                                                                                <finnish></finnish>
                                                                                                                <swedish></swedish>
                                                                                                                <russian></russian>
                                                                                                                <turkish></turkish>
                                                                                                                <language>2</language>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                                        <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                    <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="4" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                    <Resource name="All motors" type="Lock" timeout="5" />
                                                                </Box>
                                                                <Box name="StandUp" id="9" tooltip="Last modification:&#x0A;02/10/2013&#x0A;&#x0A;Choose between original timeline movement or ALRobotPosture movement&#x0A;================&#x0A;16/12/2011&#x0A;&#x0A;Initial draft&#x0A;================&#x0A;Nao stands up" x="884" y="393">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="" id="5" />
                                                                    <Timeline enable="1" fps="10" start_frame="0" end_frame="-1" size="300">
                                                                        <BehaviorLayer name="main">
                                                                            <BehaviorKeyframe name="init" index="1">
                                                                                <Diagram>
                                                                                    <Box name="CheckRobotPosture" id="2" tooltip="Enter tooltip here" x="154" y="39">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onInput_onStart(self):
        try:
            TestProxy = ALProxy("ALRobotPosture")
            if(TestProxy.ping()):
                self.useRobotPosture() #~ activate output of the box
            else:
                raise
        except:
            self.useTimeline() #~ activate output of the box]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Output name="useRobotPosture" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                                        <Output name="useTimeline" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                                    </Box>
                                                                                    <Box name="Goto Timeline" id="3" tooltip="Jump to the frame name set in parameters." x="330" y="137">
                                                                                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onInput_onGo(self):
        try:
            self.getParentTimeline().goTo(self.getParameter("Frame name"))
        except: # if NAOqi < 1.14
            self.gotoAndStopParent(self.getParameter("Frame name"))]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoTimeline when a signal is received on this input." id="2" />
                                                                                        <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="Timeline" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                                                                    </Box>
                                                                                    <Box name="Goto RobotPosture" id="4" tooltip="Jump to the frame name set in parameters." x="324" y="30">
                                                                                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onInput_onGo(self):
        try:
            self.getParentTimeline().goTo(self.getParameter("Frame name"))
        except: # if NAOqi < 1.14
            self.gotoAndStopParent(self.getParameter("Frame name"))]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoTimeline when a signal is received on this input." id="2" />
                                                                                        <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="RobotPosture" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                                                                    </Box>
                                                                                    <Box name="Stop" id="5" tooltip="Stop the parent timeline at the current frame index.&#x0A;&#x0A;!!Warning!! This box does not stop the behavior! It is only the timeline which will&#x0A;stop playing, the keyframes and boxes will still be running." x="164" y="149">
                                                                                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onInput_onStop(self):
        self.stopTimelineParent()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline stops when a signal is received on this input." id="2" />
                                                                                    </Box>
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                            <BehaviorKeyframe name="RobotPosture" index="16">
                                                                                <Diagram>
                                                                                    <Box name="Stand Up" id="1" tooltip="NAO tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="122" y="46">
                                                                                        <bitmap>media/images/box/movement/stand.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when NAO succeed in standing up." id="4" />
                                                                                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                                                                        <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                                                                                        <Timeline enable="0">
                                                                                            <BehaviorLayer name="StandUpBehavior">
                                                                                                <BehaviorKeyframe name="DetectRobotPose" index="1">
                                                                                                    <Diagram>
                                                                                                        <Box name="Goto Posture" id="2" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                                                                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.nTries = 0
        self.postureProxy = ALProxy("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureProxy.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureProxy.setMaxTryNumber(self.nTries)

        result = self.postureProxy.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                                                                                            <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                                                                                            <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                                                                                                <Choice value="Crouch" />
                                                                                                                <Choice value="LyingBack" />
                                                                                                                <Choice value="LyingBelly" />
                                                                                                                <Choice value="Sit" />
                                                                                                                <Choice value="SitRelax" />
                                                                                                                <Choice value="StandInit" />
                                                                                                                <Choice value="Stand" />
                                                                                                                <Choice value="StandZero" />
                                                                                                            </Parameter>
                                                                                                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                                                                                            <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                                                                                            <Resource name="All motors" type="Lock" timeout="0" />
                                                                                                            <Resource name="Stiffness" type="Lock" timeout="0" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                        </Timeline>
                                                                                        <Resource name="All motors" type="Lock" timeout="0" />
                                                                                    </Box>
                                                                                    <Box name="GotoFailure" id="3" tooltip="Jump to the frame name set in parameters and stop the parent timeline.&#x0A;&#x0A;!!Warning!! This box does not stop the behavior! It is only the timeline which will&#x0A;stop playing, the keyframes and boxes will still be running." x="312" y="93">
                                                                                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onInput_onGo(self):
        try:
            self.getParentTimeline().goTo(self.getParameter("Frame name"))
        except: # if NAOqi < 1.14
            self.gotoAndStopParent(self.getParameter("Frame name"))]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                                        <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="Failure" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                            <BehaviorKeyframe name="Timeline" index="35">
                                                                                <Diagram>
                                                                                    <Box name="Stand Up" id="2" tooltip="NAO tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="106" y="52">
                                                                                        <bitmap>media/images/box/movement/stand.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when NAO succeed in standing up." id="4" />
                                                                                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                                                                        <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="1" max="10" tooltip="The maximum number that the robot tries to stand up and fails before the failure&#x0A;output is stimulated." id="6" />
                                                                                        <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Random" default_value="Random" custom_choice="0" tooltip='Side of the arm used to stand up. If it is set to &quot;Random&quot; the side is chosen randomly.' id="7">
                                                                                            <Choice value="Left" />
                                                                                            <Choice value="Random" />
                                                                                            <Choice value="Right" />
                                                                                        </Parameter>
                                                                                        <Timeline enable="0">
                                                                                            <BehaviorLayer name="StandUpBehavior">
                                                                                                <BehaviorKeyframe name="DetectRobotPose" index="1">
                                                                                                    <Diagram>
                                                                                                        <Box name="Check Count" id="7" tooltip="Check number of tries. If the current try number is higher than the maximum&#x0A;number of tries set in parent box parameters, then the failed output is&#x0A;stimulated, else the tryAgain output is stimulated." x="863" y="179">
                                                                                                            <bitmap>media/images/box/box-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.nTries = 0

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.nTries += 1
        if (self.nTries > self.getParameter("Maximum of tries")):
            self.failed()
        else:
            self.tryAgain()

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Output name="failed" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent if the current try number is higher than the maximum number of tries&#x0A;set in parent box parameters." id="3" />
                                                                                                            <Output name="tryAgain" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent if the current try number is smaller than or equal to the maximum&#x0A;number of tries set in parent box parameters." id="4" />
                                                                                                        </Box>
                                                                                                        <Box name="Switch Case" id="10" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="444" y="86">
                                                                                                            <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Stand")):
			self.output_1(p)
		elif(p == self.typeConversion("Unknown")):
			self.output_2(p)
		elif(p == self.typeConversion("HeadBack")):
			self.output_3(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <keywords>
                                                                                                                    <keyword>&quot;Stand&quot;</keyword>
                                                                                                                    <keyword>&quot;Unknown&quot;</keyword>
                                                                                                                    <keyword>&quot;HeadBack&quot;</keyword>
                                                                                                                    <keyword></keyword>
                                                                                                                </keywords>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                                                                                            <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                                                                                            <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                                                                                            <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                                                                                            <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                                                                                        </Box>
                                                                                                        <Box name="Right Stand Motion" id="20" tooltip="The robot makes the right motion to stand up depending on its current position." x="562" y="346">
                                                                                                            <bitmap>media/images/box/movement/stand.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.count = 0
        pass

    def onInput_onStop(self):
        self.onUnload()
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent after a step to sit down is done." id="4" />
                                                                                                            <Timeline enable="0">
                                                                                                                <BehaviorLayer name="SitDownBehavior">
                                                                                                                    <BehaviorKeyframe name="DetectRobotPose" index="1">
                                                                                                                        <Diagram>
                                                                                                                            <Box name="Switch Case" id="9" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="230" y="73">
                                                                                                                                <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Left")):
			self.output_1(p)
		elif(p == self.typeConversion("Right")):
			self.output_2(p)
		elif(p == self.typeConversion("Back")):
			self.output_3(p)
		elif(p == self.typeConversion("Knee")):
			self.output_4(p)
		elif(p == self.typeConversion("Frog")):
			self.output_5(p)
		elif(p == self.typeConversion("Belly")):
			self.output_6(p)
		elif(p == self.typeConversion("Crouch")):
			self.output_7(p)
		elif(p == self.typeConversion("Sit")):
			self.output_8(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
</content>
                                                                                                                                </script>
                                                                                                                                <pluginContent>
                                                                                                                                    <keywords>
                                                                                                                                        <keyword>&quot;Left&quot;</keyword>
                                                                                                                                        <keyword>&quot;Right&quot;</keyword>
                                                                                                                                        <keyword>&quot;Back&quot;</keyword>
                                                                                                                                        <keyword>&quot;Knee&quot;</keyword>
                                                                                                                                        <keyword>&quot;Frog&quot;</keyword>
                                                                                                                                        <keyword>&quot;Belly&quot;</keyword>
                                                                                                                                        <keyword>&quot;Crouch&quot;</keyword>
                                                                                                                                        <keyword>&quot;Sit&quot;</keyword>
                                                                                                                                        <keyword></keyword>
                                                                                                                                    </keywords>
                                                                                                                                </pluginContent>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                                                                                                                <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                                                                                                                <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                                                                                                                <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                                                                                                                <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                                                                                                                <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                                                                                                                                <Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="8" />
                                                                                                                                <Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="9" />
                                                                                                                                <Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="10" />
                                                                                                                                <Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="11" />
                                                                                                                            </Box>
                                                                                                                            <Box name="SitToCrouch" id="12" tooltip="First motion to Stand up from a sitting position" x="689" y="627">
                                                                                                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                                                <Timeline enable="1" fps="25" start_frame="0" end_frame="180" size="300" resources_acquisition="1">
                                                                                                                                    <ActuatorList model="Nao">
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="0.0854875" />
                                                                                                                                            <Key frame="28" value="-16" />
                                                                                                                                            <Key frame="39" value="-19.9538" />
                                                                                                                                            <Key frame="55" value="-27" />
                                                                                                                                            <Key frame="75" value="-30" />
                                                                                                                                            <Key frame="94" value="-16.4382" />
                                                                                                                                            <Key frame="126" value="-0.538656" />
                                                                                                                                            <Key frame="180" value="-0.538656" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="21.2674" />
                                                                                                                                            <Key frame="28" value="21.1795" />
                                                                                                                                            <Key frame="39" value="13" />
                                                                                                                                            <Key frame="55" value="15.8" />
                                                                                                                                            <Key frame="75" value="9" />
                                                                                                                                            <Key frame="94" value="20.0369" />
                                                                                                                                            <Key frame="126" value="21.707" />
                                                                                                                                            <Key frame="180" value="21.707" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="28.4" />
                                                                                                                                            <Key frame="28" value="32.9" />
                                                                                                                                            <Key frame="39" value="35.9" />
                                                                                                                                            <Key frame="55" value="58.094" />
                                                                                                                                            <Key frame="64" value="37.3" />
                                                                                                                                            <Key frame="75" value="43.0645" />
                                                                                                                                            <Key frame="94" value="64.2" />
                                                                                                                                            <Key frame="109" value="67.2" />
                                                                                                                                            <Key frame="126" value="80.7" />
                                                                                                                                            <Key frame="180" value="61.2" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="13.9724" />
                                                                                                                                            <Key frame="21" value="28.3" />
                                                                                                                                            <Key frame="28" value="23.8163" />
                                                                                                                                            <Key frame="39" value="29.2" />
                                                                                                                                            <Key frame="55" value="43.2" />
                                                                                                                                            <Key frame="64" value="35" />
                                                                                                                                            <Key frame="75" value="29.2655" />
                                                                                                                                            <Key frame="94" value="4.39218" />
                                                                                                                                            <Key frame="109" value="8.87466" />
                                                                                                                                            <Key frame="126" value="39.461" />
                                                                                                                                            <Key frame="180" value="33.9238" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-31.204" />
                                                                                                                                            <Key frame="28" value="-40.7842" />
                                                                                                                                            <Key frame="39" value="-42.1904" />
                                                                                                                                            <Key frame="55" value="-46.8487" />
                                                                                                                                            <Key frame="64" value="-17.0534" />
                                                                                                                                            <Key frame="75" value="-9.31893" />
                                                                                                                                            <Key frame="94" value="-49.837" />
                                                                                                                                            <Key frame="109" value="-58.0988" />
                                                                                                                                            <Key frame="126" value="-52.7374" />
                                                                                                                                            <Key frame="180" value="-20.9206" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-60.9066" />
                                                                                                                                            <Key frame="28" value="-53.5237" />
                                                                                                                                            <Key frame="39" value="-45.4376" />
                                                                                                                                            <Key frame="55" value="-53.9631" />
                                                                                                                                            <Key frame="64" value="-61.1702" />
                                                                                                                                            <Key frame="75" value="-35.7695" />
                                                                                                                                            <Key frame="94" value="-51.0627" />
                                                                                                                                            <Key frame="109" value="-48.7775" />
                                                                                                                                            <Key frame="126" value="-70.8383" />
                                                                                                                                            <Key frame="180" value="-61.7855" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-42.542" />
                                                                                                                                            <Key frame="28" value="-44.2119" />
                                                                                                                                            <Key frame="39" value="-42.1904" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="0.0181527" />
                                                                                                                                            <Key frame="28" value="0.0665718" />
                                                                                                                                            <Key frame="39" value="0.0720262" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="32.4344" />
                                                                                                                                            <Key frame="21" value="42" />
                                                                                                                                            <Key frame="28" value="76.0287" />
                                                                                                                                            <Key frame="39" value="112.68" />
                                                                                                                                            <Key frame="55" value="119.496" />
                                                                                                                                            <Key frame="75" value="118.48" />
                                                                                                                                            <Key frame="85" value="119.496" />
                                                                                                                                            <Key frame="94" value="116.195" />
                                                                                                                                            <Key frame="109" value="92.4645" />
                                                                                                                                            <Key frame="126" value="81.5659" />
                                                                                                                                            <Key frame="180" value="69.7005" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-20.1296" />
                                                                                                                                            <Key frame="28" value="-38.6748" />
                                                                                                                                            <Key frame="39" value="-36.5654" />
                                                                                                                                            <Key frame="48" value="-36" />
                                                                                                                                            <Key frame="55" value="-0.5" />
                                                                                                                                            <Key frame="75" value="-29.1825" />
                                                                                                                                            <Key frame="85" value="-31.7313" />
                                                                                                                                            <Key frame="94" value="-32.3466" />
                                                                                                                                            <Key frame="109" value="-38.1474" />
                                                                                                                                            <Key frame="126" value="-33.0497" />
                                                                                                                                            <Key frame="180" value="-15.0319" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="27.5077" />
                                                                                                                                            <Key frame="28" value="104.413" />
                                                                                                                                            <Key frame="39" value="117.685" />
                                                                                                                                            <Key frame="55" value="-5" />
                                                                                                                                            <Key frame="75" value="-4.66067" />
                                                                                                                                            <Key frame="85" value="-4.39699" />
                                                                                                                                            <Key frame="94" value="-3.78175" />
                                                                                                                                            <Key frame="109" value="18.1033" />
                                                                                                                                            <Key frame="126" value="96.239" />
                                                                                                                                            <Key frame="180" value="55.3694" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="69.7005" />
                                                                                                                                            <Key frame="28" value="58.9778" />
                                                                                                                                            <Key frame="39" value="39.0263" />
                                                                                                                                            <Key frame="48" value="49" />
                                                                                                                                            <Key frame="55" value="0.5" />
                                                                                                                                            <Key frame="75" value="4.57277" />
                                                                                                                                            <Key frame="85" value="3.43018" />
                                                                                                                                            <Key frame="94" value="0.969213" />
                                                                                                                                            <Key frame="109" value="19.0749" />
                                                                                                                                            <Key frame="126" value="28.4793" />
                                                                                                                                            <Key frame="180" value="55.7258" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="61.6097" />
                                                                                                                                            <Key frame="28" value="62.7523" />
                                                                                                                                            <Key frame="39" value="62.3128" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="0.0181527" />
                                                                                                                                            <Key frame="28" value="0.126571" />
                                                                                                                                            <Key frame="39" value="0.140026" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-38.7578" />
                                                                                                                                            <Key frame="28" value="-37.3412" />
                                                                                                                                            <Key frame="39" value="-43.0541" />
                                                                                                                                            <Key frame="75" value="-28.5959" />
                                                                                                                                            <Key frame="82" value="-36.9896" />
                                                                                                                                            <Key frame="94" value="-49.2155" />
                                                                                                                                            <Key frame="126" value="-24.871" />
                                                                                                                                            <Key frame="145" value="-16.1697" />
                                                                                                                                            <Key frame="180" value="-9.92936" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="8.00055" />
                                                                                                                                            <Key frame="28" value="8.30857" />
                                                                                                                                            <Key frame="39" value="8.48435" />
                                                                                                                                            <Key frame="55" value="31" />
                                                                                                                                            <Key frame="75" value="8.87947" />
                                                                                                                                            <Key frame="82" value="-1.44741" />
                                                                                                                                            <Key frame="94" value="-10" />
                                                                                                                                            <Key frame="126" value="10.4615" />
                                                                                                                                            <Key frame="145" value="25.2273" />
                                                                                                                                            <Key frame="180" value="7.4732" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-89.9987" />
                                                                                                                                            <Key frame="28" value="-90" />
                                                                                                                                            <Key frame="39" value="-90" />
                                                                                                                                            <Key frame="55" value="-90" />
                                                                                                                                            <Key frame="75" value="-49.1057" />
                                                                                                                                            <Key frame="82" value="-34.1405" />
                                                                                                                                            <Key frame="94" value="-3" />
                                                                                                                                            <Key frame="109" value="-23" />
                                                                                                                                            <Key frame="126" value="-39.5489" />
                                                                                                                                            <Key frame="145" value="-43.2403" />
                                                                                                                                            <Key frame="180" value="-41.8341" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="41.4825" />
                                                                                                                                            <Key frame="28" value="54.9601" />
                                                                                                                                            <Key frame="39" value="67.8801" />
                                                                                                                                            <Key frame="55" value="96" />
                                                                                                                                            <Key frame="75" value="121.04" />
                                                                                                                                            <Key frame="82" value="121.04" />
                                                                                                                                            <Key frame="94" value="121.04" />
                                                                                                                                            <Key frame="126" value="114.696" />
                                                                                                                                            <Key frame="145" value="121.039" />
                                                                                                                                            <Key frame="180" value="92.7234" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="44.4708" />
                                                                                                                                            <Key frame="28" value="43.2822" />
                                                                                                                                            <Key frame="39" value="43.2822" />
                                                                                                                                            <Key frame="55" value="38" />
                                                                                                                                            <Key frame="75" value="-26" />
                                                                                                                                            <Key frame="82" value="-39" />
                                                                                                                                            <Key frame="94" value="-63" />
                                                                                                                                            <Key frame="126" value="-68.15" />
                                                                                                                                            <Key frame="145" value="-68.15" />
                                                                                                                                            <Key frame="180" value="-42.1904" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-2.89802" />
                                                                                                                                            <Key frame="28" value="-0.315349" />
                                                                                                                                            <Key frame="39" value="1.53038" />
                                                                                                                                            <Key frame="55" value="-10" />
                                                                                                                                            <Key frame="75" value="-22.6737" />
                                                                                                                                            <Key frame="82" value="-4.97361" />
                                                                                                                                            <Key frame="94" value="-5.94664" />
                                                                                                                                            <Key frame="126" value="0.617646" />
                                                                                                                                            <Key frame="145" value="-0.964405" />
                                                                                                                                            <Key frame="180" value="-5.09532" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-8.25942" />
                                                                                                                                            <Key frame="28" value="-7.64074" />
                                                                                                                                            <Key frame="39" value="-12.0353" />
                                                                                                                                            <Key frame="55" value="-31" />
                                                                                                                                            <Key frame="75" value="-31.9952" />
                                                                                                                                            <Key frame="82" value="-42.0943" />
                                                                                                                                            <Key frame="94" value="-35" />
                                                                                                                                            <Key frame="126" value="-14.5876" />
                                                                                                                                            <Key frame="145" value="-4.65586" />
                                                                                                                                            <Key frame="180" value="-4.30429" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-88.9488" />
                                                                                                                                            <Key frame="28" value="-90" />
                                                                                                                                            <Key frame="39" value="-90" />
                                                                                                                                            <Key frame="55" value="-90" />
                                                                                                                                            <Key frame="75" value="-87.3668" />
                                                                                                                                            <Key frame="82" value="-90" />
                                                                                                                                            <Key frame="94" value="-89.3612" />
                                                                                                                                            <Key frame="126" value="-48.6944" />
                                                                                                                                            <Key frame="145" value="-38.8505" />
                                                                                                                                            <Key frame="180" value="-37.1806" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="48.3429" />
                                                                                                                                            <Key frame="28" value="54.6752" />
                                                                                                                                            <Key frame="39" value="69.6168" />
                                                                                                                                            <Key frame="55" value="96" />
                                                                                                                                            <Key frame="75" value="70" />
                                                                                                                                            <Key frame="82" value="72.9567" />
                                                                                                                                            <Key frame="94" value="63" />
                                                                                                                                            <Key frame="126" value="34.1044" />
                                                                                                                                            <Key frame="145" value="82.5327" />
                                                                                                                                            <Key frame="180" value="90.5309" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="45.003" />
                                                                                                                                            <Key frame="28" value="43.5603" />
                                                                                                                                            <Key frame="39" value="43.5603" />
                                                                                                                                            <Key frame="55" value="38" />
                                                                                                                                            <Key frame="75" value="45" />
                                                                                                                                            <Key frame="82" value="38.3747" />
                                                                                                                                            <Key frame="94" value="45" />
                                                                                                                                            <Key frame="109" value="45" />
                                                                                                                                            <Key frame="118" value="31" />
                                                                                                                                            <Key frame="126" value="27.6004" />
                                                                                                                                            <Key frame="145" value="-21.1795" />
                                                                                                                                            <Key frame="180" value="-45.1739" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="2.81494" />
                                                                                                                                            <Key frame="28" value="0.0417638" />
                                                                                                                                            <Key frame="39" value="-0.0461279" />
                                                                                                                                            <Key frame="55" value="10" />
                                                                                                                                            <Key frame="75" value="0.532261" />
                                                                                                                                            <Key frame="82" value="4.26057" />
                                                                                                                                            <Key frame="88" value="-9" />
                                                                                                                                            <Key frame="94" value="-6" />
                                                                                                                                            <Key frame="109" value="14" />
                                                                                                                                            <Key frame="118" value="20" />
                                                                                                                                            <Key frame="126" value="25.2273" />
                                                                                                                                            <Key frame="145" value="24.2605" />
                                                                                                                                            <Key frame="180" value="5.18802" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                    </ActuatorList>
                                                                                                                                </Timeline>
                                                                                                                            </Box>
                                                                                                                            <Box name="CrouchToStand" id="3" tooltip="From the old bad position" x="1206" y="505">
                                                                                                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                                                <Timeline enable="1" fps="10" start_frame="0" end_frame="-1" size="300">
                                                                                                                                    <ActuatorList model="Nao">
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="3.86483" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-2.37548" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="90.8776" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="12.8298" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-58.5383" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-37.791" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-43.0693" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="0.26148" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="84.1148" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-8.44001" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="52.1174" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="21.2722" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="60.4671" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="0.218207" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-13.7087" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="8.5279" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="12.1315" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-5.18802" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="4.65586" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-7.64418" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-3.33748" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="12.1267" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-4.39218" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="4.57277" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="3.43018" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                    </ActuatorList>
                                                                                                                                </Timeline>
                                                                                                                            </Box>
                                                                                                                            <Box name="BellyToStand" id="16" tooltip="First motion to Stand up from the belly" x="1199" y="347">
                                                                                                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                                                <Timeline enable="1" fps="10" start_frame="0" end_frame="-1" size="300">
                                                                                                                                    <ActuatorList model="Nao">
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0" />
                                                                                                                                            <Key frame="20" value="-13" />
                                                                                                                                            <Key frame="34" value="16.4" />
                                                                                                                                            <Key frame="45" value="17" />
                                                                                                                                            <Key frame="58" value="-28.4" />
                                                                                                                                            <Key frame="65" value="-17" />
                                                                                                                                            <Key frame="76" value="3" />
                                                                                                                                            <Key frame="89" value="-22.4" />
                                                                                                                                            <Key frame="100" value="3.86483" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-38.5" />
                                                                                                                                            <Key frame="20" value="-31.3797" />
                                                                                                                                            <Key frame="34" value="6.15002" />
                                                                                                                                            <Key frame="45" value="29.5" />
                                                                                                                                            <Key frame="58" value="21.8" />
                                                                                                                                            <Key frame="65" value="21.2674" />
                                                                                                                                            <Key frame="76" value="-6" />
                                                                                                                                            <Key frame="89" value="-30.5887" />
                                                                                                                                            <Key frame="100" value="7.3" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="4.83164" />
                                                                                                                                            <Key frame="20" value="-86.6" />
                                                                                                                                            <Key frame="34" value="-71.6342" />
                                                                                                                                            <Key frame="45" value="4.12851" />
                                                                                                                                            <Key frame="58" value="73" />
                                                                                                                                            <Key frame="65" value="43.3" />
                                                                                                                                            <Key frame="76" value="43" />
                                                                                                                                            <Key frame="89" value="74" />
                                                                                                                                            <Key frame="100" value="91.3171" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="89.0319" />
                                                                                                                                            <Key frame="20" value="0.964405" />
                                                                                                                                            <Key frame="34" value="4.39218" />
                                                                                                                                            <Key frame="45" value="4.04062" />
                                                                                                                                            <Key frame="58" value="8.96255" />
                                                                                                                                            <Key frame="65" value="53.8" />
                                                                                                                                            <Key frame="76" value="38.8" />
                                                                                                                                            <Key frame="89" value="48.5" />
                                                                                                                                            <Key frame="100" value="12.4782" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-119" />
                                                                                                                                            <Key frame="20" value="-90.5309" />
                                                                                                                                            <Key frame="34" value="-91.9371" />
                                                                                                                                            <Key frame="45" value="-102.396" />
                                                                                                                                            <Key frame="58" value="-76.0287" />
                                                                                                                                            <Key frame="65" value="-71.5" />
                                                                                                                                            <Key frame="76" value="-55.7258" />
                                                                                                                                            <Key frame="89" value="-55" />
                                                                                                                                            <Key frame="100" value="-58.3625" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-0.5" />
                                                                                                                                            <Key frame="20" value="-20.2127" />
                                                                                                                                            <Key frame="34" value="-36.5606" />
                                                                                                                                            <Key frame="45" value="-48.7775" />
                                                                                                                                            <Key frame="58" value="-88.8561" />
                                                                                                                                            <Key frame="65" value="-42" />
                                                                                                                                            <Key frame="76" value="-42.2" />
                                                                                                                                            <Key frame="89" value="-66.1801" />
                                                                                                                                            <Key frame="100" value="-39.0215" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-88.8609" />
                                                                                                                                            <Key frame="20" value="-88.8609" />
                                                                                                                                            <Key frame="34" value="-86.9273" />
                                                                                                                                            <Key frame="45" value="-82.9722" />
                                                                                                                                            <Key frame="58" value="-80.5112" />
                                                                                                                                            <Key frame="65" value="-80.687" />
                                                                                                                                            <Key frame="76" value="-80.687" />
                                                                                                                                            <Key frame="89" value="-31.2" />
                                                                                                                                            <Key frame="100" value="-40.6963" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0.0585718" />
                                                                                                                                            <Key frame="20" value="0.0196627" />
                                                                                                                                            <Key frame="34" value="0.0407536" />
                                                                                                                                            <Key frame="45" value="0.0545718" />
                                                                                                                                            <Key frame="58" value="0.0574809" />
                                                                                                                                            <Key frame="65" value="0.0574809" />
                                                                                                                                            <Key frame="76" value="0.0549355" />
                                                                                                                                            <Key frame="89" value="0.0574809" />
                                                                                                                                            <Key frame="100" value="0.260753" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-1.57965" />
                                                                                                                                            <Key frame="20" value="-86.6" />
                                                                                                                                            <Key frame="34" value="-70.0473" />
                                                                                                                                            <Key frame="45" value="-13.5329" />
                                                                                                                                            <Key frame="58" value="12.483" />
                                                                                                                                            <Key frame="65" value="25.7547" />
                                                                                                                                            <Key frame="76" value="52.3859" />
                                                                                                                                            <Key frame="89" value="55.0226" />
                                                                                                                                            <Key frame="100" value="84.73" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-87.982" />
                                                                                                                                            <Key frame="20" value="-11" />
                                                                                                                                            <Key frame="34" value="-4.74856" />
                                                                                                                                            <Key frame="45" value="-4.74856" />
                                                                                                                                            <Key frame="58" value="-13.0104" />
                                                                                                                                            <Key frame="65" value="-10.4615" />
                                                                                                                                            <Key frame="76" value="-0.498473" />
                                                                                                                                            <Key frame="89" value="-7.56109" />
                                                                                                                                            <Key frame="100" value="-8.5279" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="119" />
                                                                                                                                            <Key frame="20" value="89.4714" />
                                                                                                                                            <Key frame="34" value="92.4597" />
                                                                                                                                            <Key frame="45" value="96.5906" />
                                                                                                                                            <Key frame="58" value="112.323" />
                                                                                                                                            <Key frame="65" value="111.796" />
                                                                                                                                            <Key frame="76" value="38.1426" />
                                                                                                                                            <Key frame="89" value="22.6737" />
                                                                                                                                            <Key frame="100" value="52.1174" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="6" />
                                                                                                                                            <Key frame="20" value="21.8874" />
                                                                                                                                            <Key frame="34" value="36.3896" />
                                                                                                                                            <Key frame="45" value="89.2125" />
                                                                                                                                            <Key frame="58" value="0.498473" />
                                                                                                                                            <Key frame="65" value="0.498473" />
                                                                                                                                            <Key frame="76" value="24.2605" />
                                                                                                                                            <Key frame="89" value="37.2" />
                                                                                                                                            <Key frame="100" value="22.5027" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="86.4831" />
                                                                                                                                            <Key frame="20" value="86.4831" />
                                                                                                                                            <Key frame="34" value="85.7799" />
                                                                                                                                            <Key frame="45" value="81.8248" />
                                                                                                                                            <Key frame="58" value="82.2643" />
                                                                                                                                            <Key frame="65" value="82.5279" />
                                                                                                                                            <Key frame="76" value="82.7037" />
                                                                                                                                            <Key frame="89" value="82.5279" />
                                                                                                                                            <Key frame="100" value="62.2249" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0.0185718" />
                                                                                                                                            <Key frame="20" value="0.0127537" />
                                                                                                                                            <Key frame="34" value="0.0262082" />
                                                                                                                                            <Key frame="45" value="0.0469355" />
                                                                                                                                            <Key frame="58" value="0.0494809" />
                                                                                                                                            <Key frame="65" value="0.04839" />
                                                                                                                                            <Key frame="76" value="0.0472991" />
                                                                                                                                            <Key frame="89" value="0.04839" />
                                                                                                                                            <Key frame="100" value="0.217844" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="1.3" />
                                                                                                                                            <Key frame="20" value="2" />
                                                                                                                                            <Key frame="34" value="-24.9588" />
                                                                                                                                            <Key frame="45" value="-44.6466" />
                                                                                                                                            <Key frame="58" value="-59.6761" />
                                                                                                                                            <Key frame="65" value="-65.621" />
                                                                                                                                            <Key frame="76" value="-65.621" />
                                                                                                                                            <Key frame="89" value="-32.5175" />
                                                                                                                                            <Key frame="100" value="-13.5329" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0" />
                                                                                                                                            <Key frame="20" value="0.00240423" />
                                                                                                                                            <Key frame="34" value="0.090296" />
                                                                                                                                            <Key frame="45" value="-21.619" />
                                                                                                                                            <Key frame="58" value="-17.0486" />
                                                                                                                                            <Key frame="65" value="-17.0486" />
                                                                                                                                            <Key frame="76" value="11.1647" />
                                                                                                                                            <Key frame="89" value="7.29742" />
                                                                                                                                            <Key frame="100" value="8.5279" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-46.1" />
                                                                                                                                            <Key frame="20" value="0.00240423" />
                                                                                                                                            <Key frame="34" value="-89.9108" />
                                                                                                                                            <Key frame="45" value="-73.3872" />
                                                                                                                                            <Key frame="58" value="-59.4124" />
                                                                                                                                            <Key frame="65" value="-66.4437" />
                                                                                                                                            <Key frame="76" value="-67.7621" />
                                                                                                                                            <Key frame="89" value="-72.7719" />
                                                                                                                                            <Key frame="100" value="12.2194" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-5.29" />
                                                                                                                                            <Key frame="20" value="114" />
                                                                                                                                            <Key frame="34" value="121.039" />
                                                                                                                                            <Key frame="45" value="16.1697" />
                                                                                                                                            <Key frame="58" value="23.201" />
                                                                                                                                            <Key frame="65" value="20.4764" />
                                                                                                                                            <Key frame="76" value="41.2188" />
                                                                                                                                            <Key frame="89" value="115.399" />
                                                                                                                                            <Key frame="100" value="-5.18802" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="36.9" />
                                                                                                                                            <Key frame="20" value="-59" />
                                                                                                                                            <Key frame="34" value="-65.9212" />
                                                                                                                                            <Key frame="45" value="12.3903" />
                                                                                                                                            <Key frame="58" value="40.6915" />
                                                                                                                                            <Key frame="65" value="52.8695" />
                                                                                                                                            <Key frame="76" value="47.2833" />
                                                                                                                                            <Key frame="89" value="-28.743" />
                                                                                                                                            <Key frame="100" value="4.39218" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0" />
                                                                                                                                            <Key frame="20" value="0.00240423" />
                                                                                                                                            <Key frame="34" value="-0.0854875" />
                                                                                                                                            <Key frame="45" value="-25.9257" />
                                                                                                                                            <Key frame="58" value="-17.2244" />
                                                                                                                                            <Key frame="65" value="-6.76526" />
                                                                                                                                            <Key frame="76" value="-2.37067" />
                                                                                                                                            <Key frame="89" value="-6.94104" />
                                                                                                                                            <Key frame="100" value="-7.73207" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0" />
                                                                                                                                            <Key frame="20" value="0.00240423" />
                                                                                                                                            <Key frame="34" value="0.090296" />
                                                                                                                                            <Key frame="45" value="17.8444" />
                                                                                                                                            <Key frame="58" value="14.5924" />
                                                                                                                                            <Key frame="65" value="18.3718" />
                                                                                                                                            <Key frame="76" value="13.0104" />
                                                                                                                                            <Key frame="89" value="-4.30429" />
                                                                                                                                            <Key frame="100" value="-3.42537" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-46.1" />
                                                                                                                                            <Key frame="20" value="-0.00240423" />
                                                                                                                                            <Key frame="34" value="-90.3551" />
                                                                                                                                            <Key frame="45" value="-95.1891" />
                                                                                                                                            <Key frame="58" value="-68.7337" />
                                                                                                                                            <Key frame="65" value="-91.5856" />
                                                                                                                                            <Key frame="76" value="-18.4597" />
                                                                                                                                            <Key frame="89" value="-40.6963" />
                                                                                                                                            <Key frame="100" value="12.0388" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-5.29" />
                                                                                                                                            <Key frame="20" value="114" />
                                                                                                                                            <Key frame="34" value="119.535" />
                                                                                                                                            <Key frame="45" value="99.8474" />
                                                                                                                                            <Key frame="58" value="121.478" />
                                                                                                                                            <Key frame="65" value="121.478" />
                                                                                                                                            <Key frame="76" value="121.478" />
                                                                                                                                            <Key frame="89" value="121.478" />
                                                                                                                                            <Key frame="100" value="-4.39218" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="36.9" />
                                                                                                                                            <Key frame="20" value="-59" />
                                                                                                                                            <Key frame="34" value="-65.2133" />
                                                                                                                                            <Key frame="45" value="-67.9785" />
                                                                                                                                            <Key frame="58" value="-67.9785" />
                                                                                                                                            <Key frame="65" value="-33.748" />
                                                                                                                                            <Key frame="76" value="-67.9785" />
                                                                                                                                            <Key frame="89" value="-67.9785" />
                                                                                                                                            <Key frame="100" value="4.92434" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0" />
                                                                                                                                            <Key frame="20" value="0.00240423" />
                                                                                                                                            <Key frame="34" value="0.353971" />
                                                                                                                                            <Key frame="45" value="-0.261271" />
                                                                                                                                            <Key frame="58" value="-5.62267" />
                                                                                                                                            <Key frame="65" value="-0.788621" />
                                                                                                                                            <Key frame="76" value="-5.44688" />
                                                                                                                                            <Key frame="89" value="2.02391" />
                                                                                                                                            <Key frame="100" value="3.51807" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                    </ActuatorList>
                                                                                                                                </Timeline>
                                                                                                                            </Box>
                                                                                                                            <Box name="BackToStand" id="5" tooltip="First motion to Stand up from the back" x="1194" y="231">
                                                                                                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                                                <Timeline enable="1" fps="10" start_frame="0" end_frame="-1" size="300" resources_acquisition="1">
                                                                                                                                    <BehaviorLayer name="behavior_layer1">
                                                                                                                                        <BehaviorKeyframe name="keyframe10" index="10">
                                                                                                                                            <Diagram>
                                                                                                                                                <Box name="Disable Anti-Collision" id="2" tooltip="Disable the collision protection on some specific part of NAO&apos;s body.&#x0A;&#x0A;Note: When this box is unloaded, the collision protection state will be reset to&#x0A;its previous state (enabled or disabled)." x="136" y="45">
                                                                                                                                                    <bitmap>media/images/box/sensors/anti_collision.png</bitmap>
                                                                                                                                                    <script language="4">
                                                                                                                                                        <content>
                                                                                                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy( "ALMotion" )
        
    def onLoad(self):
        self.collisionLArmState = self.motion.getCollisionProtectionEnabled("LArm")
        self.collisionRArmState = self.motion.getCollisionProtectionEnabled("RArm")
        
    def onUnload(self):
        self.motion.setCollisionProtectionEnabled("LArm", self.collisionLArmState)
        self.motion.setCollisionProtectionEnabled("RArm", self.collisionRArmState)

    def onInput_onSet(self):
        # enable/disable collision protection
        result = self.motion.setCollisionProtectionEnabled( self.getParameter("Body part"), False )
        if( result ):
            self.success()
        else:
            self.logger.warning( "Disabling collision protection failed. Deactivation succeeds only if the current state of the chain is not in collision. If you want to deactivate collision of both arms, they need to be off collision." )
            self.failure()]]>
</content>
                                                                                                                                                    </script>
                                                                                                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                                    <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="The anti-collision feature is enabled or disabled when this input is stimulated." id="2" />
                                                                                                                                                    <Output name="success" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the collision protection has been successfully enabled or disabled.&#x0A;&#x0A;Note: The only case where there is a failure is when you try to disable the&#x0A;anti-collision while it is currently in collision with some part of his body." id="3" />
                                                                                                                                                    <Output name="failure" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the collision protection has failed to be enabled or disabled.&#x0A;&#x0A;Note: The only case where there is a failure is when you try to disable the&#x0A;anti-collision while it is currently in collision with some part of his body." id="4" />
                                                                                                                                                    <Parameter name="Body part" inherits_from_parent="0" content_type="3" value="Arms" default_value="Arms" custom_choice="0" tooltip="Body part which avoids the collision." id="5">
                                                                                                                                                        <Choice value="Arms" />
                                                                                                                                                        <Choice value="LArm" />
                                                                                                                                                        <Choice value="RArm" />
                                                                                                                                                    </Parameter>
                                                                                                                                                </Box>
                                                                                                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                                                                            </Diagram>
                                                                                                                                        </BehaviorKeyframe>
                                                                                                                                    </BehaviorLayer>
                                                                                                                                    <ActuatorList model="Nao">
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-1.40867" />
                                                                                                                                            <Key frame="20" value="-2.73208e-05" />
                                                                                                                                            <Key frame="28" value="2.37067" />
                                                                                                                                            <Key frame="36" value="3.86374e-05" />
                                                                                                                                            <Key frame="43" value="1.93188e-05" />
                                                                                                                                            <Key frame="48" value="1.93187e-05" />
                                                                                                                                            <Key frame="56" value="-29.4461" />
                                                                                                                                            <Key frame="65" value="-17.3171" />
                                                                                                                                            <Key frame="74" value="15.1" />
                                                                                                                                            <Key frame="80" value="6.9" />
                                                                                                                                            <Key frame="86" value="-0.538656" />
                                                                                                                                            <Key frame="105" value="3.77694" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="3.60116" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="28" value="29.5016" />
                                                                                                                                            <Key frame="36" value="-38.5028" />
                                                                                                                                            <Key frame="43" value="0" />
                                                                                                                                            <Key frame="48" value="20" />
                                                                                                                                            <Key frame="56" value="9.84147" />
                                                                                                                                            <Key frame="65" value="19.7732" />
                                                                                                                                            <Key frame="74" value="0.6" />
                                                                                                                                            <Key frame="80" value="1.7" />
                                                                                                                                            <Key frame="86" value="21.707" />
                                                                                                                                            <Key frame="105" value="-2.28759" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="119.496" />
                                                                                                                                            <Key frame="20" value="119.5" />
                                                                                                                                            <Key frame="26" value="116.806" />
                                                                                                                                            <Key frame="36" value="119.496" />
                                                                                                                                            <Key frame="43" value="119.496" />
                                                                                                                                            <Key frame="48" value="119.496" />
                                                                                                                                            <Key frame="56" value="116.454" />
                                                                                                                                            <Key frame="65" value="73.7388" />
                                                                                                                                            <Key frame="74" value="54.842" />
                                                                                                                                            <Key frame="80" value="42.0098" />
                                                                                                                                            <Key frame="86" value="42.0098" />
                                                                                                                                            <Key frame="105" value="91.2292" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="56.1604" />
                                                                                                                                            <Key frame="20" value="21" />
                                                                                                                                            <Key frame="26" value="20" />
                                                                                                                                            <Key frame="36" value="20" />
                                                                                                                                            <Key frame="43" value="21" />
                                                                                                                                            <Key frame="48" value="0.498473" />
                                                                                                                                            <Key frame="56" value="17.1365" />
                                                                                                                                            <Key frame="60" value="25.4" />
                                                                                                                                            <Key frame="65" value="4.04062" />
                                                                                                                                            <Key frame="74" value="15.2908" />
                                                                                                                                            <Key frame="80" value="28.5624" />
                                                                                                                                            <Key frame="86" value="28.5624" />
                                                                                                                                            <Key frame="105" value="12.5661" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-43.5967" />
                                                                                                                                            <Key frame="20" value="9" />
                                                                                                                                            <Key frame="26" value="7.02893" />
                                                                                                                                            <Key frame="36" value="5" />
                                                                                                                                            <Key frame="43" value="5" />
                                                                                                                                            <Key frame="48" value="5" />
                                                                                                                                            <Key frame="56" value="-112.328" />
                                                                                                                                            <Key frame="65" value="-48.9581" />
                                                                                                                                            <Key frame="74" value="-14.3288" />
                                                                                                                                            <Key frame="80" value="4.75993" />
                                                                                                                                            <Key frame="86" value="4.75993" />
                                                                                                                                            <Key frame="105" value="-59.0656" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-35.7695" />
                                                                                                                                            <Key frame="20" value="-2" />
                                                                                                                                            <Key frame="26" value="-88.5" />
                                                                                                                                            <Key frame="36" value="-89.5017" />
                                                                                                                                            <Key frame="43" value="-40" />
                                                                                                                                            <Key frame="48" value="-0.498473" />
                                                                                                                                            <Key frame="52" value="-11" />
                                                                                                                                            <Key frame="56" value="-59.9398" />
                                                                                                                                            <Key frame="65" value="-50.008" />
                                                                                                                                            <Key frame="74" value="-47.547" />
                                                                                                                                            <Key frame="80" value="-46.1434" />
                                                                                                                                            <Key frame="86" value="-46.1434" />
                                                                                                                                            <Key frame="105" value="-39.0215" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-40.4326" />
                                                                                                                                            <Key frame="26" value="-102.484" />
                                                                                                                                            <Key frame="56" value="-41.5752" />
                                                                                                                                            <Key frame="65" value="-41.2236" />
                                                                                                                                            <Key frame="74" value="-41.3994" />
                                                                                                                                            <Key frame="105" value="-40.7842" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0.0502082" />
                                                                                                                                            <Key frame="26" value="0.0763898" />
                                                                                                                                            <Key frame="56" value="0.125481" />
                                                                                                                                            <Key frame="65" value="0.154208" />
                                                                                                                                            <Key frame="74" value="0.166208" />
                                                                                                                                            <Key frame="105" value="0.258207" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="119.496" />
                                                                                                                                            <Key frame="20" value="119.5" />
                                                                                                                                            <Key frame="26" value="111.889" />
                                                                                                                                            <Key frame="36" value="119.496" />
                                                                                                                                            <Key frame="43" value="119.496" />
                                                                                                                                            <Key frame="48" value="119.496" />
                                                                                                                                            <Key frame="56" value="119.008" />
                                                                                                                                            <Key frame="65" value="116.723" />
                                                                                                                                            <Key frame="74" value="82.5327" />
                                                                                                                                            <Key frame="80" value="51.0681" />
                                                                                                                                            <Key frame="86" value="51.0681" />
                                                                                                                                            <Key frame="105" value="84.2027" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-61.5266" />
                                                                                                                                            <Key frame="20" value="-21" />
                                                                                                                                            <Key frame="26" value="-20" />
                                                                                                                                            <Key frame="36" value="-20" />
                                                                                                                                            <Key frame="43" value="-21" />
                                                                                                                                            <Key frame="48" value="-0.498473" />
                                                                                                                                            <Key frame="56" value="-26.1941" />
                                                                                                                                            <Key frame="65" value="-32.3466" />
                                                                                                                                            <Key frame="74" value="-40.4326" />
                                                                                                                                            <Key frame="80" value="-50" />
                                                                                                                                            <Key frame="86" value="-39" />
                                                                                                                                            <Key frame="105" value="-8.61579" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="43.8556" />
                                                                                                                                            <Key frame="20" value="-9" />
                                                                                                                                            <Key frame="26" value="-14.7682" />
                                                                                                                                            <Key frame="36" value="-5" />
                                                                                                                                            <Key frame="43" value="-5" />
                                                                                                                                            <Key frame="48" value="-5" />
                                                                                                                                            <Key frame="56" value="-4.66067" />
                                                                                                                                            <Key frame="65" value="-3.95753" />
                                                                                                                                            <Key frame="74" value="-1.49656" />
                                                                                                                                            <Key frame="80" value="0.0352695" />
                                                                                                                                            <Key frame="86" value="0.0352695" />
                                                                                                                                            <Key frame="105" value="52.2932" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="40.6963" />
                                                                                                                                            <Key frame="20" value="2" />
                                                                                                                                            <Key frame="26" value="88.5" />
                                                                                                                                            <Key frame="36" value="89.5017" />
                                                                                                                                            <Key frame="43" value="40" />
                                                                                                                                            <Key frame="48" value="0.498473" />
                                                                                                                                            <Key frame="56" value="5.53958" />
                                                                                                                                            <Key frame="65" value="1.23289" />
                                                                                                                                            <Key frame="74" value="10.901" />
                                                                                                                                            <Key frame="80" value="26" />
                                                                                                                                            <Key frame="86" value="32.0829" />
                                                                                                                                            <Key frame="105" value="21.7996" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="66.0043" />
                                                                                                                                            <Key frame="26" value="98.8758" />
                                                                                                                                            <Key frame="56" value="61.8734" />
                                                                                                                                            <Key frame="65" value="61.7855" />
                                                                                                                                            <Key frame="74" value="61.8734" />
                                                                                                                                            <Key frame="105" value="62.137" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="26" value="0.0182082" />
                                                                                                                                            <Key frame="43" value="0" />
                                                                                                                                            <Key frame="56" value="0.16439" />
                                                                                                                                            <Key frame="65" value="0.171662" />
                                                                                                                                            <Key frame="74" value="0.176753" />
                                                                                                                                            <Key frame="105" value="0.215298" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-26.9804" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="32" value="0.441863" />
                                                                                                                                            <Key frame="36" value="-2.73208e-05" />
                                                                                                                                            <Key frame="43" value="-37.5274" />
                                                                                                                                            <Key frame="56" value="-28.5624" />
                                                                                                                                            <Key frame="65" value="-49.217" />
                                                                                                                                            <Key frame="74" value="-39.9" />
                                                                                                                                            <Key frame="80" value="-23.0475" />
                                                                                                                                            <Key frame="86" value="-23.0475" />
                                                                                                                                            <Key frame="105" value="-13.1814" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="2.55126" />
                                                                                                                                            <Key frame="20" value="8.991e-06" />
                                                                                                                                            <Key frame="32" value="3.34229" />
                                                                                                                                            <Key frame="36" value="8.991e-06" />
                                                                                                                                            <Key frame="43" value="-3.71174" />
                                                                                                                                            <Key frame="48" value="31" />
                                                                                                                                            <Key frame="56" value="8.87947" />
                                                                                                                                            <Key frame="65" value="-10.0173" />
                                                                                                                                            <Key frame="74" value="0.529755" />
                                                                                                                                            <Key frame="80" value="11" />
                                                                                                                                            <Key frame="86" value="10" />
                                                                                                                                            <Key frame="105" value="8.70368" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="14.3288" />
                                                                                                                                            <Key frame="20" value="-10" />
                                                                                                                                            <Key frame="32" value="21.448" />
                                                                                                                                            <Key frame="36" value="-10" />
                                                                                                                                            <Key frame="43" value="-67.4992" />
                                                                                                                                            <Key frame="48" value="-90" />
                                                                                                                                            <Key frame="56" value="-49.1291" />
                                                                                                                                            <Key frame="65" value="-3.24959" />
                                                                                                                                            <Key frame="74" value="-26.1014" />
                                                                                                                                            <Key frame="80" value="-49" />
                                                                                                                                            <Key frame="86" value="-47.8986" />
                                                                                                                                            <Key frame="105" value="12.2194" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="5.2711" />
                                                                                                                                            <Key frame="20" value="96" />
                                                                                                                                            <Key frame="32" value="115.751" />
                                                                                                                                            <Key frame="36" value="96" />
                                                                                                                                            <Key frame="43" value="61.7515" />
                                                                                                                                            <Key frame="48" value="96" />
                                                                                                                                            <Key frame="56" value="120.937" />
                                                                                                                                            <Key frame="65" value="121.024" />
                                                                                                                                            <Key frame="74" value="121.039" />
                                                                                                                                            <Key frame="80" value="121.039" />
                                                                                                                                            <Key frame="86" value="121.039" />
                                                                                                                                            <Key frame="105" value="-5.10012" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="47.2833" />
                                                                                                                                            <Key frame="20" value="14" />
                                                                                                                                            <Key frame="32" value="-26.0184" />
                                                                                                                                            <Key frame="36" value="14" />
                                                                                                                                            <Key frame="43" value="38.8165" />
                                                                                                                                            <Key frame="48" value="38" />
                                                                                                                                            <Key frame="56" value="-26.1062" />
                                                                                                                                            <Key frame="65" value="-63.1087" />
                                                                                                                                            <Key frame="74" value="-68.1542" />
                                                                                                                                            <Key frame="80" value="-68.1542" />
                                                                                                                                            <Key frame="86" value="-68.1542" />
                                                                                                                                            <Key frame="105" value="4.65586" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-1.93121" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="32" value="-1.93121" />
                                                                                                                                            <Key frame="36" value="0" />
                                                                                                                                            <Key frame="43" value="9.80246" />
                                                                                                                                            <Key frame="48" value="-6" />
                                                                                                                                            <Key frame="56" value="-22.6737" />
                                                                                                                                            <Key frame="65" value="-5.71056" />
                                                                                                                                            <Key frame="74" value="2.46337" />
                                                                                                                                            <Key frame="80" value="6.76691" />
                                                                                                                                            <Key frame="86" value="5" />
                                                                                                                                            <Key frame="105" value="-7.81996" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-8.52309" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="32" value="-1.31597" />
                                                                                                                                            <Key frame="36" value="0" />
                                                                                                                                            <Key frame="43" value="3.54635" />
                                                                                                                                            <Key frame="48" value="-31" />
                                                                                                                                            <Key frame="56" value="-31.9902" />
                                                                                                                                            <Key frame="65" value="-34.9785" />
                                                                                                                                            <Key frame="74" value="-35.9" />
                                                                                                                                            <Key frame="80" value="-17" />
                                                                                                                                            <Key frame="86" value="-1" />
                                                                                                                                            <Key frame="105" value="-3.60116" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="10.6325" />
                                                                                                                                            <Key frame="20" value="-10" />
                                                                                                                                            <Key frame="32" value="16.1697" />
                                                                                                                                            <Key frame="36" value="-10" />
                                                                                                                                            <Key frame="43" value="-66.7243" />
                                                                                                                                            <Key frame="48" value="-90" />
                                                                                                                                            <Key frame="56" value="-87.3668" />
                                                                                                                                            <Key frame="65" value="-89.3883" />
                                                                                                                                            <Key frame="74" value="-59" />
                                                                                                                                            <Key frame="80" value="-51.9" />
                                                                                                                                            <Key frame="86" value="-51.9" />
                                                                                                                                            <Key frame="105" value="11.9509" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="10.9889" />
                                                                                                                                            <Key frame="20" value="96" />
                                                                                                                                            <Key frame="32" value="116.107" />
                                                                                                                                            <Key frame="36" value="96" />
                                                                                                                                            <Key frame="43" value="62.6734" />
                                                                                                                                            <Key frame="48" value="96" />
                                                                                                                                            <Key frame="56" value="69.9642" />
                                                                                                                                            <Key frame="65" value="63.0208" />
                                                                                                                                            <Key frame="74" value="62.1" />
                                                                                                                                            <Key frame="80" value="50.2" />
                                                                                                                                            <Key frame="86" value="101" />
                                                                                                                                            <Key frame="105" value="-4.39218" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="26.7215" />
                                                                                                                                            <Key frame="20" value="14" />
                                                                                                                                            <Key frame="32" value="-21.4432" />
                                                                                                                                            <Key frame="36" value="14" />
                                                                                                                                            <Key frame="43" value="41.102" />
                                                                                                                                            <Key frame="48" value="38" />
                                                                                                                                            <Key frame="56" value="45.003" />
                                                                                                                                            <Key frame="65" value="44.9151" />
                                                                                                                                            <Key frame="74" value="25.3" />
                                                                                                                                            <Key frame="80" value="23.1" />
                                                                                                                                            <Key frame="86" value="-33.2" />
                                                                                                                                            <Key frame="105" value="4.66067" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="9.5826" />
                                                                                                                                            <Key frame="20" value="4.94951e-06" />
                                                                                                                                            <Key frame="32" value="-2.28278" />
                                                                                                                                            <Key frame="36" value="4.94951e-06" />
                                                                                                                                            <Key frame="43" value="-9.21535" />
                                                                                                                                            <Key frame="48" value="6" />
                                                                                                                                            <Key frame="56" value="0.529755" />
                                                                                                                                            <Key frame="65" value="-5.62267" />
                                                                                                                                            <Key frame="74" value="25.4" />
                                                                                                                                            <Key frame="80" value="38.9384" />
                                                                                                                                            <Key frame="86" value="15.9" />
                                                                                                                                            <Key frame="105" value="3.60596" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                    </ActuatorList>
                                                                                                                                </Timeline>
                                                                                                                            </Box>
                                                                                                                            <Box name="SideToBelly" id="4" tooltip="Lie down on the back or the belly from an other lie down position (on the side)." x="656" y="93">
                                                                                                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                                                <Timeline enable="1" fps="10" start_frame="0" end_frame="-1" size="300">
                                                                                                                                    <ActuatorList model="Nao">
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="41.3067" />
                                                                                                                                            <Key frame="10" value="41.3067" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="8.52309" />
                                                                                                                                            <Key frame="10" value="8.52309" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="108.72" />
                                                                                                                                            <Key frame="10" value="108.72" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="45.965" />
                                                                                                                                            <Key frame="10" value="45.965" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-56.8684" />
                                                                                                                                            <Key frame="10" value="-56.8684" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-26.8046" />
                                                                                                                                            <Key frame="10" value="-26.8046" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-38.8505" />
                                                                                                                                            <Key frame="10" value="-38.8505" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="0.200389" />
                                                                                                                                            <Key frame="10" value="0.200389" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="113.383" />
                                                                                                                                            <Key frame="10" value="113.383" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-44.6514" />
                                                                                                                                            <Key frame="10" value="-44.6514" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="52.9084" />
                                                                                                                                            <Key frame="10" value="52.9084" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="19.5144" />
                                                                                                                                            <Key frame="10" value="19.5144" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="37" />
                                                                                                                                            <Key frame="10" value="37" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="0.146571" />
                                                                                                                                            <Key frame="10" value="0.146571" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-65.5648" />
                                                                                                                                            <Key frame="10" value="-65.5648" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="14.4166" />
                                                                                                                                            <Key frame="10" value="14.4166" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="2.02391" />
                                                                                                                                            <Key frame="10" value="2.02391" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-5.27591" />
                                                                                                                                            <Key frame="10" value="-5.27591" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="20.3885" />
                                                                                                                                            <Key frame="10" value="20.3885" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="19.6902" />
                                                                                                                                            <Key frame="10" value="19.6902" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-1.75543" />
                                                                                                                                            <Key frame="10" value="-1.75543" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="23.8163" />
                                                                                                                                            <Key frame="10" value="23.8163" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-5.2711" />
                                                                                                                                            <Key frame="10" value="-5.2711" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="29.9735" />
                                                                                                                                            <Key frame="10" value="29.9735" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-3.86483" />
                                                                                                                                            <Key frame="10" value="-3.86483" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                    </ActuatorList>
                                                                                                                                </Timeline>
                                                                                                                            </Box>
                                                                                                                            <Box name="Switch Case" id="1" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="923" y="96">
                                                                                                                                <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Back")):
			self.output_1(p)
		elif(p == self.typeConversion("Knee")):
			self.output_2(p)
		elif(p == self.typeConversion("Frog")):
			self.output_3(p)
		elif(p == self.typeConversion("Belly")):
			self.output_4(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
</content>
                                                                                                                                </script>
                                                                                                                                <pluginContent>
                                                                                                                                    <keywords>
                                                                                                                                        <keyword>&quot;Back&quot;</keyword>
                                                                                                                                        <keyword>&quot;Knee&quot;</keyword>
                                                                                                                                        <keyword>&quot;Frog&quot;</keyword>
                                                                                                                                        <keyword>&quot;Belly&quot;</keyword>
                                                                                                                                        <keyword></keyword>
                                                                                                                                    </keywords>
                                                                                                                                </pluginContent>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                                                                                                                <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                                                                                                                <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                                                                                                                <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                                                                                                                <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                                                                                                                <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Switch Case" id="7" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="955" y="621">
                                                                                                                                <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Crouch")):
			self.output_1(p)
		elif(p == self.typeConversion("Stand")):
			self.output_2(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
</content>
                                                                                                                                </script>
                                                                                                                                <pluginContent>
                                                                                                                                    <keywords>
                                                                                                                                        <keyword>&quot;Crouch&quot;</keyword>
                                                                                                                                        <keyword>&quot;Stand&quot;</keyword>
                                                                                                                                        <keyword></keyword>
                                                                                                                                    </keywords>
                                                                                                                                </pluginContent>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                                                                                                                <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                                                                                                                <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                                                                                                                <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Get Robot Pose" id="8" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="89" y="41">
                                                                                                                                <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPose")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                                                                                                                <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Get Robot Pose" id="10" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="794" y="96">
                                                                                                                                <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPose")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                                                                                                                <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Get Robot Pose" id="2" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="828" y="626">
                                                                                                                                <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPose")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                                                                                                                <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                                                                                                            </Box>
                                                                                                                            <Link inputowner="0" indexofinput="4" outputowner="9" indexofoutput="3" />
                                                                                                                            <Link inputowner="16" indexofinput="2" outputowner="9" indexofoutput="7" />
                                                                                                                            <Link inputowner="16" indexofinput="2" outputowner="9" indexofoutput="8" />
                                                                                                                            <Link inputowner="16" indexofinput="2" outputowner="9" indexofoutput="9" />
                                                                                                                            <Link inputowner="5" indexofinput="2" outputowner="9" indexofoutput="6" />
                                                                                                                            <Link inputowner="0" indexofinput="4" outputowner="5" indexofoutput="4" />
                                                                                                                            <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                                                                                                            <Link inputowner="0" indexofinput="4" outputowner="16" indexofoutput="4" />
                                                                                                                            <Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                                                            <Link inputowner="16" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                                                                            <Link inputowner="16" indexofinput="2" outputowner="1" indexofoutput="6" />
                                                                                                                            <Link inputowner="16" indexofinput="2" outputowner="1" indexofoutput="7" />
                                                                                                                            <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="3" />
                                                                                                                            <Link inputowner="3" indexofinput="2" outputowner="9" indexofoutput="10" />
                                                                                                                            <Link inputowner="4" indexofinput="2" outputowner="9" indexofoutput="4" />
                                                                                                                            <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="11" />
                                                                                                                            <Link inputowner="4" indexofinput="2" outputowner="9" indexofoutput="5" />
                                                                                                                            <Link inputowner="3" indexofinput="2" outputowner="7" indexofoutput="4" />
                                                                                                                            <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="3" />
                                                                                                                            <Link inputowner="3" indexofinput="2" outputowner="7" indexofoutput="5" />
                                                                                                                            <Link inputowner="8" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                                            <Link inputowner="9" indexofinput="2" outputowner="8" indexofoutput="3" />
                                                                                                                            <Link inputowner="10" indexofinput="2" outputowner="4" indexofoutput="4" />
                                                                                                                            <Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="3" />
                                                                                                                            <Link inputowner="2" indexofinput="2" outputowner="12" indexofoutput="4" />
                                                                                                                            <Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                                                        </Diagram>
                                                                                                                    </BehaviorKeyframe>
                                                                                                                </BehaviorLayer>
                                                                                                            </Timeline>
                                                                                                        </Box>
                                                                                                        <Box name="Only Once" id="4" tooltip="This box&apos;s output is stimulated only the first time the onSignal input is." x="111" y="45">
                                                                                                            <bitmap>media/images/box/box-script.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bFirstTime = True

    def onUnload(self):
        self.bFirstTime = True

    def onInput_onSignal(self):
        if( self.bFirstTime ):
            self.bFirstTime = False
            self.firstTime()]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onSignal" type="1" type_size="1" nature="1" inner="0" tooltip="The signal that must pass only once." id="2" />
                                                                                                            <Output name="firstTime" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent first time the onSignal input is stimulated." id="3" />
                                                                                                        </Box>
                                                                                                        <Box name="Set Stiffness" id="2" tooltip="Set motors stiffness." x="716" y="177">
                                                                                                            <bitmap>media/images/box/movement/stiffness.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def setStiffness(self, stiffness):
        self.bIsRunning = True
        duration = self.getParameter("Duration (s)")
        if(self.getParameter("Head")):
            ALMotion.post.stiffnessInterpolation("Head", stiffness, duration)
        if(self.getParameter("Left arm")):
            ALMotion.post.stiffnessInterpolation("LArm", stiffness, duration)
        if(self.getParameter("Right arm")):
            ALMotion.post.stiffnessInterpolation("RArm", stiffness, duration)
        if(self.getParameter("Left leg")):
            ALMotion.post.stiffnessInterpolation("LLeg", stiffness, duration)
        if(self.getParameter("Right leg")):
            ALMotion.post.stiffnessInterpolation("RLeg", stiffness, duration)
        time.sleep(duration)
        self.bIsRunning = False

    def onInput_onSet(self):
        if( self.bIsRunning ):
            return
        self.setStiffness(self.getParameter("Motors stiffness (%)")/100.)
        self.onReady() #~ activate output of the box]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="When this input is stimulated, the stiffness of the selected motors is set to&#x0A;the stiffness parameter value." id="2" />
                                                                                                            <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when stiffness has been set." id="3" />
                                                                                                            <Parameter name="Head" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the head stiffness?" id="4" />
                                                                                                            <Parameter name="Left arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left arm stiffness?" id="5" />
                                                                                                            <Parameter name="Right arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right arm stiffness?" id="6" />
                                                                                                            <Parameter name="Left leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left leg stiffness?" id="7" />
                                                                                                            <Parameter name="Right leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right leg stiffness?" id="8" />
                                                                                                            <Parameter name="Motors stiffness (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Stiffness value the motors are set to." id="9" />
                                                                                                            <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.02" max="10" tooltip="How much time to go to the max/min stiffness in seconds." id="10" />
                                                                                                        </Box>
                                                                                                        <Box name="Get Robot Pose" id="9" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="305" y="73">
                                                                                                            <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPose")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                                                                                            <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                                                                                        </Box>
                                                                                                        <Box name="Side" id="6" tooltip='Stimulates the rightOutput or the leftOutput output depending on the side&#x0A;parameter. If it is set to &quot;Random&quot; then the side is chosen randomly.' x="416" y="404">
                                                                                                            <bitmap>media/images/box/movement/move_arm.png</bitmap>
                                                                                                            <bitmap>media/images/box/movement/move_leftarm.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import random

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        side = self.getParameter("Side")
        if( side == "Random" ):
            side = random.choice( ["Left", "Right"] )
        if( side == "Left" ):
            self.leftOutput()
        else:
            self.rightOutput()]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip='When this input is stimulated the output corresponding to the side set in&#x0A;parameters is stimulated. If the side parameter is set to &quot;Random&quot; then the&#x0A;side is chosen randomly.' id="2" />
                                                                                                            <Output name="rightOutput" type="1" type_size="1" nature="2" inner="0" tooltip="The output corresponding to the right." id="3" />
                                                                                                            <Output name="leftOutput" type="1" type_size="1" nature="2" inner="0" tooltip="The output corresponding to the left." id="4" />
                                                                                                            <Parameter name="Side" inherits_from_parent="1" content_type="3" value="Random" default_value="Random" custom_choice="0" tooltip='Side chosen. If set to &quot;Random&quot; the side is chosen randomly.' id="5">
                                                                                                                <Choice value="Left" />
                                                                                                                <Choice value="Random" />
                                                                                                                <Choice value="Right" />
                                                                                                            </Parameter>
                                                                                                        </Box>
                                                                                                        <Box name="Left Stand Motion" id="1" tooltip="The robot makes the right motion to stand up depending on its current position." x="562" y="451">
                                                                                                            <bitmap>media/images/box/movement/stand.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.count = 0
        pass

    def onInput_onStop(self):
        self.onUnload()
        pass]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent after a step to sit down is done." id="4" />
                                                                                                            <Timeline enable="0">
                                                                                                                <BehaviorLayer name="SitDownBehavior">
                                                                                                                    <BehaviorKeyframe name="DetectRobotPose" index="1">
                                                                                                                        <Diagram>
                                                                                                                            <Box name="Switch Case" id="9" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="230" y="73">
                                                                                                                                <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Left")):
			self.output_1(p)
		elif(p == self.typeConversion("Right")):
			self.output_2(p)
		elif(p == self.typeConversion("Back")):
			self.output_3(p)
		elif(p == self.typeConversion("Knee")):
			self.output_4(p)
		elif(p == self.typeConversion("Frog")):
			self.output_5(p)
		elif(p == self.typeConversion("Belly")):
			self.output_6(p)
		elif(p == self.typeConversion("Crouch")):
			self.output_7(p)
		elif(p == self.typeConversion("Sit")):
			self.output_8(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
</content>
                                                                                                                                </script>
                                                                                                                                <pluginContent>
                                                                                                                                    <keywords>
                                                                                                                                        <keyword>&quot;Left&quot;</keyword>
                                                                                                                                        <keyword>&quot;Right&quot;</keyword>
                                                                                                                                        <keyword>&quot;Back&quot;</keyword>
                                                                                                                                        <keyword>&quot;Knee&quot;</keyword>
                                                                                                                                        <keyword>&quot;Frog&quot;</keyword>
                                                                                                                                        <keyword>&quot;Belly&quot;</keyword>
                                                                                                                                        <keyword>&quot;Crouch&quot;</keyword>
                                                                                                                                        <keyword>&quot;Sit&quot;</keyword>
                                                                                                                                        <keyword></keyword>
                                                                                                                                    </keywords>
                                                                                                                                </pluginContent>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                                                                                                                <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                                                                                                                <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                                                                                                                <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                                                                                                                <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                                                                                                                <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                                                                                                                                <Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="8" />
                                                                                                                                <Output name="output_6" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="9" />
                                                                                                                                <Output name="output_7" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="10" />
                                                                                                                                <Output name="output_8" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="11" />
                                                                                                                            </Box>
                                                                                                                            <Box name="SitToCrouch" id="12" tooltip="First motion to Stand up from a sitting position" x="689" y="627">
                                                                                                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                                                <Timeline enable="1" fps="25" start_frame="0" end_frame="180" size="300" resources_acquisition="1">
                                                                                                                                    <ActuatorList model="Nao">
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="0.0854875" />
                                                                                                                                            <Key frame="28" value="-16" />
                                                                                                                                            <Key frame="39" value="-19.9538" />
                                                                                                                                            <Key frame="55" value="-27" />
                                                                                                                                            <Key frame="75" value="-30" />
                                                                                                                                            <Key frame="94" value="-16.4382" />
                                                                                                                                            <Key frame="126" value="-0.538656" />
                                                                                                                                            <Key frame="180" value="-0.538656" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="21.2674" />
                                                                                                                                            <Key frame="28" value="21.1795" />
                                                                                                                                            <Key frame="39" value="13" />
                                                                                                                                            <Key frame="55" value="15.8" />
                                                                                                                                            <Key frame="75" value="9" />
                                                                                                                                            <Key frame="94" value="20.0369" />
                                                                                                                                            <Key frame="126" value="21.707" />
                                                                                                                                            <Key frame="180" value="21.707" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="32.4344" />
                                                                                                                                            <Key frame="21" value="42" />
                                                                                                                                            <Key frame="28" value="76.0287" />
                                                                                                                                            <Key frame="39" value="112.68" />
                                                                                                                                            <Key frame="55" value="119.496" />
                                                                                                                                            <Key frame="75" value="118.48" />
                                                                                                                                            <Key frame="85" value="119.496" />
                                                                                                                                            <Key frame="94" value="116.195" />
                                                                                                                                            <Key frame="109" value="92.4645" />
                                                                                                                                            <Key frame="126" value="81.5659" />
                                                                                                                                            <Key frame="180" value="69.7005" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="20.1296" />
                                                                                                                                            <Key frame="28" value="38.6748" />
                                                                                                                                            <Key frame="39" value="36.5654" />
                                                                                                                                            <Key frame="48" value="36" />
                                                                                                                                            <Key frame="55" value="0.5" />
                                                                                                                                            <Key frame="75" value="29.1825" />
                                                                                                                                            <Key frame="85" value="31.7313" />
                                                                                                                                            <Key frame="94" value="32.3466" />
                                                                                                                                            <Key frame="109" value="38.1474" />
                                                                                                                                            <Key frame="126" value="33.0497" />
                                                                                                                                            <Key frame="180" value="15.0319" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-27.5077" />
                                                                                                                                            <Key frame="28" value="-104.413" />
                                                                                                                                            <Key frame="39" value="-117.685" />
                                                                                                                                            <Key frame="55" value="5" />
                                                                                                                                            <Key frame="75" value="4.66067" />
                                                                                                                                            <Key frame="85" value="4.39699" />
                                                                                                                                            <Key frame="94" value="3.78175" />
                                                                                                                                            <Key frame="109" value="-18.1033" />
                                                                                                                                            <Key frame="126" value="-96.239" />
                                                                                                                                            <Key frame="180" value="-55.3694" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-69.7005" />
                                                                                                                                            <Key frame="28" value="-58.9778" />
                                                                                                                                            <Key frame="39" value="-39.0263" />
                                                                                                                                            <Key frame="48" value="-49" />
                                                                                                                                            <Key frame="55" value="-0.5" />
                                                                                                                                            <Key frame="75" value="-4.57277" />
                                                                                                                                            <Key frame="85" value="-3.43018" />
                                                                                                                                            <Key frame="94" value="-0.969213" />
                                                                                                                                            <Key frame="109" value="-19.0749" />
                                                                                                                                            <Key frame="126" value="-28.4793" />
                                                                                                                                            <Key frame="180" value="-55.7258" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-61.6097" />
                                                                                                                                            <Key frame="28" value="-62.7523" />
                                                                                                                                            <Key frame="39" value="-62.3128" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="0.0181527" />
                                                                                                                                            <Key frame="28" value="0.126571" />
                                                                                                                                            <Key frame="39" value="0.140026" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="28.4" />
                                                                                                                                            <Key frame="28" value="32.9" />
                                                                                                                                            <Key frame="39" value="35.9" />
                                                                                                                                            <Key frame="55" value="58.094" />
                                                                                                                                            <Key frame="64" value="37.3" />
                                                                                                                                            <Key frame="75" value="43.0645" />
                                                                                                                                            <Key frame="94" value="64.2" />
                                                                                                                                            <Key frame="109" value="67.2" />
                                                                                                                                            <Key frame="126" value="80.7" />
                                                                                                                                            <Key frame="180" value="61.2" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-13.9724" />
                                                                                                                                            <Key frame="21" value="-28.3" />
                                                                                                                                            <Key frame="28" value="-23.8163" />
                                                                                                                                            <Key frame="39" value="-29.2" />
                                                                                                                                            <Key frame="55" value="-43.2" />
                                                                                                                                            <Key frame="64" value="-35" />
                                                                                                                                            <Key frame="75" value="-29.2655" />
                                                                                                                                            <Key frame="94" value="-4.39218" />
                                                                                                                                            <Key frame="109" value="-8.87466" />
                                                                                                                                            <Key frame="126" value="-39.461" />
                                                                                                                                            <Key frame="180" value="-33.9238" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="31.204" />
                                                                                                                                            <Key frame="28" value="40.7842" />
                                                                                                                                            <Key frame="39" value="42.1904" />
                                                                                                                                            <Key frame="55" value="46.8487" />
                                                                                                                                            <Key frame="64" value="17.0534" />
                                                                                                                                            <Key frame="75" value="9.31893" />
                                                                                                                                            <Key frame="94" value="49.837" />
                                                                                                                                            <Key frame="109" value="58.0988" />
                                                                                                                                            <Key frame="126" value="52.7374" />
                                                                                                                                            <Key frame="180" value="20.9206" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="60.9066" />
                                                                                                                                            <Key frame="28" value="53.5237" />
                                                                                                                                            <Key frame="39" value="45.4376" />
                                                                                                                                            <Key frame="55" value="53.9631" />
                                                                                                                                            <Key frame="64" value="61.1702" />
                                                                                                                                            <Key frame="75" value="35.7695" />
                                                                                                                                            <Key frame="94" value="51.0627" />
                                                                                                                                            <Key frame="109" value="48.7775" />
                                                                                                                                            <Key frame="126" value="70.8383" />
                                                                                                                                            <Key frame="180" value="61.7855" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="42.542" />
                                                                                                                                            <Key frame="28" value="44.2119" />
                                                                                                                                            <Key frame="39" value="42.1904" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="0.0181527" />
                                                                                                                                            <Key frame="28" value="0.0665718" />
                                                                                                                                            <Key frame="39" value="0.0720262" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-38.7578" />
                                                                                                                                            <Key frame="28" value="-37.3412" />
                                                                                                                                            <Key frame="39" value="-43.0541" />
                                                                                                                                            <Key frame="75" value="-28.5959" />
                                                                                                                                            <Key frame="82" value="-36.9896" />
                                                                                                                                            <Key frame="94" value="-49.2155" />
                                                                                                                                            <Key frame="126" value="-24.871" />
                                                                                                                                            <Key frame="145" value="-16.1697" />
                                                                                                                                            <Key frame="180" value="-9.92936" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="8.25942" />
                                                                                                                                            <Key frame="28" value="7.64074" />
                                                                                                                                            <Key frame="39" value="12.0353" />
                                                                                                                                            <Key frame="55" value="31" />
                                                                                                                                            <Key frame="75" value="31.9952" />
                                                                                                                                            <Key frame="82" value="42.0943" />
                                                                                                                                            <Key frame="94" value="35" />
                                                                                                                                            <Key frame="126" value="14.5876" />
                                                                                                                                            <Key frame="145" value="4.65586" />
                                                                                                                                            <Key frame="180" value="4.30429" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-88.9488" />
                                                                                                                                            <Key frame="28" value="-90" />
                                                                                                                                            <Key frame="39" value="-90" />
                                                                                                                                            <Key frame="55" value="-90" />
                                                                                                                                            <Key frame="75" value="-87.3668" />
                                                                                                                                            <Key frame="82" value="-90" />
                                                                                                                                            <Key frame="94" value="-89.3612" />
                                                                                                                                            <Key frame="126" value="-48.6944" />
                                                                                                                                            <Key frame="145" value="-38.8505" />
                                                                                                                                            <Key frame="180" value="-37.1806" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="48.3429" />
                                                                                                                                            <Key frame="28" value="54.6752" />
                                                                                                                                            <Key frame="39" value="69.6168" />
                                                                                                                                            <Key frame="55" value="96" />
                                                                                                                                            <Key frame="75" value="70" />
                                                                                                                                            <Key frame="82" value="72.9567" />
                                                                                                                                            <Key frame="94" value="63" />
                                                                                                                                            <Key frame="126" value="34.1044" />
                                                                                                                                            <Key frame="145" value="82.5327" />
                                                                                                                                            <Key frame="180" value="90.5309" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="45.003" />
                                                                                                                                            <Key frame="28" value="43.5603" />
                                                                                                                                            <Key frame="39" value="43.5603" />
                                                                                                                                            <Key frame="55" value="38" />
                                                                                                                                            <Key frame="75" value="45" />
                                                                                                                                            <Key frame="82" value="38.3747" />
                                                                                                                                            <Key frame="94" value="45" />
                                                                                                                                            <Key frame="109" value="45" />
                                                                                                                                            <Key frame="118" value="31" />
                                                                                                                                            <Key frame="126" value="27.6004" />
                                                                                                                                            <Key frame="145" value="-21.1795" />
                                                                                                                                            <Key frame="180" value="-45.1739" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-2.81494" />
                                                                                                                                            <Key frame="28" value="-0.0417638" />
                                                                                                                                            <Key frame="39" value="0.0461279" />
                                                                                                                                            <Key frame="55" value="-10" />
                                                                                                                                            <Key frame="75" value="-0.532261" />
                                                                                                                                            <Key frame="82" value="-4.26057" />
                                                                                                                                            <Key frame="88" value="9" />
                                                                                                                                            <Key frame="94" value="6" />
                                                                                                                                            <Key frame="109" value="-14" />
                                                                                                                                            <Key frame="118" value="-20" />
                                                                                                                                            <Key frame="126" value="-25.2273" />
                                                                                                                                            <Key frame="145" value="-24.2605" />
                                                                                                                                            <Key frame="180" value="-5.18802" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-8.00055" />
                                                                                                                                            <Key frame="28" value="-8.30857" />
                                                                                                                                            <Key frame="39" value="-8.48435" />
                                                                                                                                            <Key frame="55" value="-31" />
                                                                                                                                            <Key frame="75" value="-8.87947" />
                                                                                                                                            <Key frame="82" value="1.44741" />
                                                                                                                                            <Key frame="94" value="10" />
                                                                                                                                            <Key frame="126" value="-10.4615" />
                                                                                                                                            <Key frame="145" value="-25.2273" />
                                                                                                                                            <Key frame="180" value="-7.4732" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-89.9987" />
                                                                                                                                            <Key frame="28" value="-90" />
                                                                                                                                            <Key frame="39" value="-90" />
                                                                                                                                            <Key frame="55" value="-90" />
                                                                                                                                            <Key frame="75" value="-49.1057" />
                                                                                                                                            <Key frame="82" value="-34.1405" />
                                                                                                                                            <Key frame="94" value="-3" />
                                                                                                                                            <Key frame="109" value="-23" />
                                                                                                                                            <Key frame="126" value="-39.5489" />
                                                                                                                                            <Key frame="145" value="-43.2403" />
                                                                                                                                            <Key frame="180" value="-41.8341" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="41.4825" />
                                                                                                                                            <Key frame="28" value="54.9601" />
                                                                                                                                            <Key frame="39" value="67.8801" />
                                                                                                                                            <Key frame="55" value="96" />
                                                                                                                                            <Key frame="75" value="121.04" />
                                                                                                                                            <Key frame="82" value="121.04" />
                                                                                                                                            <Key frame="94" value="121.04" />
                                                                                                                                            <Key frame="126" value="114.696" />
                                                                                                                                            <Key frame="145" value="121.039" />
                                                                                                                                            <Key frame="180" value="92.7234" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="44.4708" />
                                                                                                                                            <Key frame="28" value="43.2822" />
                                                                                                                                            <Key frame="39" value="43.2822" />
                                                                                                                                            <Key frame="55" value="38" />
                                                                                                                                            <Key frame="75" value="-26" />
                                                                                                                                            <Key frame="82" value="-39" />
                                                                                                                                            <Key frame="94" value="-63" />
                                                                                                                                            <Key frame="126" value="-68.15" />
                                                                                                                                            <Key frame="145" value="-68.15" />
                                                                                                                                            <Key frame="180" value="-42.1904" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="2.89802" />
                                                                                                                                            <Key frame="28" value="0.315349" />
                                                                                                                                            <Key frame="39" value="-1.53038" />
                                                                                                                                            <Key frame="55" value="10" />
                                                                                                                                            <Key frame="75" value="22.6737" />
                                                                                                                                            <Key frame="82" value="4.97361" />
                                                                                                                                            <Key frame="94" value="5.94664" />
                                                                                                                                            <Key frame="126" value="-0.617646" />
                                                                                                                                            <Key frame="145" value="0.964405" />
                                                                                                                                            <Key frame="180" value="5.09532" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                    </ActuatorList>
                                                                                                                                </Timeline>
                                                                                                                            </Box>
                                                                                                                            <Box name="CrouchToStand" id="3" tooltip="From the old bad position" x="1206" y="505">
                                                                                                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                                                <Timeline enable="1" fps="10" start_frame="0" end_frame="-1" size="300">
                                                                                                                                    <ActuatorList model="Nao">
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="3.86483" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-2.37548" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="84.1148" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="8.44001" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-52.1174" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-21.2722" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-60.4671" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="0.218207" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="90.8776" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-12.8298" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="58.5383" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="37.791" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="43.0693" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="0.26148" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-13.7087" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="3.33748" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="12.1267" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-4.39218" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="4.57277" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-3.43018" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-8.5279" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="12.1315" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="-5.18802" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="4.65586" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="15" value="7.64418" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                    </ActuatorList>
                                                                                                                                </Timeline>
                                                                                                                            </Box>
                                                                                                                            <Box name="BellyToStand" id="16" tooltip="First motion to Stand up from the belly" x="1199" y="347">
                                                                                                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                                                <Timeline enable="1" fps="10" start_frame="0" end_frame="-1" size="300">
                                                                                                                                    <ActuatorList model="Nao">
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0" />
                                                                                                                                            <Key frame="20" value="-13" />
                                                                                                                                            <Key frame="34" value="16.4" />
                                                                                                                                            <Key frame="45" value="17" />
                                                                                                                                            <Key frame="58" value="-28.4" />
                                                                                                                                            <Key frame="65" value="-17" />
                                                                                                                                            <Key frame="76" value="3" />
                                                                                                                                            <Key frame="89" value="-22.4" />
                                                                                                                                            <Key frame="100" value="3.86483" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-38.5" />
                                                                                                                                            <Key frame="20" value="-31.3797" />
                                                                                                                                            <Key frame="34" value="6.15002" />
                                                                                                                                            <Key frame="45" value="29.5" />
                                                                                                                                            <Key frame="58" value="21.8" />
                                                                                                                                            <Key frame="65" value="21.2674" />
                                                                                                                                            <Key frame="76" value="-6" />
                                                                                                                                            <Key frame="89" value="-30.5887" />
                                                                                                                                            <Key frame="100" value="7.3" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="4.83164" />
                                                                                                                                            <Key frame="20" value="-86.6" />
                                                                                                                                            <Key frame="34" value="-70.0473" />
                                                                                                                                            <Key frame="45" value="-13.5329" />
                                                                                                                                            <Key frame="58" value="12.483" />
                                                                                                                                            <Key frame="65" value="25.7547" />
                                                                                                                                            <Key frame="76" value="52.3859" />
                                                                                                                                            <Key frame="89" value="55.0226" />
                                                                                                                                            <Key frame="100" value="84.73" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="89.0319" />
                                                                                                                                            <Key frame="20" value="11" />
                                                                                                                                            <Key frame="34" value="4.74856" />
                                                                                                                                            <Key frame="45" value="4.74856" />
                                                                                                                                            <Key frame="58" value="13.0104" />
                                                                                                                                            <Key frame="65" value="10.4615" />
                                                                                                                                            <Key frame="76" value="0.498473" />
                                                                                                                                            <Key frame="89" value="7.56109" />
                                                                                                                                            <Key frame="100" value="8.5279" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-119" />
                                                                                                                                            <Key frame="20" value="-89.4714" />
                                                                                                                                            <Key frame="34" value="-92.4597" />
                                                                                                                                            <Key frame="45" value="-96.5906" />
                                                                                                                                            <Key frame="58" value="-112.323" />
                                                                                                                                            <Key frame="65" value="-111.796" />
                                                                                                                                            <Key frame="76" value="-38.1426" />
                                                                                                                                            <Key frame="89" value="-22.6737" />
                                                                                                                                            <Key frame="100" value="-52.1174" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-0.5" />
                                                                                                                                            <Key frame="20" value="-21.8874" />
                                                                                                                                            <Key frame="34" value="-36.3896" />
                                                                                                                                            <Key frame="45" value="-89.2125" />
                                                                                                                                            <Key frame="58" value="-0.498473" />
                                                                                                                                            <Key frame="65" value="-0.498473" />
                                                                                                                                            <Key frame="76" value="-24.2605" />
                                                                                                                                            <Key frame="89" value="-37.2" />
                                                                                                                                            <Key frame="100" value="-22.5027" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-88.8609" />
                                                                                                                                            <Key frame="20" value="-86.4831" />
                                                                                                                                            <Key frame="34" value="-85.7799" />
                                                                                                                                            <Key frame="45" value="-81.8248" />
                                                                                                                                            <Key frame="58" value="-82.2643" />
                                                                                                                                            <Key frame="65" value="-82.5279" />
                                                                                                                                            <Key frame="76" value="-82.7037" />
                                                                                                                                            <Key frame="89" value="-82.5279" />
                                                                                                                                            <Key frame="100" value="-62.2249" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0.0585718" />
                                                                                                                                            <Key frame="20" value="0.0127537" />
                                                                                                                                            <Key frame="34" value="0.0262082" />
                                                                                                                                            <Key frame="45" value="0.0469355" />
                                                                                                                                            <Key frame="58" value="0.0494809" />
                                                                                                                                            <Key frame="65" value="0.04839" />
                                                                                                                                            <Key frame="76" value="0.0472991" />
                                                                                                                                            <Key frame="89" value="0.04839" />
                                                                                                                                            <Key frame="100" value="0.217844" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-1.57965" />
                                                                                                                                            <Key frame="20" value="-86.6" />
                                                                                                                                            <Key frame="34" value="-71.6342" />
                                                                                                                                            <Key frame="45" value="4.12851" />
                                                                                                                                            <Key frame="58" value="73" />
                                                                                                                                            <Key frame="65" value="43.3" />
                                                                                                                                            <Key frame="76" value="43" />
                                                                                                                                            <Key frame="89" value="74" />
                                                                                                                                            <Key frame="100" value="91.3171" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-87.982" />
                                                                                                                                            <Key frame="20" value="-0.964405" />
                                                                                                                                            <Key frame="34" value="-4.39218" />
                                                                                                                                            <Key frame="45" value="-4.04062" />
                                                                                                                                            <Key frame="58" value="-8.96255" />
                                                                                                                                            <Key frame="65" value="-53.8" />
                                                                                                                                            <Key frame="76" value="-38.8" />
                                                                                                                                            <Key frame="89" value="-48.5" />
                                                                                                                                            <Key frame="100" value="-12.4782" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="119" />
                                                                                                                                            <Key frame="20" value="90.5309" />
                                                                                                                                            <Key frame="34" value="91.9371" />
                                                                                                                                            <Key frame="45" value="102.396" />
                                                                                                                                            <Key frame="58" value="76.0287" />
                                                                                                                                            <Key frame="65" value="71.5" />
                                                                                                                                            <Key frame="76" value="55.7258" />
                                                                                                                                            <Key frame="89" value="55" />
                                                                                                                                            <Key frame="100" value="58.3625" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="6" />
                                                                                                                                            <Key frame="20" value="20.2127" />
                                                                                                                                            <Key frame="34" value="36.5606" />
                                                                                                                                            <Key frame="45" value="48.7775" />
                                                                                                                                            <Key frame="58" value="88.8561" />
                                                                                                                                            <Key frame="65" value="42" />
                                                                                                                                            <Key frame="76" value="42.2" />
                                                                                                                                            <Key frame="89" value="66.1801" />
                                                                                                                                            <Key frame="100" value="39.0215" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="86.4831" />
                                                                                                                                            <Key frame="20" value="88.8609" />
                                                                                                                                            <Key frame="34" value="86.9273" />
                                                                                                                                            <Key frame="45" value="82.9722" />
                                                                                                                                            <Key frame="58" value="80.5112" />
                                                                                                                                            <Key frame="65" value="80.687" />
                                                                                                                                            <Key frame="76" value="80.687" />
                                                                                                                                            <Key frame="89" value="31.2" />
                                                                                                                                            <Key frame="100" value="40.6963" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0.0185718" />
                                                                                                                                            <Key frame="20" value="0.0196627" />
                                                                                                                                            <Key frame="34" value="0.0407536" />
                                                                                                                                            <Key frame="45" value="0.0545718" />
                                                                                                                                            <Key frame="58" value="0.0574809" />
                                                                                                                                            <Key frame="65" value="0.0574809" />
                                                                                                                                            <Key frame="76" value="0.0549355" />
                                                                                                                                            <Key frame="89" value="0.0574809" />
                                                                                                                                            <Key frame="100" value="0.260753" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="1.3" />
                                                                                                                                            <Key frame="20" value="2" />
                                                                                                                                            <Key frame="34" value="-24.9588" />
                                                                                                                                            <Key frame="45" value="-44.6466" />
                                                                                                                                            <Key frame="58" value="-59.6761" />
                                                                                                                                            <Key frame="65" value="-65.621" />
                                                                                                                                            <Key frame="76" value="-65.621" />
                                                                                                                                            <Key frame="89" value="-32.5175" />
                                                                                                                                            <Key frame="100" value="-13.5329" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0" />
                                                                                                                                            <Key frame="20" value="-0.00240423" />
                                                                                                                                            <Key frame="34" value="-0.090296" />
                                                                                                                                            <Key frame="45" value="-17.8444" />
                                                                                                                                            <Key frame="58" value="-14.5924" />
                                                                                                                                            <Key frame="65" value="-18.3718" />
                                                                                                                                            <Key frame="76" value="-13.0104" />
                                                                                                                                            <Key frame="89" value="4.30429" />
                                                                                                                                            <Key frame="100" value="3.42537" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-46.1" />
                                                                                                                                            <Key frame="20" value="-0.00240423" />
                                                                                                                                            <Key frame="34" value="-90.3551" />
                                                                                                                                            <Key frame="45" value="-95.1891" />
                                                                                                                                            <Key frame="58" value="-68.7337" />
                                                                                                                                            <Key frame="65" value="-91.5856" />
                                                                                                                                            <Key frame="76" value="-18.4597" />
                                                                                                                                            <Key frame="89" value="-40.6963" />
                                                                                                                                            <Key frame="100" value="12.0388" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-5.29" />
                                                                                                                                            <Key frame="20" value="114" />
                                                                                                                                            <Key frame="34" value="119.535" />
                                                                                                                                            <Key frame="45" value="99.8474" />
                                                                                                                                            <Key frame="58" value="121.478" />
                                                                                                                                            <Key frame="65" value="121.478" />
                                                                                                                                            <Key frame="76" value="121.478" />
                                                                                                                                            <Key frame="89" value="121.478" />
                                                                                                                                            <Key frame="100" value="-4.39218" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="36.9" />
                                                                                                                                            <Key frame="20" value="-59" />
                                                                                                                                            <Key frame="34" value="-65.2133" />
                                                                                                                                            <Key frame="45" value="-67.9785" />
                                                                                                                                            <Key frame="58" value="-67.9785" />
                                                                                                                                            <Key frame="65" value="-33.748" />
                                                                                                                                            <Key frame="76" value="-67.9785" />
                                                                                                                                            <Key frame="89" value="-67.9785" />
                                                                                                                                            <Key frame="100" value="4.92434" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0" />
                                                                                                                                            <Key frame="20" value="-0.00240423" />
                                                                                                                                            <Key frame="34" value="-0.353971" />
                                                                                                                                            <Key frame="45" value="0.261271" />
                                                                                                                                            <Key frame="58" value="5.62267" />
                                                                                                                                            <Key frame="65" value="0.788621" />
                                                                                                                                            <Key frame="76" value="5.44688" />
                                                                                                                                            <Key frame="89" value="-2.02391" />
                                                                                                                                            <Key frame="100" value="-3.51807" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0" />
                                                                                                                                            <Key frame="20" value="-0.00240423" />
                                                                                                                                            <Key frame="34" value="-0.090296" />
                                                                                                                                            <Key frame="45" value="21.619" />
                                                                                                                                            <Key frame="58" value="17.0486" />
                                                                                                                                            <Key frame="65" value="17.0486" />
                                                                                                                                            <Key frame="76" value="-11.1647" />
                                                                                                                                            <Key frame="89" value="-7.29742" />
                                                                                                                                            <Key frame="100" value="-8.5279" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-46.1" />
                                                                                                                                            <Key frame="20" value="0.00240423" />
                                                                                                                                            <Key frame="34" value="-89.9108" />
                                                                                                                                            <Key frame="45" value="-73.3872" />
                                                                                                                                            <Key frame="58" value="-59.4124" />
                                                                                                                                            <Key frame="65" value="-66.4437" />
                                                                                                                                            <Key frame="76" value="-67.7621" />
                                                                                                                                            <Key frame="89" value="-72.7719" />
                                                                                                                                            <Key frame="100" value="12.2194" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-5.29" />
                                                                                                                                            <Key frame="20" value="114" />
                                                                                                                                            <Key frame="34" value="121.039" />
                                                                                                                                            <Key frame="45" value="16.1697" />
                                                                                                                                            <Key frame="58" value="23.201" />
                                                                                                                                            <Key frame="65" value="20.4764" />
                                                                                                                                            <Key frame="76" value="41.2188" />
                                                                                                                                            <Key frame="89" value="115.399" />
                                                                                                                                            <Key frame="100" value="-5.18802" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="36.9" />
                                                                                                                                            <Key frame="20" value="-59" />
                                                                                                                                            <Key frame="34" value="-65.9212" />
                                                                                                                                            <Key frame="45" value="12.3903" />
                                                                                                                                            <Key frame="58" value="40.6915" />
                                                                                                                                            <Key frame="65" value="52.8695" />
                                                                                                                                            <Key frame="76" value="47.2833" />
                                                                                                                                            <Key frame="89" value="-28.743" />
                                                                                                                                            <Key frame="100" value="4.39218" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0" />
                                                                                                                                            <Key frame="20" value="-0.00240423" />
                                                                                                                                            <Key frame="34" value="0.0854875" />
                                                                                                                                            <Key frame="45" value="25.9257" />
                                                                                                                                            <Key frame="58" value="17.2244" />
                                                                                                                                            <Key frame="65" value="6.76526" />
                                                                                                                                            <Key frame="76" value="2.37067" />
                                                                                                                                            <Key frame="89" value="6.94104" />
                                                                                                                                            <Key frame="100" value="7.73207" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                    </ActuatorList>
                                                                                                                                </Timeline>
                                                                                                                            </Box>
                                                                                                                            <Box name="BackToStand" id="5" tooltip="First motion to Stand up from the back" x="1194" y="231">
                                                                                                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                                                <Timeline enable="1" fps="10" start_frame="0" end_frame="-1" size="300" resources_acquisition="1">
                                                                                                                                    <BehaviorLayer name="behavior_layer1">
                                                                                                                                        <BehaviorKeyframe name="keyframe10" index="10">
                                                                                                                                            <Diagram>
                                                                                                                                                <Box name="Disable Anti-Collision" id="2" tooltip="Disable the collision protection on some specific part of NAO&apos;s body.&#x0A;&#x0A;Note: When this box is unloaded, the collision protection state will be reset to&#x0A;its previous state (enabled or disabled)." x="134" y="41">
                                                                                                                                                    <bitmap>media/images/box/sensors/anti_collision.png</bitmap>
                                                                                                                                                    <script language="4">
                                                                                                                                                        <content>
                                                                                                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.motion = ALProxy( "ALMotion" )
        
    def onLoad(self):
        self.collisionLArmState = self.motion.getCollisionProtectionEnabled("LArm")
        self.collisionRArmState = self.motion.getCollisionProtectionEnabled("RArm")
        
    def onUnload(self):
        self.motion.setCollisionProtectionEnabled("LArm", self.collisionLArmState)
        self.motion.setCollisionProtectionEnabled("RArm", self.collisionRArmState)

    def onInput_onSet(self):
        # enable/disable collision protection
        result = self.motion.setCollisionProtectionEnabled( self.getParameter("Body part"), False )
        if( result ):
            self.success()
        else:
            self.logger.warning( "Disabling collision protection failed. Deactivation succeeds only if the current state of the chain is not in collision. If you want to deactivate collision of both arms, they need to be off collision." )
            self.failure()]]>
</content>
                                                                                                                                                    </script>
                                                                                                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                                    <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="The anti-collision feature is enabled or disabled when this input is stimulated." id="2" />
                                                                                                                                                    <Output name="success" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the collision protection has been successfully enabled or disabled.&#x0A;&#x0A;Note: The only case where there is a failure is when you try to disable the&#x0A;anti-collision while it is currently in collision with some part of his body." id="3" />
                                                                                                                                                    <Output name="failure" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent if the collision protection has failed to be enabled or disabled.&#x0A;&#x0A;Note: The only case where there is a failure is when you try to disable the&#x0A;anti-collision while it is currently in collision with some part of his body." id="4" />
                                                                                                                                                    <Parameter name="Body part" inherits_from_parent="0" content_type="3" value="Arms" default_value="Arms" custom_choice="0" tooltip="Body part which avoids the collision." id="5">
                                                                                                                                                        <Choice value="Arms" />
                                                                                                                                                        <Choice value="LArm" />
                                                                                                                                                        <Choice value="RArm" />
                                                                                                                                                    </Parameter>
                                                                                                                                                </Box>
                                                                                                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                                                                            </Diagram>
                                                                                                                                        </BehaviorKeyframe>
                                                                                                                                    </BehaviorLayer>
                                                                                                                                    <ActuatorList model="Nao">
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-1.40867" />
                                                                                                                                            <Key frame="20" value="-2.73208e-05" />
                                                                                                                                            <Key frame="28" value="2.37067" />
                                                                                                                                            <Key frame="36" value="3.86374e-05" />
                                                                                                                                            <Key frame="43" value="1.93188e-05" />
                                                                                                                                            <Key frame="48" value="1.93187e-05" />
                                                                                                                                            <Key frame="56" value="-29.4461" />
                                                                                                                                            <Key frame="65" value="-17.3171" />
                                                                                                                                            <Key frame="74" value="15.1" />
                                                                                                                                            <Key frame="80" value="6.9" />
                                                                                                                                            <Key frame="86" value="-0.538656" />
                                                                                                                                            <Key frame="105" value="3.77694" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="3.60116" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="28" value="29.5016" />
                                                                                                                                            <Key frame="36" value="-38.5028" />
                                                                                                                                            <Key frame="43" value="0" />
                                                                                                                                            <Key frame="48" value="20" />
                                                                                                                                            <Key frame="56" value="9.84147" />
                                                                                                                                            <Key frame="65" value="19.7732" />
                                                                                                                                            <Key frame="74" value="0.6" />
                                                                                                                                            <Key frame="80" value="1.7" />
                                                                                                                                            <Key frame="86" value="21.707" />
                                                                                                                                            <Key frame="105" value="-2.28759" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="119.496" />
                                                                                                                                            <Key frame="20" value="119.5" />
                                                                                                                                            <Key frame="26" value="111.889" />
                                                                                                                                            <Key frame="36" value="119.496" />
                                                                                                                                            <Key frame="43" value="119.496" />
                                                                                                                                            <Key frame="48" value="119.496" />
                                                                                                                                            <Key frame="56" value="119.008" />
                                                                                                                                            <Key frame="65" value="116.723" />
                                                                                                                                            <Key frame="74" value="82.5327" />
                                                                                                                                            <Key frame="80" value="51.0681" />
                                                                                                                                            <Key frame="86" value="51.0681" />
                                                                                                                                            <Key frame="105" value="84.2027" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="61.5266" />
                                                                                                                                            <Key frame="20" value="21" />
                                                                                                                                            <Key frame="26" value="20" />
                                                                                                                                            <Key frame="36" value="20" />
                                                                                                                                            <Key frame="43" value="21" />
                                                                                                                                            <Key frame="48" value="0.498473" />
                                                                                                                                            <Key frame="56" value="26.1941" />
                                                                                                                                            <Key frame="65" value="32.3466" />
                                                                                                                                            <Key frame="74" value="40.4326" />
                                                                                                                                            <Key frame="80" value="50" />
                                                                                                                                            <Key frame="86" value="39" />
                                                                                                                                            <Key frame="105" value="8.61579" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-43.8556" />
                                                                                                                                            <Key frame="20" value="9" />
                                                                                                                                            <Key frame="26" value="14.7682" />
                                                                                                                                            <Key frame="36" value="5" />
                                                                                                                                            <Key frame="43" value="5" />
                                                                                                                                            <Key frame="48" value="5" />
                                                                                                                                            <Key frame="56" value="4.66067" />
                                                                                                                                            <Key frame="65" value="3.95753" />
                                                                                                                                            <Key frame="74" value="1.49656" />
                                                                                                                                            <Key frame="80" value="-0.0352695" />
                                                                                                                                            <Key frame="86" value="-0.0352695" />
                                                                                                                                            <Key frame="105" value="-52.2932" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-40.6963" />
                                                                                                                                            <Key frame="20" value="-2" />
                                                                                                                                            <Key frame="26" value="-88.5" />
                                                                                                                                            <Key frame="36" value="-89.5017" />
                                                                                                                                            <Key frame="43" value="-40" />
                                                                                                                                            <Key frame="48" value="-0.498473" />
                                                                                                                                            <Key frame="56" value="-5.53958" />
                                                                                                                                            <Key frame="65" value="-1.23289" />
                                                                                                                                            <Key frame="74" value="-10.901" />
                                                                                                                                            <Key frame="80" value="-26" />
                                                                                                                                            <Key frame="86" value="-32.0829" />
                                                                                                                                            <Key frame="105" value="-21.7996" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-66.0043" />
                                                                                                                                            <Key frame="26" value="-98.8758" />
                                                                                                                                            <Key frame="56" value="-61.8734" />
                                                                                                                                            <Key frame="65" value="-61.7855" />
                                                                                                                                            <Key frame="74" value="-61.8734" />
                                                                                                                                            <Key frame="105" value="-62.137" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="26" value="0.0182082" />
                                                                                                                                            <Key frame="43" value="0" />
                                                                                                                                            <Key frame="56" value="0.16439" />
                                                                                                                                            <Key frame="65" value="0.171662" />
                                                                                                                                            <Key frame="74" value="0.176753" />
                                                                                                                                            <Key frame="105" value="0.215298" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="119.496" />
                                                                                                                                            <Key frame="20" value="119.5" />
                                                                                                                                            <Key frame="26" value="116.806" />
                                                                                                                                            <Key frame="36" value="119.496" />
                                                                                                                                            <Key frame="43" value="119.496" />
                                                                                                                                            <Key frame="48" value="119.496" />
                                                                                                                                            <Key frame="56" value="116.454" />
                                                                                                                                            <Key frame="65" value="73.7388" />
                                                                                                                                            <Key frame="74" value="54.842" />
                                                                                                                                            <Key frame="80" value="42.0098" />
                                                                                                                                            <Key frame="86" value="42.0098" />
                                                                                                                                            <Key frame="105" value="91.2292" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-56.1604" />
                                                                                                                                            <Key frame="20" value="-21" />
                                                                                                                                            <Key frame="26" value="-20" />
                                                                                                                                            <Key frame="36" value="-20" />
                                                                                                                                            <Key frame="43" value="-21" />
                                                                                                                                            <Key frame="48" value="-0.498473" />
                                                                                                                                            <Key frame="56" value="-17.1365" />
                                                                                                                                            <Key frame="60" value="-25.4" />
                                                                                                                                            <Key frame="65" value="-4.04062" />
                                                                                                                                            <Key frame="74" value="-15.2908" />
                                                                                                                                            <Key frame="80" value="-28.5624" />
                                                                                                                                            <Key frame="86" value="-28.5624" />
                                                                                                                                            <Key frame="105" value="-12.5661" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="43.5967" />
                                                                                                                                            <Key frame="20" value="-9" />
                                                                                                                                            <Key frame="26" value="-7.02893" />
                                                                                                                                            <Key frame="36" value="-5" />
                                                                                                                                            <Key frame="43" value="-5" />
                                                                                                                                            <Key frame="48" value="-5" />
                                                                                                                                            <Key frame="56" value="112.328" />
                                                                                                                                            <Key frame="65" value="48.9581" />
                                                                                                                                            <Key frame="74" value="14.3288" />
                                                                                                                                            <Key frame="80" value="-4.75993" />
                                                                                                                                            <Key frame="86" value="-4.75993" />
                                                                                                                                            <Key frame="105" value="59.0656" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="35.7695" />
                                                                                                                                            <Key frame="20" value="2" />
                                                                                                                                            <Key frame="26" value="88.5" />
                                                                                                                                            <Key frame="36" value="89.5017" />
                                                                                                                                            <Key frame="43" value="40" />
                                                                                                                                            <Key frame="48" value="0.498473" />
                                                                                                                                            <Key frame="52" value="11" />
                                                                                                                                            <Key frame="56" value="59.9398" />
                                                                                                                                            <Key frame="65" value="50.008" />
                                                                                                                                            <Key frame="74" value="47.547" />
                                                                                                                                            <Key frame="80" value="46.1434" />
                                                                                                                                            <Key frame="86" value="46.1434" />
                                                                                                                                            <Key frame="105" value="39.0215" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="40.4326" />
                                                                                                                                            <Key frame="26" value="102.484" />
                                                                                                                                            <Key frame="56" value="41.5752" />
                                                                                                                                            <Key frame="65" value="41.2236" />
                                                                                                                                            <Key frame="74" value="41.3994" />
                                                                                                                                            <Key frame="105" value="40.7842" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="0.0502082" />
                                                                                                                                            <Key frame="26" value="0.0763898" />
                                                                                                                                            <Key frame="56" value="0.125481" />
                                                                                                                                            <Key frame="65" value="0.154208" />
                                                                                                                                            <Key frame="74" value="0.166208" />
                                                                                                                                            <Key frame="105" value="0.258207" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-26.9804" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="32" value="0.441863" />
                                                                                                                                            <Key frame="36" value="-2.73208e-05" />
                                                                                                                                            <Key frame="43" value="-37.5274" />
                                                                                                                                            <Key frame="56" value="-28.5624" />
                                                                                                                                            <Key frame="65" value="-49.217" />
                                                                                                                                            <Key frame="74" value="-39.9" />
                                                                                                                                            <Key frame="80" value="-23.0475" />
                                                                                                                                            <Key frame="86" value="-23.0475" />
                                                                                                                                            <Key frame="105" value="-13.1814" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="8.52309" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="32" value="1.31597" />
                                                                                                                                            <Key frame="36" value="0" />
                                                                                                                                            <Key frame="43" value="-3.54635" />
                                                                                                                                            <Key frame="48" value="31" />
                                                                                                                                            <Key frame="56" value="31.9902" />
                                                                                                                                            <Key frame="65" value="34.9785" />
                                                                                                                                            <Key frame="74" value="35.9" />
                                                                                                                                            <Key frame="80" value="17" />
                                                                                                                                            <Key frame="86" value="1" />
                                                                                                                                            <Key frame="105" value="3.60116" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="10.6325" />
                                                                                                                                            <Key frame="20" value="-10" />
                                                                                                                                            <Key frame="32" value="16.1697" />
                                                                                                                                            <Key frame="36" value="-10" />
                                                                                                                                            <Key frame="43" value="-66.7243" />
                                                                                                                                            <Key frame="48" value="-90" />
                                                                                                                                            <Key frame="56" value="-87.3668" />
                                                                                                                                            <Key frame="65" value="-89.3883" />
                                                                                                                                            <Key frame="74" value="-59" />
                                                                                                                                            <Key frame="80" value="-51.9" />
                                                                                                                                            <Key frame="86" value="-51.9" />
                                                                                                                                            <Key frame="105" value="11.9509" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="10.9889" />
                                                                                                                                            <Key frame="20" value="96" />
                                                                                                                                            <Key frame="32" value="116.107" />
                                                                                                                                            <Key frame="36" value="96" />
                                                                                                                                            <Key frame="43" value="62.6734" />
                                                                                                                                            <Key frame="48" value="96" />
                                                                                                                                            <Key frame="56" value="69.9642" />
                                                                                                                                            <Key frame="65" value="63.0208" />
                                                                                                                                            <Key frame="74" value="62.1" />
                                                                                                                                            <Key frame="80" value="50.2" />
                                                                                                                                            <Key frame="86" value="101" />
                                                                                                                                            <Key frame="105" value="-4.39218" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="26.7215" />
                                                                                                                                            <Key frame="20" value="14" />
                                                                                                                                            <Key frame="32" value="-21.4432" />
                                                                                                                                            <Key frame="36" value="14" />
                                                                                                                                            <Key frame="43" value="41.102" />
                                                                                                                                            <Key frame="48" value="38" />
                                                                                                                                            <Key frame="56" value="45.003" />
                                                                                                                                            <Key frame="65" value="44.9151" />
                                                                                                                                            <Key frame="74" value="25.3" />
                                                                                                                                            <Key frame="80" value="23.1" />
                                                                                                                                            <Key frame="86" value="-33.2" />
                                                                                                                                            <Key frame="105" value="4.66067" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-9.5826" />
                                                                                                                                            <Key frame="20" value="-4.94951e-06" />
                                                                                                                                            <Key frame="32" value="2.28278" />
                                                                                                                                            <Key frame="36" value="-4.94951e-06" />
                                                                                                                                            <Key frame="43" value="9.21535" />
                                                                                                                                            <Key frame="48" value="-6" />
                                                                                                                                            <Key frame="56" value="-0.529755" />
                                                                                                                                            <Key frame="65" value="5.62267" />
                                                                                                                                            <Key frame="74" value="-25.4" />
                                                                                                                                            <Key frame="80" value="-38.9384" />
                                                                                                                                            <Key frame="86" value="-15.9" />
                                                                                                                                            <Key frame="105" value="-3.60596" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="-2.55126" />
                                                                                                                                            <Key frame="20" value="-8.991e-06" />
                                                                                                                                            <Key frame="32" value="-3.34229" />
                                                                                                                                            <Key frame="36" value="-8.991e-06" />
                                                                                                                                            <Key frame="43" value="3.71174" />
                                                                                                                                            <Key frame="48" value="-31" />
                                                                                                                                            <Key frame="56" value="-8.87947" />
                                                                                                                                            <Key frame="65" value="10.0173" />
                                                                                                                                            <Key frame="74" value="-0.529755" />
                                                                                                                                            <Key frame="80" value="-11" />
                                                                                                                                            <Key frame="86" value="-10" />
                                                                                                                                            <Key frame="105" value="-8.70368" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="14.3288" />
                                                                                                                                            <Key frame="20" value="-10" />
                                                                                                                                            <Key frame="32" value="21.448" />
                                                                                                                                            <Key frame="36" value="-10" />
                                                                                                                                            <Key frame="43" value="-67.4992" />
                                                                                                                                            <Key frame="48" value="-90" />
                                                                                                                                            <Key frame="56" value="-49.1291" />
                                                                                                                                            <Key frame="65" value="-3.24959" />
                                                                                                                                            <Key frame="74" value="-26.1014" />
                                                                                                                                            <Key frame="80" value="-49" />
                                                                                                                                            <Key frame="86" value="-47.8986" />
                                                                                                                                            <Key frame="105" value="12.2194" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="5.2711" />
                                                                                                                                            <Key frame="20" value="96" />
                                                                                                                                            <Key frame="32" value="115.751" />
                                                                                                                                            <Key frame="36" value="96" />
                                                                                                                                            <Key frame="43" value="61.7515" />
                                                                                                                                            <Key frame="48" value="96" />
                                                                                                                                            <Key frame="56" value="120.937" />
                                                                                                                                            <Key frame="65" value="121.024" />
                                                                                                                                            <Key frame="74" value="121.039" />
                                                                                                                                            <Key frame="80" value="121.039" />
                                                                                                                                            <Key frame="86" value="121.039" />
                                                                                                                                            <Key frame="105" value="-5.10012" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="47.2833" />
                                                                                                                                            <Key frame="20" value="14" />
                                                                                                                                            <Key frame="32" value="-26.0184" />
                                                                                                                                            <Key frame="36" value="14" />
                                                                                                                                            <Key frame="43" value="38.8165" />
                                                                                                                                            <Key frame="48" value="38" />
                                                                                                                                            <Key frame="56" value="-26.1062" />
                                                                                                                                            <Key frame="65" value="-63.1087" />
                                                                                                                                            <Key frame="74" value="-68.1542" />
                                                                                                                                            <Key frame="80" value="-68.1542" />
                                                                                                                                            <Key frame="86" value="-68.1542" />
                                                                                                                                            <Key frame="105" value="4.65586" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="10" value="1.93121" />
                                                                                                                                            <Key frame="20" value="0" />
                                                                                                                                            <Key frame="32" value="1.93121" />
                                                                                                                                            <Key frame="36" value="0" />
                                                                                                                                            <Key frame="43" value="-9.80246" />
                                                                                                                                            <Key frame="48" value="6" />
                                                                                                                                            <Key frame="56" value="22.6737" />
                                                                                                                                            <Key frame="65" value="5.71056" />
                                                                                                                                            <Key frame="74" value="-2.46337" />
                                                                                                                                            <Key frame="80" value="-6.76691" />
                                                                                                                                            <Key frame="86" value="-5" />
                                                                                                                                            <Key frame="105" value="7.81996" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                    </ActuatorList>
                                                                                                                                </Timeline>
                                                                                                                            </Box>
                                                                                                                            <Box name="SideToBelly" id="4" tooltip="Lie down on the back or the belly from an other lie down position (on the side)." x="656" y="93">
                                                                                                                                <bitmap>media/images/box/movement/move.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		""

	def onInput_onStop(self):
		""]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                                                                <Timeline enable="1" fps="10" start_frame="0" end_frame="-1" size="300">
                                                                                                                                    <ActuatorList model="Nao">
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="41.3067" />
                                                                                                                                            <Key frame="10" value="41.3067" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="8.52309" />
                                                                                                                                            <Key frame="10" value="8.52309" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="113.383" />
                                                                                                                                            <Key frame="10" value="113.383" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="44.6514" />
                                                                                                                                            <Key frame="10" value="44.6514" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-52.9084" />
                                                                                                                                            <Key frame="10" value="-52.9084" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-19.5144" />
                                                                                                                                            <Key frame="10" value="-19.5144" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-37" />
                                                                                                                                            <Key frame="10" value="-37" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="0.146571" />
                                                                                                                                            <Key frame="10" value="0.146571" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="108.72" />
                                                                                                                                            <Key frame="10" value="108.72" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-45.965" />
                                                                                                                                            <Key frame="10" value="-45.965" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="56.8684" />
                                                                                                                                            <Key frame="10" value="56.8684" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="26.8046" />
                                                                                                                                            <Key frame="10" value="26.8046" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="38.8505" />
                                                                                                                                            <Key frame="10" value="38.8505" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="0.200389" />
                                                                                                                                            <Key frame="10" value="0.200389" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-65.5648" />
                                                                                                                                            <Key frame="10" value="-65.5648" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="1.75543" />
                                                                                                                                            <Key frame="10" value="1.75543" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="23.8163" />
                                                                                                                                            <Key frame="10" value="23.8163" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-5.2711" />
                                                                                                                                            <Key frame="10" value="-5.2711" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="29.9735" />
                                                                                                                                            <Key frame="10" value="29.9735" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="3.86483" />
                                                                                                                                            <Key frame="10" value="3.86483" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-14.4166" />
                                                                                                                                            <Key frame="10" value="-14.4166" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="2.02391" />
                                                                                                                                            <Key frame="10" value="2.02391" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-5.27591" />
                                                                                                                                            <Key frame="10" value="-5.27591" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="20.3885" />
                                                                                                                                            <Key frame="10" value="20.3885" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                        <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                                                                            <Key frame="5" value="-19.6902" />
                                                                                                                                            <Key frame="10" value="-19.6902" />
                                                                                                                                        </ActuatorCurve>
                                                                                                                                    </ActuatorList>
                                                                                                                                </Timeline>
                                                                                                                            </Box>
                                                                                                                            <Box name="Switch Case" id="1" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="923" y="96">
                                                                                                                                <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Back")):
			self.output_1(p)
		elif(p == self.typeConversion("Knee")):
			self.output_2(p)
		elif(p == self.typeConversion("Frog")):
			self.output_3(p)
		elif(p == self.typeConversion("Belly")):
			self.output_4(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
</content>
                                                                                                                                </script>
                                                                                                                                <pluginContent>
                                                                                                                                    <keywords>
                                                                                                                                        <keyword>&quot;Back&quot;</keyword>
                                                                                                                                        <keyword>&quot;Knee&quot;</keyword>
                                                                                                                                        <keyword>&quot;Frog&quot;</keyword>
                                                                                                                                        <keyword>&quot;Belly&quot;</keyword>
                                                                                                                                        <keyword></keyword>
                                                                                                                                    </keywords>
                                                                                                                                </pluginContent>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                                                                                                                <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                                                                                                                <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                                                                                                                <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                                                                                                                <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                                                                                                                <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Switch Case" id="7" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;output matching, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="955" y="621">
                                                                                                                                <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion("Crouch")):
			self.output_1(p)
		elif(p == self.typeConversion("Stand")):
			self.output_2(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
</content>
                                                                                                                                </script>
                                                                                                                                <pluginContent>
                                                                                                                                    <keywords>
                                                                                                                                        <keyword>&quot;Crouch&quot;</keyword>
                                                                                                                                        <keyword>&quot;Stand&quot;</keyword>
                                                                                                                                        <keyword></keyword>
                                                                                                                                    </keywords>
                                                                                                                                </pluginContent>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Value to test." id="2" />
                                                                                                                                <Output name="onDefault" type="1" type_size="1" nature="1" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                                                                                                                <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                                                                                                                <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Get Robot Pose" id="8" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="89" y="41">
                                                                                                                                <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPose")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                                                                                                                <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Get Robot Pose" id="10" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="794" y="96">
                                                                                                                                <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPose")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                                                                                                                <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                                                                                                            </Box>
                                                                                                                            <Box name="Get Robot Pose" id="2" tooltip="Return NAO&apos;s current pose.&#x0A;&#x0A;Note: The box waits for the robot pose to be stabilized. You can set the maximum&#x0A;time to wait in parameters. After this time is ellapsed, the current pose is sent to the&#x0A;output anyway." x="828" y="626">
                                                                                                                                <bitmap>media/images/box/sensors/inertial_unit.png</bitmap>
                                                                                                                                <script language="4">
                                                                                                                                    <content>
                                                                                                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.robotPoseProxy = ALProxy("ALRobotPose")
        self.threadTime = 0.1 #seconds

    def onLoad(self):
        self.bIsRunning = False
        self.bMustStop = False

    def onUnload(self):
        self.bMustStop = True

    def onInput_onStart(self):
        if( self.bIsRunning ):
            return
        self.bIsRunning = True
        self.bMustStop = False
        beginTime = time.time()
        RobotPoseAndTime = ["Unknown", 0.]
        while( not self.bMustStop ):
            RobotPoseAndTime = self.robotPoseProxy.getActualPoseAndTime()
            # as soon as the robot is not moving anymore from its position, give its position
            if( RobotPoseAndTime[1] > 0.5 or time.time() - beginTime > self.getParameter("Time to wait for pose stabilization (s)") ):
                self.bMustStop = True
            if( not self.bMustStop ):
                time.sleep(self.threadTime)
        self.robotPose(RobotPoseAndTime[0])
        self.bIsRunning = False]]>
</content>
                                                                                                                                </script>
                                                                                                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                                                                <Output name="robotPose" type="3" type_size="1" nature="2" inner="0" tooltip='NAO&apos;s current pose. It can be:&#x0A;- &quot;Unknown&quot;&#x0A;- &quot;Stand&quot;&#x0A;- &quot;Sit&quot;&#x0A;- &quot;Crouch&quot;&#x0A;- &quot;Knee&quot;&#x0A;- &quot;Frog&quot;&#x0A;- &quot;Back&quot;&#x0A;- &quot;Belly&quot;&#x0A;- &quot;Left&quot;&#x0A;- &quot;Right&quot;&#x0A;- &quot;HeadBack&quot;' id="3" />
                                                                                                                                <Parameter name="Time to wait for pose stabilization (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0.5" max="10" tooltip="Maximum time to wait NAO&apos;s pose stabilization. After this time is ellapsed,&#x0A;the current pose is sent to the output even though it is not stabilized." id="4" />
                                                                                                                            </Box>
                                                                                                                            <Link inputowner="0" indexofinput="4" outputowner="9" indexofoutput="3" />
                                                                                                                            <Link inputowner="16" indexofinput="2" outputowner="9" indexofoutput="7" />
                                                                                                                            <Link inputowner="16" indexofinput="2" outputowner="9" indexofoutput="8" />
                                                                                                                            <Link inputowner="16" indexofinput="2" outputowner="9" indexofoutput="9" />
                                                                                                                            <Link inputowner="5" indexofinput="2" outputowner="9" indexofoutput="6" />
                                                                                                                            <Link inputowner="0" indexofinput="4" outputowner="5" indexofoutput="4" />
                                                                                                                            <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                                                                                                            <Link inputowner="0" indexofinput="4" outputowner="16" indexofoutput="4" />
                                                                                                                            <Link inputowner="5" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                                                            <Link inputowner="16" indexofinput="2" outputowner="1" indexofoutput="5" />
                                                                                                                            <Link inputowner="16" indexofinput="2" outputowner="1" indexofoutput="6" />
                                                                                                                            <Link inputowner="16" indexofinput="2" outputowner="1" indexofoutput="7" />
                                                                                                                            <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="3" />
                                                                                                                            <Link inputowner="3" indexofinput="2" outputowner="9" indexofoutput="10" />
                                                                                                                            <Link inputowner="4" indexofinput="2" outputowner="9" indexofoutput="4" />
                                                                                                                            <Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="11" />
                                                                                                                            <Link inputowner="4" indexofinput="2" outputowner="9" indexofoutput="5" />
                                                                                                                            <Link inputowner="3" indexofinput="2" outputowner="7" indexofoutput="4" />
                                                                                                                            <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="3" />
                                                                                                                            <Link inputowner="3" indexofinput="2" outputowner="7" indexofoutput="5" />
                                                                                                                            <Link inputowner="8" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                                            <Link inputowner="9" indexofinput="2" outputowner="8" indexofoutput="3" />
                                                                                                                            <Link inputowner="10" indexofinput="2" outputowner="4" indexofoutput="4" />
                                                                                                                            <Link inputowner="1" indexofinput="2" outputowner="10" indexofoutput="3" />
                                                                                                                            <Link inputowner="2" indexofinput="2" outputowner="12" indexofoutput="4" />
                                                                                                                            <Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                                                        </Diagram>
                                                                                                                    </BehaviorKeyframe>
                                                                                                                </BehaviorLayer>
                                                                                                            </Timeline>
                                                                                                        </Box>
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="10" indexofoutput="4" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="7" indexofoutput="3" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="10" indexofoutput="5" />
                                                                                                        <Link inputowner="0" indexofinput="5" outputowner="10" indexofoutput="6" />
                                                                                                        <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="10" indexofoutput="3" />
                                                                                                        <Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="3" />
                                                                                                        <Link inputowner="9" indexofinput="2" outputowner="4" indexofoutput="3" />
                                                                                                        <Link inputowner="10" indexofinput="2" outputowner="9" indexofoutput="3" />
                                                                                                        <Link inputowner="9" indexofinput="2" outputowner="20" indexofoutput="4" />
                                                                                                        <Link inputowner="20" indexofinput="2" outputowner="6" indexofoutput="3" />
                                                                                                        <Link inputowner="6" indexofinput="2" outputowner="7" indexofoutput="4" />
                                                                                                        <Link inputowner="9" indexofinput="2" outputowner="1" indexofoutput="4" />
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="6" indexofoutput="4" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                        </Timeline>
                                                                                        <Resource name="All motors" type="Lock" timeout="0" />
                                                                                    </Box>
                                                                                    <Box name="GotoFailure" id="3" tooltip="Jump to the frame name set in parameters and stop the parent timeline.&#x0A;&#x0A;!!Warning!! This box does not stop the behavior! It is only the timeline which will&#x0A;stop playing, the keyframes and boxes will still be running." x="280" y="100">
                                                                                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onInput_onGo(self):
        try:
            self.getParentTimeline().goTo(self.getParameter("Frame name"))
        except: # if NAOqi < 1.14
            self.gotoAndStopParent(self.getParameter("Frame name"))]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                                        <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="Failure" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                    <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="5" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                            <BehaviorKeyframe name="Failure" index="50">
                                                                                <Diagram>
                                                                                    <Box name="Say" id="1" tooltip="Say some text. Note that you must open the box to enter the text." x="203" y="80">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                                                        <Timeline enable="0">
                                                                                            <BehaviorLayer name="behavior_layer1">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1">
                                                                                                    <Diagram>
                                                                                                        <Box name="Say Text" id="2" tooltip="Say the text received on its input." x="422" y="65">
                                                                                                            <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []
        
    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                                            <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                                            <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                                        </Box>
                                                                                                        <Box name="Localized Text" id="5" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                                                            <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Could you please help me? ",
			"French" : " Pourrais tu m\'aider? ",
			"German" : " Hallo ",
			"Italian" : " Ciao ",
			"Japanese" : " 手伝ってもらえませんか？ ",
			"Korean" : " 안녕하세요  ",
			"Portuguese" : " Olá ",
			"Brazilian" : "  ",
			"Spanish" : " Hola ",
			"Arabic" : "  ",
			"Polish" : "  ",
			"Czech" : "  ",
			"Dutch" : "  ",
			"Danish" : "  ",
			"Finnish" : "  ",
			"Swedish" : "  ",
			"Russian" : "  ",
			"Turkish" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                                            </script>
                                                                                                            <pluginContent>
                                                                                                                <chinese>你好</chinese>
                                                                                                                <english>Could you please help me?</english>
                                                                                                                <french>Pourrais tu m&apos;aider?</french>
                                                                                                                <german>Hallo</german>
                                                                                                                <italian>Ciao</italian>
                                                                                                                <japanese>手伝ってもらえませんか？</japanese>
                                                                                                                <korean>안녕하세요 </korean>
                                                                                                                <portuguese>Olá</portuguese>
                                                                                                                <brazilian></brazilian>
                                                                                                                <spanish>Hola</spanish>
                                                                                                                <arabic></arabic>
                                                                                                                <polish></polish>
                                                                                                                <czech></czech>
                                                                                                                <dutch></dutch>
                                                                                                                <danish></danish>
                                                                                                                <finnish></finnish>
                                                                                                                <swedish></swedish>
                                                                                                                <russian></russian>
                                                                                                                <turkish></turkish>
                                                                                                                <language>2</language>
                                                                                                            </pluginContent>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                                            <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                                        <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                    <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="4" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                    <Resource name="All motors" type="Lock" timeout="5" />
                                                                </Box>
                                                                <Link inputowner="22" indexofinput="2" outputowner="18" indexofoutput="11" />
                                                                <Link inputowner="22" indexofinput="2" outputowner="18" indexofoutput="9" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="22" indexofoutput="3" />
                                                                <Link inputowner="21" indexofinput="2" outputowner="18" indexofoutput="10" />
                                                                <Link inputowner="21" indexofinput="2" outputowner="18" indexofoutput="12" />
                                                                <Link inputowner="27" indexofinput="2" outputowner="21" indexofoutput="3" />
                                                                <Link inputowner="6" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                                <Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="8" />
                                                                <Link inputowner="7" indexofinput="2" outputowner="18" indexofoutput="15" />
                                                                <Link inputowner="7" indexofinput="2" outputowner="18" indexofoutput="16" />
                                                                <Link inputowner="10" indexofinput="2" outputowner="11" indexofoutput="4" />
                                                                <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="15" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="18" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="5" outputowner="6" indexofoutput="4" />
                                                                <Link inputowner="13" indexofinput="2" outputowner="18" indexofoutput="15" />
                                                                <Link inputowner="11" indexofinput="2" outputowner="12" indexofoutput="4" />
                                                                <Link inputowner="12" indexofinput="2" outputowner="18" indexofoutput="16" />
                                                                <Link inputowner="0" indexofinput="5" outputowner="18" indexofoutput="15" />
                                                                <Link inputowner="0" indexofinput="5" outputowner="18" indexofoutput="16" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="8" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="15" indexofoutput="8" />
                                                                <Link inputowner="9" indexofinput="2" outputowner="11" indexofoutput="3" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="13" indexofoutput="4" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="9" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Box name="BreathLoop" id="2" tooltip="Enter tooltip here" x="544" y="127">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="BreathLoop_1" id="6" tooltip="tags:&#x0A;breath; loop" x="96" y="158">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.oldfps = ALFrameManager.getTimelineFps(self.getName())
        try:
            frameNumber.increaseParent( self.getName() );
        except BaseException, err:
            # if you don't want to use some encapsulated sub box, you will in that case. no worry...
            pass

    def onLoad(self):
        #puts code for box cleanup here
        pass

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        newfps = (self.oldfps * self.getParameter("FPS (%)")) / 100
        ALFrameManager.setTimelineFps(self.getName(), newfps)
        pass

    def onInput_onStop(self):
        self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                                    <Parameter name="FPS (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="20" max="200" tooltip="" id="5" />
                                                                    <Timeline enable="1" fps="25" start_frame="0" end_frame="191" size="300">
                                                                        <BehaviorLayer name="event">
                                                                            <BehaviorKeyframe name="loop" index="179">
                                                                                <Diagram>
                                                                                    <Box name="Goto And Play" id="2" tooltip="Jump to a given frame (edit parameters to modify it) and start playing from this index." x="93" y="24">
                                                                                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        self.gotoAndPlayParent(self.getParameter("Frame number"))

    def onInput_onStop(self):
        ""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                                        <Parameter name="Frame number" inherits_from_parent="0" content_type="1" value="1" default_value="1" min="0" max="10000" tooltip="" id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <ActuatorList model="Nao">
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="80" value="-0.79343" />
                                                                                <Key frame="105" value="-0.881321" />
                                                                                <Key frame="155" value="-0.705538" />
                                                                                <Key frame="180" value="-1.40867" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="80" value="-4.57277" />
                                                                                <Key frame="105" value="-4.57277" />
                                                                                <Key frame="155" value="-12.3072" />
                                                                                <Key frame="180" value="-14.5045" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="77" value="90.1745" />
                                                                                <Key frame="102" value="90.7897" />
                                                                                <Key frame="152" value="89.9108" />
                                                                                <Key frame="177" value="90.8776" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="77" value="7.11683" />
                                                                                <Key frame="102" value="6.94104" />
                                                                                <Key frame="152" value="6.76526" />
                                                                                <Key frame="177" value="6.76526" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="77" value="-66.3607" />
                                                                                <Key frame="102" value="-68.9974" />
                                                                                <Key frame="152" value="-69.2611" />
                                                                                <Key frame="177" value="-68.8216" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="77" value="-37.1758" />
                                                                                <Key frame="102" value="-38.67" />
                                                                                <Key frame="152" value="-33.0449" />
                                                                                <Key frame="177" value="-34.2754" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="77" value="6.58948" />
                                                                                <Key frame="102" value="6.41369" />
                                                                                <Key frame="152" value="6.15002" />
                                                                                <Key frame="177" value="6.15002" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="77" value="0.345455" />
                                                                                <Key frame="102" value="0.381818" />
                                                                                <Key frame="152" value="0.23348" />
                                                                                <Key frame="177" value="0.23348" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="73" value="87.8941" />
                                                                                <Key frame="98" value="89.9156" />
                                                                                <Key frame="148" value="86.8394" />
                                                                                <Key frame="173" value="87.982" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="73" value="-4.66067" />
                                                                                <Key frame="98" value="-3.95753" />
                                                                                <Key frame="148" value="-4.3091" />
                                                                                <Key frame="173" value="-4.48488" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="73" value="76.6" />
                                                                                <Key frame="98" value="77.8" />
                                                                                <Key frame="148" value="76.6" />
                                                                                <Key frame="173" value="74.2" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="73" value="31.204" />
                                                                                <Key frame="98" value="33.4013" />
                                                                                <Key frame="148" value="26.0184" />
                                                                                <Key frame="173" value="26.8973" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="73" value="10.193" />
                                                                                <Key frame="98" value="10.1051" />
                                                                                <Key frame="148" value="10.1051" />
                                                                                <Key frame="173" value="10.1051" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="73" value="0.40948" />
                                                                                <Key frame="98" value="0.40948" />
                                                                                <Key frame="148" value="0.309091" />
                                                                                <Key frame="173" value="0.309091" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="75" value="-8.52309" />
                                                                                <Key frame="100" value="-8.52309" />
                                                                                <Key frame="150" value="-8.17153" />
                                                                                <Key frame="175" value="-8.4352" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="75" value="3.43018" />
                                                                                <Key frame="100" value="3.43018" />
                                                                                <Key frame="150" value="7.56109" />
                                                                                <Key frame="175" value="7.56109" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="75" value="12.0436" />
                                                                                <Key frame="100" value="11.9557" />
                                                                                <Key frame="150" value="12.1315" />
                                                                                <Key frame="175" value="12.0436" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="75" value="-5.18802" />
                                                                                <Key frame="100" value="-5.10012" />
                                                                                <Key frame="150" value="-5.18802" />
                                                                                <Key frame="175" value="-5.18802" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="75" value="3.24959" />
                                                                                <Key frame="100" value="3.33748" />
                                                                                <Key frame="150" value="3.42537" />
                                                                                <Key frame="175" value="3.24959" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="75" value="-4.04062" />
                                                                                <Key frame="100" value="-4.04062" />
                                                                                <Key frame="150" value="-7.20472" />
                                                                                <Key frame="175" value="-7.29261" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="75" value="-6.3258" />
                                                                                <Key frame="100" value="-6.23791" />
                                                                                <Key frame="150" value="-2.01911" />
                                                                                <Key frame="175" value="-1.93121" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="75" value="10.5446" />
                                                                                <Key frame="100" value="10.6325" />
                                                                                <Key frame="150" value="11.1598" />
                                                                                <Key frame="175" value="11.1598" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="75" value="-4.2164" />
                                                                                <Key frame="100" value="-4.2164" />
                                                                                <Key frame="150" value="-4.30429" />
                                                                                <Key frame="175" value="-4.39218" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="75" value="3.60596" />
                                                                                <Key frame="100" value="3.69386" />
                                                                                <Key frame="150" value="3.60596" />
                                                                                <Key frame="175" value="3.43018" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="75" value="5.80326" />
                                                                                <Key frame="100" value="5.62747" />
                                                                                <Key frame="150" value="2.55126" />
                                                                                <Key frame="175" value="2.55126" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                    <Resource name="Standing" type="Stop on demand" timeout="2" />
                                                                    <Resource name="HeadYaw" type="Stop on demand" timeout="2" />
                                                                    <Resource name="HeadPitch" type="Stop on demand" timeout="2" />
                                                                    <Resource name="LShoulderPitch" type="Stop on demand" timeout="2" />
                                                                    <Resource name="LShoulderRoll" type="Stop on demand" timeout="2" />
                                                                    <Resource name="LElbowRoll" type="Stop on demand" timeout="2" />
                                                                    <Resource name="LElbowYaw" type="Stop on demand" timeout="2" />
                                                                    <Resource name="LWristYaw" type="Stop on demand" timeout="2" />
                                                                    <Resource name="LHand" type="Stop on demand" timeout="2" />
                                                                    <Resource name="RShoulderPitch" type="Stop on demand" timeout="2" />
                                                                    <Resource name="RShoulderRoll" type="Stop on demand" timeout="2" />
                                                                    <Resource name="RElbowRoll" type="Stop on demand" timeout="2" />
                                                                    <Resource name="RElbowYaw" type="Stop on demand" timeout="2" />
                                                                    <Resource name="RWristYaw" type="Stop on demand" timeout="2" />
                                                                    <Resource name="RHand" type="Stop on demand" timeout="2" />
                                                                    <Resource name="LHipYawPitch" type="Stop on demand" timeout="2" />
                                                                    <Resource name="LHipPitch" type="Stop on demand" timeout="2" />
                                                                    <Resource name="LHipRoll" type="Stop on demand" timeout="2" />
                                                                    <Resource name="LKneePitch" type="Stop on demand" timeout="2" />
                                                                    <Resource name="LAnklePitch" type="Stop on demand" timeout="2" />
                                                                    <Resource name="LAnkleRoll" type="Stop on demand" timeout="2" />
                                                                    <Resource name="RHipPitch" type="Stop on demand" timeout="2" />
                                                                    <Resource name="RHipRoll" type="Stop on demand" timeout="2" />
                                                                    <Resource name="RKneePitch" type="Stop on demand" timeout="2" />
                                                                    <Resource name="RAnklePitch" type="Stop on demand" timeout="2" />
                                                                    <Resource name="RAnkleRoll" type="Stop on demand" timeout="2" />
                                                                </Box>
                                                                <Box name="BreathLoop_1" id="9" tooltip="tags:&#x0A;breath; loop" x="96" y="43">
                                                                    <bitmap>media/images/box/movement/sit_ground.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.oldfps = ALFrameManager.getTimelineFps(self.getName())
        try:
            frameNumber.increaseParent( self.getName() );
        except BaseException, err:
            # if you don't want to use some encapsulated sub box, you will in that case. no worry...
            pass

    def onLoad(self):
        #puts code for box cleanup here
        pass

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        newfps = (self.oldfps * self.getParameter("FPS (%)")) / 100
        ALFrameManager.setTimelineFps(self.getName(), newfps)
        pass

    def onInput_onStop(self):
        self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="FPS (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="20" max="200" tooltip="" id="5" />
                                                                    <Timeline enable="1" fps="25" start_frame="0" end_frame="235" size="300">
                                                                        <BehaviorLayer name="event">
                                                                            <BehaviorKeyframe name="keyframe227" index="227">
                                                                                <Diagram>
                                                                                    <Box name="Goto And Play (number)" id="5" tooltip="Jump to the frame number set in parameters and start playing the parent timeline." x="106" y="35">
                                                                                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onInput_onGo(self):
        self.gotoAndPlayParent(self.getParameter("Frame number"))]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                                        <Parameter name="Frame number" inherits_from_parent="0" content_type="1" value="1" default_value="1" min="0" max="10000" tooltip="Number of the frame you want to go to." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <ActuatorList model="Nao">
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="103" value="-1.23289" />
                                                                                <Key frame="128" value="-1.23289" />
                                                                                <Key frame="203" value="-1.23289" />
                                                                                <Key frame="228" value="-0.969213" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="103" value="0.261271" />
                                                                                <Key frame="128" value="0.261271" />
                                                                                <Key frame="203" value="4.4" />
                                                                                <Key frame="228" value="2.98591" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="101" value="53.5237" />
                                                                                <Key frame="126" value="53.5237" />
                                                                                <Key frame="201" value="52.9963" />
                                                                                <Key frame="226" value="53.1721" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="101" value="4.39218" />
                                                                                <Key frame="126" value="4.39218" />
                                                                                <Key frame="201" value="5.62267" />
                                                                                <Key frame="226" value="5.62267" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="101" value="-34.7196" />
                                                                                <Key frame="126" value="-34.7196" />
                                                                                <Key frame="201" value="-31.9071" />
                                                                                <Key frame="226" value="-32.5223" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="101" value="-60.6429" />
                                                                                <Key frame="126" value="-60.6429" />
                                                                                <Key frame="201" value="-62.8402" />
                                                                                <Key frame="226" value="-61.7855" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="101" value="14.8513" />
                                                                                <Key frame="126" value="14.7634" />
                                                                                <Key frame="201" value="3.60116" />
                                                                                <Key frame="226" value="5.2711" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="101" value="0.1248" />
                                                                                <Key frame="126" value="0.1248" />
                                                                                <Key frame="201" value="0.2" />
                                                                                <Key frame="226" value="0.2" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="99" value="56.6926" />
                                                                                <Key frame="124" value="56.6047" />
                                                                                <Key frame="199" value="56.4289" />
                                                                                <Key frame="224" value="56.7805" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="99" value="-11.6041" />
                                                                                <Key frame="124" value="-11.6041" />
                                                                                <Key frame="199" value="-11.7799" />
                                                                                <Key frame="224" value="-11.8678" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="99" value="36.7363" />
                                                                                <Key frame="124" value="36.6484" />
                                                                                <Key frame="199" value="36.4727" />
                                                                                <Key frame="224" value="36.8242" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="99" value="68.6458" />
                                                                                <Key frame="124" value="68.7337" />
                                                                                <Key frame="199" value="67.4154" />
                                                                                <Key frame="224" value="67.4154" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="99" value="-18.196" />
                                                                                <Key frame="124" value="-18.196" />
                                                                                <Key frame="199" value="-7.29742" />
                                                                                <Key frame="224" value="-8.26423" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="99" value="0.224" />
                                                                                <Key frame="124" value="0.2244" />
                                                                                <Key frame="199" value="0.3" />
                                                                                <Key frame="224" value="0.3" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="100" value="-41.7462" />
                                                                                <Key frame="125" value="-41.6583" />
                                                                                <Key frame="200" value="-41.3067" />
                                                                                <Key frame="225" value="-41.3067" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="100" value="16.7018" />
                                                                                <Key frame="125" value="16.7018" />
                                                                                <Key frame="200" value="18.1081" />
                                                                                <Key frame="225" value="18.0202" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="100" value="-88.8561" />
                                                                                <Key frame="125" value="-89.2077" />
                                                                                <Key frame="200" value="-89.1198" />
                                                                                <Key frame="225" value="-89.1198" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="100" value="80.1548" />
                                                                                <Key frame="125" value="79.8912" />
                                                                                <Key frame="200" value="85.1647" />
                                                                                <Key frame="225" value="84.9889" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="100" value="50.0959" />
                                                                                <Key frame="125" value="50.0959" />
                                                                                <Key frame="200" value="46.9318" />
                                                                                <Key frame="225" value="46.9318" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="100" value="0.178188" />
                                                                                <Key frame="125" value="0.178188" />
                                                                                <Key frame="200" value="0.266079" />
                                                                                <Key frame="225" value="0.353971" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="100" value="-16.9607" />
                                                                                <Key frame="125" value="-16.8728" />
                                                                                <Key frame="200" value="-17.4002" />
                                                                                <Key frame="225" value="-17.2244" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="100" value="-90.7067" />
                                                                                <Key frame="125" value="-90.6188" />
                                                                                <Key frame="200" value="-90.6188" />
                                                                                <Key frame="225" value="-90.6188" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="100" value="83.8511" />
                                                                                <Key frame="125" value="83.6753" />
                                                                                <Key frame="200" value="88.8609" />
                                                                                <Key frame="225" value="88.773" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="100" value="47.4639" />
                                                                                <Key frame="125" value="47.4639" />
                                                                                <Key frame="200" value="44.3877" />
                                                                                <Key frame="225" value="44.4756" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="100" value="0.617646" />
                                                                                <Key frame="125" value="0.617646" />
                                                                                <Key frame="200" value="-0.0854875" />
                                                                                <Key frame="225" value="-0.173379" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                    <Resource name="Sitting" type="Stop on demand" timeout="5" />
                                                                    <Resource name="Arms" type="Stop on demand" timeout="5" />
                                                                    <Resource name="Legs" type="Stop on demand" timeout="5" />
                                                                </Box>
                                                                <Link inputowner="9" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="3" />
                                            <Link inputowner="3" indexofinput="3" outputowner="0" indexofoutput="5" />
                                            <Link inputowner="8" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="1" indexofinput="2" outputowner="8" indexofoutput="3" />
                                            <Link inputowner="3" indexofinput="4" outputowner="4" indexofoutput="5" />
                                            <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="2" indexofinput="2" outputowner="3" indexofoutput="7" />
                                            <Link inputowner="2" indexofinput="2" outputowner="7" indexofoutput="6" />
                                            <Link inputowner="2" indexofinput="3" outputowner="3" indexofoutput="8" />
                                            <Link inputowner="3" indexofinput="5" outputowner="7" indexofoutput="5" />
                                            <Link inputowner="7" indexofinput="2" outputowner="3" indexofoutput="9" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="Interactive Activities" index="79" bitmap="media/images/box/interaction/social_behavior.png">
                                        <Diagram scale="89.0899">
                                            <Box name="QuestionAndChoice" id="2" tooltip="this box return the question to ask and the list of alternative behaviors." x="258" y="60">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[#coding=utf-8
import random

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        self.previous = None

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onPreferedBehaviors(self, dummy):
        #~ self.onQuestion(p) #~ activate output of the box

        global NAO_LIFE_BEHAVIORS_LIST
        behaviors = NAO_LIFE_BEHAVIORS_LIST

        if len(behaviors) == 0:
            self.log("No behaviors found")
            self.onNothing()
            return

        # Pick the last installed behaviors
        best = None

        if random.random() > 2.0/3.0:
            best = random.choice(behaviors)

        sentences = {
            "french": [u"je lancerais bien %s"],
            "english": [u"I'd like to start %s"],
            "finnish": [u"Haluan käynnistää ohjelman %s"],
            "chinese": [u"我想要开始 %s"],
            "german": [u"Ich würde jetzt gerne %s starten."],
            "japanese": [u"%sが始めたい。いいですか？"]
        }

        sentences_positives = {
            "french": [u"ok", u"oui"],
            "english": [u"ok", u"yes"],
            "chinese": [u"好",u"是"],
            "german": [u"okey", u"ja"],
            "finnish": [u"okei", u"joo", u"kyllä"],
            "japanese": [u"オッケー", u"はい"]
        }

        sentences_no_proposition = {
            "french": [u"Que veux tu que je fasse ?", u"Je peut faire quelque chose pour toi ?"],
            "english": [u"What do you want me to do ?", u"Do you want something ?"],
            "chinese": [u"你想让我做什么", u"你想要什么"],
            "german": [u"Was soll ich tun ?", u"Willst du etwas von mir ?", u"Möchtest du etwas bestimmtes ?"],
            "finnish": [u"Mitä haluat minun tekevän?", u"Miten voin auttaa?"],
            "japanese": [u"何をして欲しいですか？", u"何かお手伝いできる事はありますか？"]
        }

        sentences_leaving = {
            "french": ["Sortir", "Quitter", "Non", "Négatif", "Rien", "Rien du tout"],
            "english": ["Leave", "Quit", "No", "Negative", "Nothing", "Nothing at all"],
            "chinese": ["离开", "结束", "不", "没有"],
            "german": ["Verlassen", "Beenden", "Nein", "Gar nichts", "Nichts"],
            "finnish": ["Lopeta", "Lopetus", "En mitään", "Älä tee mitään", "Ei", "Loppu"],
            "japanese": ["いいえ", "よくない", "終了", "何も", "待機"]
        }

        tts = ALProxy("ALTextToSpeech")
        lang = tts.getLanguage().lower()

        #Proposition sentence:
        if best is not None:
            to_pick = sentences[lang]
            question = random.choice(to_pick) % self.takeOffHyphens(best.name)
        #No proposition (question) sentence:
        else:
            to_pick = sentences_no_proposition[lang]
            question = random.choice(to_pick)

        #Retrieve recognized sentences:
        others = []
        for b in behaviors:
            ts = [] #trigger sentences for b

            #Add name first
            if b.name is not None and b.name.lower() != "none":
                ts.append(b.name.encode("utf-8").replace('-', ' '))

            #Add localized trigger sentences
            trig = b.trigger_sentences
            if trig is not None:
                ts += [s.encode("utf-8") for s in trig]

            #Add positive answers if the behavior is the one proposed
            if b == best:
                ts += [s.encode("utf-8") for s in sentences_positives[lang]]

            #save in the list
            others.append(ts)

        #Leaving answers:
        try:
            others.append(sentences_leaving[lang])
        except Exception as e:
            self.log(str(e))

        self.log(str(others))

        self.onChoices(others)
        self.onQuestion(question.encode("utf-8"))
        
    def takeOffHyphens(self, name):
        return name.replace('-', ' ')]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onPreferedBehaviors" type="0" type_size="1" nature="1" inner="0" tooltip="set the sorted list of prefered behaviors." id="2" />
                                                <Output name="onQuestion" type="3" type_size="1" nature="2" inner="0" tooltip="Return the question to be asked to user" id="3" />
                                                <Output name="onChoices" type="0" type_size="1" nature="2" inner="0" tooltip="Return an array of sentences to be recognized." id="4" />
                                                <Output name="onNothing" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                            </Box>
                                            <Box name="PlayBehavior" id="8" tooltip="Load and play a subBehavior." x="1189" y="94">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import os
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.bm = ALProxy("ALBehaviorManager")
        self.bIsRunning = False
        self.bStop = False

    def onLoad(self):
        self.sBehavior = ""
        self.bIsRunning = False
        self.bStop = False
        self.nBehaviorTaskID = -1

    def stopBehavior(self):
        if self.bm.isBehaviorRunning(self.sBehavior):
            try:
                self.bm.post.stopBehavior(self.sBehavior) # if we don't do post here, this line of code never returns
                #self.bm.stopBehavior(self.sBehavior) # never returns
                #self.bm.stop(self.nBehaviorTaskID) # doesn't work (not implemented)
            except Exception as e:
                self.log("ERROR: " + str(e))

        self.nBehaviorTaskID = -1
        self.sBehavior = ""

    def onUnload(self):
        self.bStop = True
        self.stopBehavior()

    def onInput_onStart(self, p):
        global NAO_LIFE_BEHAVIORS_LIST

        if self.bIsRunning:
            return
        self.bIsRunning = True

        try:
            self.sBehavior = NAO_LIFE_BEHAVIORS_LIST[p].id
        except Exception as e:
            self.log("Choice : %i doesn't exist - Error: %s" % (p, str(e)))
            self.onStopped()
            return

        try:
            if not self.bStop:
                bLoad = self.bm.preloadBehavior(self.sBehavior)
                self.onLoaded()
        except Exception as e:
            self.log("ERROR: " + str(e))

        try:
            if not self.bStop:
                self.bm.runBehavior(self.sBehavior) # using this often prevents this box from exiting
                #self.nBehaviorTaskID = self.bm.post.runBehavior(self.sBehavior)
                #self.bm.wait(self.nBehaviorTaskID, 0)
                self.nBehaviorTaskID = -1
                self.sBehavior = ""
        except Exception as e:
            self.log("ERROR: " + str(e))

        self.bIsRunning = False
        self.onStopped()

    def onInput_onStop(self):
        self.bStop = True
        # Allow 10 seconds for behavior to exit cleanly
        count = 10
        while self.bm.isBehaviorRunning(self.sBehavior) and count:
            time.sleep(1)
            count = count - 1
        if count == 0:
            self.log("Misbehaving behavior is being forcefully exited")

        self.onUnload()
        self.bStop = False
        self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onError" type="3" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                                                <Output name="onLoaded" type="1" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                                            </Box>
                                            <Box name="Wait For Signals" id="6" tooltip="Wait for both inputs to be stimulated before stimulating its output." x="405" y="20">
                                                <bitmap>media/images/box/wait.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.stock = ""

    def onLoad(self):
        self.ok = [False]*2

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onStart(self, nInput):
        self.ok[nInput-1] = True
        bOutput = True
        for bOk in self.ok:
            bOutput = bOutput and bOk
        if( bOutput ):
            self.ok = [False]*2
            time.sleep(0.1)
            self.signalsReceived(self.stock)
            self.stock = ""

    def onInput_signal1(self,p):
        self.stock = p
        self.onStart(1)

    def onInput_signal2(self):
        self.onStart(2)]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="signal1" type="3" type_size="1" nature="1" inner="0" tooltip="First signal to wait." id="2" />
                                                <Input name="signal2" type="1" type_size="1" nature="1" inner="0" tooltip="Second signal to wait." id="3" />
                                                <Output name="signalsReceived" type="3" type_size="1" nature="2" inner="0" tooltip="Signal sent when both inputs have been stimulated." id="4" />
                                            </Box>
                                            <Box name="Switch Case Explicit" id="4" tooltip="Enter tooltip here" x="764" y="67">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        p = self.typeConversion(p)
        if(p == self.typeConversion("timeout")):
            self.onTimeout()
        elif(p == self.typeConversion("notUnderstood")):
            self.onNotUnderstood()
        elif(p == self.typeConversion("onStop")):
            self.onStop()
        elif(p == self.typeConversion("onTactileSensor")):
            self.onTactileSensor()
        elif(p == self.typeConversion("wordRecognized")):
            self.onWordRecognized()
        elif(p == self.typeConversion("wordRecognised")): #Fix with Choice
            self.onWordRecognized()
        else:
            self.onDefault(p)

    def typeConversion(self, p):
        try:
            p = float(p)
            pint = int(p)
            if( p == pint ):
                p = pint
        except:
            p = str(p)
        return p]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="1" inner="0" tooltip="" id="2" />
                                                <Output name="onTimeout" type="1" type_size="1" nature="2" inner="0" tooltip="&#x09;" id="3" />
                                                <Output name="onNotUnderstood" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                <Output name="onStop" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                <Output name="onTactileSensor" type="1" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                                                <Output name="onWordRecognized" type="1" type_size="1" nature="2" inner="0" tooltip="" id="7" />
                                                <Output name="onDefault" type="3" type_size="1" nature="2" inner="0" tooltip="" id="8" />
                                            </Box>
                                            <Box name="Say Text" id="5" tooltip="Say the text received on its input." x="1331" y="391">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                <Resource name="Speech" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="getLoadingSentence" id="3" tooltip="Retrieve the loading sentence from the chosen behavior" x="1097" y="432">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import random

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.sentences = None
        self.stop = False

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_start(self, bid):
        #~ self.output(p) #~ activate output of the box
        global NAO_LIFE_BEHAVIORS_LIST

        #self.log(bid)

        if bid >= len(NAO_LIFE_BEHAVIORS_LIST):
            return

        if self.sentences is None:
            self.sentences = NAO_LIFE_BEHAVIORS_LIST[bid].loading_sentences
            random.shuffle(self.sentences)
            #self.log("Shuffled: %s" % str(self.sentences))

        if len(self.sentences) == 0:
            return

        #self.log("Choices" + str(self.sentences))
        chosen = self.sentences.pop()
        #self.sentences.insert(0, chosen) # cycle trough sentences

        say = chosen.encode("utf-8")
        #self.log("loading sentence:" + say)

        if self.stop:
            return

        self.output(say)

    def onInput_start2(self):
        self.onInput_start(-1)

    def onInput_doStop(self):
        self.sentences = None
        self.stop = True]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="doStop" type="1" type_size="1" nature="1" inner="0" tooltip="" id="2" />
                                                <Input name="start" type="3" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                <Input name="start2" type="1" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                <Output name="output" type="3" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                            </Box>
                                            <Box name="Wait" id="10" tooltip="Wait a moment before sending a signal on the output. The wait can be stopped any&#x0A;time. You may restart it any time, and it will start again." x="1185" y="694">
                                                <bitmap>media/images/box/wait.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def triggerOutput( self, rPeriod = 1 ):
        self.onUnload() # to clean everything
        self.timerOutput()

    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] )
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Timeout (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning ):
            self.timerOutput()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                                                <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is ellapsed, or if the box is stopped." id="4" />
                                                <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="3" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                                            </Box>
                                            <Box name="gotoSolitary" id="9" tooltip="Jump to the frame name set in parameters and stop the parent timeline.&#x0A;&#x0A;!!Warning!! This box does not stop the behavior! It is only the timeline which will&#x0A;stop playing, the keyframes and boxes will still be running." x="1351" y="14">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[global IN_INTERACTIVE

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onInput_onGo(self):
        IN_INTERACTIVE = False
        self.gotoAndStopParent(self.getParameter("Frame name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="Solitary Activity" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                            </Box>
                                            <Box name="BehaviorPickerInteractive" id="1" tooltip="Enter tooltip here" x="103" y="110">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        self.wip = False

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        #~ self.onStopped() #~ activate output of the box
        pass

    def onInput_init(self):

        global NLINTERNALS, NLPACKAGESMANAGER, NLSCRIPTS

        deviation = float(self.getParameter("deviation"))
        BF = NLSCRIPTS.filter

        filters = []

        self.bs = NLSCRIPTS.BehaviorSelector(NLINTERNALS,
                                                                   NLPACKAGESMANAGER,
                                                                   filters,
                                                                   "application",
                                                                    False)
        self.onLoaded()

    def onInput_choseBehavior(self):
        if self.wip:
            return
        self.wip = True

        try:
            global NAO_LIFE_BEHAVIORS_LIST
            NAO_LIFE_BEHAVIORS_LIST = self.bs.getBehaviorsList()
            # Trying to find the diff between Store applications and local applications
            # Adding them on the behavior's choice list
            try:
                # First listing all local behaviors
                behavior_manager = ALProxy("ALBehaviorManager")
                installed_behaviors = behavior_manager.getInstalledBehaviors()
                installed_behaviors = [behavior for behavior in installed_behaviors if not "/" in behavior]
                
                # Then listing all applications coming from the Store
                store_applications = []
                import xml.etree.ElementTree as ET
                tree = ET.parse('/home/nao/.config/naoqi/nao-store.xml')
                root = tree.getroot()
                for nodes in root.findall('.'):
                    for modulePreference in nodes:
                        for preference in modulePreference:
                              store_applications.append(preference.get('name'))
                # Then filtering : local behaviors without store applications
                nonstore_behaviors = [behavior for behavior in installed_behaviors if not behavior in store_applications]
                # Then filtering : non-store behaviors without current behavior
                try:
                    nonstore_behaviors.remove(".currentChoregrapheBehavior")
                except:
                    pass
                # Then creating a list with these behaviors, each one is turned into an object with relevant attributes
                for behavior in nonstore_behaviors:
                    class nonstore_behavior_fake_class():
                        pass
                    b = nonstore_behavior_fake_class()
                    b.name = behavior
                    b.trigger_sentences = []
                    b.loading_sentences = []
                    b.notes = {}
                    b.nature = "nonstore-application"
                    b.language = None
                    b.resources = []
                    b.has_loaded = True
                    b.start_positions = []
                    b.running_positions = []
                    b.stop_positions = []
                    b._locals = {}
                    b.id = behavior
                    # Finally adding those behaviors objects into the global behaviors list
                    NAO_LIFE_BEHAVIORS_LIST.append(b)
            except Exception, e:
                self.log("Unable to get list of behaviors that are not coming from the store: " + str(e))
            # Filter naos-life from choice    
            try:    
                for i, b in enumerate(NAO_LIFE_BEHAVIORS_LIST):
                    if b.id == "naos-life/naos-life":
                        del NAO_LIFE_BEHAVIORS_LIST[i]
                        break          
            except:
                pass                  
            self.onStopped([])
        except Exception as e:
            self.log("Error:" + str(e))
        finally:
            self.wip = False]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="init" type="1" type_size="1" nature="1" inner="0" tooltip="" id="2" />
                                                <Input name="choseBehavior" type="1" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                <Output name="onStopped" type="0" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Output name="onLoaded" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                <Parameter name="deviation" inherits_from_parent="0" content_type="2" value="0.2" default_value="0.1" min="0" max="1" tooltip="excitation radius" id="6" />
                                            </Box>
                                            <Box name="Choice" id="11" tooltip="Launch the speech recognition waiting for a defined number of predicted answers (written in the table on the box). Available help&#x0A;from NAO which gives some possible answers and attracts attention on the other modalities to answer (head tactile sensor).&#x0A;&#x0A;You can edit a choice by left double-clicking on the line. You can add a choice by right clicking on a line and selecting &apos;Insert a&#x0A;row&apos;. You can delete a choice by right clicking on a line and selecting &apos;Remove a row&apos;. You can also write several alternative&#x0A;answers for the same choice by writing them on the line separated by the character &apos;/&apos;.&#x0A;Ex: apple pie / pie / apple&#x0A;Then if any of these answers (&apos;apple pie&apos;, &apos;pie&apos; or &apos;apple&apos;) are said, the corresponding output will be activated. Indeed, each output&#x0A;which name begins with &apos;output_&apos; correspond to the choice in the list placed just in front of the output.&#x0A;&#x0A;Moreover, you have advanced options appearing when you click on the blue cross. Then you can make NAO calculate the threshold&#x0A;average of choices with the 1/2/3 button. Actually, it will calculate recognition threshold of each alternative answer and put them from&#x0A;highest to smallest threshold. The threshold displayed in front of each choice then is the highest&apos;s." x="585" y="103">
                                                <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[#coding=utf-8
# script of the Choice box v8.8
# @author Desktop Application team
# (c) 2011 Aldebaran Robotics

import os
import time
import random
import thread
import mutex
import xml.dom.minidom

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        # PROXIES INITIALIZATION
        self.tts = ALProxy("ALTextToSpeech")
        self.ttsStop = ALProxy("ALTextToSpeech", True) #Create another proxy as wait is blocking if audioout is remote
        self.asr = ALProxy("ALSpeechRecognition")
        self.ad = ALProxy("ALAudioDevice")
        self.player = ALProxy("ALAudioPlayer")
        self.dcm = ALProxy( "DCM" )
        self.leds = ALProxy( "ALLeds" )
        # VARIABLES INITIALIZATION
        self.aIdsTTS = []
        self.bSentencesInitialized = False
        self.bMustStop = False
        self.bIsRunning = False
        self.bGoOut = False
        self.nCountNoReply = 0
        self.nCountFailure = 0
        self.aFrameNumbers = {"end" : 1,
                              "headDown" : 10,
                              "bodyTalk" : 20,
                              "reco" : 30,
                              "headCheck" : 40,
                              "helpTactileSensor" : 50,
                              "notUnderstood" : 70}
        self.nFrameNumber = self.aFrameNumbers["end"]
        self.bInConfirmation = False
        self.bVocabularyLoaded = False
        self.bRecoIsHearingOrAnalysing = False
        self.bRecoIsWaitingForVoice = False
        self.bHasAlreadyHearingEyes = False
        self.bInTactileSensorMenu = False
        self.bExternChoices = False
        self.bBrainAnimPaused = False
        self.rTimeLastChoiceSaid = -1.
        self.bIsSayingChoice = False
        self.nIndexChoice = 0
        self.sRecoInterruption = "" # = "wordRecognised" or "timeout" or "onStop" or "onTactileSensor"
        self.sPreviousAnswer = ""
        self.rTimeWhenActionMadeInTactileMenu = -1.
        # variables used for the tactile sensor
        self.nFront = 0
        self.nMiddle = 0
        self.nRear = 0
        self.bSeqStarted = False
        self.bIsStoringParam = False
        self.bPressed = False
        self.mutexProcessCurrentState = mutex.mutex()
        self.mutexTactilTouched = mutex.mutex()
        self.mutexCheckIfSeqsCorrespondingLeft = mutex.mutex()
        self.bSeqStarted = False
        # assuming that every sequence is after [0, 0, 0]
        # and then start with one tactil sensor activated
        # timeout must be either a number (int or float) not equal to 0 or an array of two numbers not equal to 0, a negative one and a positive one
        # a negative timeout means a minimum time that has to ellapse before the next step
        # a positive timeout means a maximum time before the next step must show up
        self.aSeqs = [{"name" : "Tap", "statesAndTimeout" : [ "1+", 0.35, "2+", 0.45, "0" ]},
                      {"name" : "TapFront", "statesAndTimeout" : [ "F", 1, "0" ]},
                      {"name" : "LongFront", "statesAndTimeout" : [ "F", -1, "F" ]},
                      {"name" : "TapMiddle", "statesAndTimeout" : [ "M", 1, "0" ]},
                      {"name" : "LongMiddle", "statesAndTimeout" : [ "M", -1, "M" ]},
                      {"name" : "TapRear", "statesAndTimeout" : [ "R", 1, "0" ]},
                      {"name" : "LongRear", "statesAndTimeout" : [ "R", -1, "R" ]},
                      {"name" : "CalmDown", "statesAndTimeout" : [ "1+", 0.5, "2+", -1, "2+" ]}]
        # sequences initialization
        aSeqsTemp = []
        for seq in self.aSeqs:
            try: # ensure that the sequence has at least a name and states and timeout defined
                seq["name"]
                seq["statesAndTimeout"]
                aSeqsTemp.append(seq)
            except:
                pass
        self.aSeqs = aSeqsTemp
        for seq in self.aSeqs:
            states = range( len( seq["statesAndTimeout"][0:len(seq["statesAndTimeout"]):2] ) )
            i = 0
            for state in seq["statesAndTimeout"][0:len(seq["statesAndTimeout"]):2]:
                states[i] = self.convertToArrayOfPossibleStates(state)
                i += 1
            seq["statesAndTimeout"][0:len(seq["statesAndTimeout"]):2] = states
        self.aDetectedSeqs = []
        self.aDetectedSeqs.extend(self.aSeqs)
        # end - variables used for the tactile sensor
        self.aChoices = []
        self.aChoiceIndexes = []
        # parameters which can be changed from the parameters edition window
        self.sQuestion = ""
        self.nTimeoutReco = 6
        self.nTimeoutRecoConfirmation = 6
        self.nTimeoutTactile = 10
        self.nMaxCountNoReply = 3
        self.nMaxCountFailure = 5
        self.arUnderstoodThreshold = [0.0, 1.0] # range of self.rUnderstoodThreshold
        self.arConfirmationThreshold = [0.0, 1.0] # range of self.rConfirmationThreshold (must be higher than self.arUnderstoodThreshold)
        self.rUnderstoodThreshold = 0.2
        self.rConfirmationThreshold = 0.4
        self.bActivateEyesLight = True
        self.bActivateEarsLight = True
        self.bActivateBrainLight = True
        self.bActivateHelpWhenFailure = True
        self.bRepeatValidatedChoice = True
        self.bActivateDefaultChoiceHelp = True
        self.bActivateDefaultChoiceRepeat = True
        self.bActivateDefaultChoiceExit = True

# FUNCTIONS ===============================================================================================

    def onLoad(self):
        # initialize sentences for each language
        if( not self.bSentencesInitialized ):
            self.initializeSentences()
            self.bSentencesInitialized = True

# XML PARSER FOR SENTENCES INITIALIZATION
    def initializeSentences(self):
        "Initialize necessary sentences in each language."
        filename = ALFrameManager.getBehaviorPath(self.behaviorId) + self.tryGetParameter( "Sentences file", "/Aldebaran/choice_sentences.xml" )
        if( self.fileExists(filename) ):
            try:
                doc = self.getFileContents( filename )
                dom = xml.dom.minidom.parseString( doc )
            except Exception as e:
                raise Exception( "The " + filename + " file is not in the right format. Check the special characters and that the syntax is correct.\n" + str(e) )
            try:
                tag = "sentences"
                mainBlock = dom.getElementsByTagName( tag )[0]
                tag = "translation"
                aTranslations = mainBlock.getElementsByTagName( tag )
                self.aAllWords = {}
                self.aAllSentences = {}
                for sTranslation in aTranslations:
                    sLanguage = sTranslation.getAttribute("language")
                    tag = "speechReco"
                    blockSpeechReco = sTranslation.getElementsByTagName( tag )[0]
                    # variable used for the speech recognition
                    self.aAllWords[sLanguage] = {}
                    aKinds = ["negative",
                              "positive",
                              "help",
                              "exit",
                              "repeat"]
                    for sKind in aKinds:
                        tag = sKind
                        blockWordsForThisKind = blockSpeechReco.getElementsByTagName( sKind )[0]
                        self.aAllWords[sLanguage][sKind] = blockWordsForThisKind.getAttribute( "text" ).encode("utf-8").split("/")
                    # end - variable used for the speech recognition
                    tag = "tts"
                    blockTTS = sTranslation.getElementsByTagName( tag )[0]
                    # variable used for the Text-To-Speech
                    self.aAllSentences[sLanguage] = {}
                    aKinds = ["confirmation",
                              "enumMarks",
                              "helpEnumChoices",
                              "helpEnumDefault",
                              "helpTactile",
                              "notUnderstood",
                              "noQuestion",
                              "notUnderstoodAnims"]
                    for sKind in aKinds:
                        tag = sKind
                        blockSentencesForThisKind = blockTTS.getElementsByTagName( sKind )[0]
                        self.aAllSentences[sLanguage][sKind] = blockSentencesForThisKind.getAttribute( "text" ).encode("utf-8").split("/")
                    # end - variable used for the Text-To-Speech
            except Exception as e:
                raise Exception( "The " + filename + " file is not in the right format. Check that the '" + tag + "' tag is defined and with the right format.\n" + str(e) )
        else:
            self.logger.warning( "This Choice box is deprecated. Please use the new one supplied in Choregraphe library instead." )
            self.aAllWords = {"English":{"negative": ["no"],
                                         "positive": ["yes"],
                                         "help": ["help"],
                                         "exit": ["exit"],
                                         "repeat": ["repeat"]
                                        },
                              "French":{"negative": ["non"],
                                        "positive": ["oui"],
                                        "help": ["l'aide"],
                                        "exit": ["sortir"],
                                        "repeat": ["répéter"]
                                       },
                              "Spanish":{"negative": ["no"],
                                         "positive": ["si"],
                                         "help": ["ayuda"],
                                         "exit": ["salida"],
                                         "repeat": ["repetir"]
                                        },
                              "Finnish":{"negative": ["ei"],
                                         "positive": ["kyllä"],
                                         "help": ["apua"],
                                         "exit": ["poistu"],
                                         "repeat": ["toista"]
                                        },
                              "Chinese":{"negative": ["不"],
                                         "positive": ["是"],
                                         "help": ["帮助"],
                                         "exit": ["退出"],
                                         "repeat": ["重复"]
                                        },
                              "Japanese":{"negative": ["いいえ"],
                                         "positive": ["はい"],
                                         "help": ["ヘルプ"],
                                         "exit": ["待機"],
                                         "repeat": ["繰り返"]
                                        }
                             }
            self.aAllSentences = {"English":{"confirmation": ["I understood %s. Is it correct?"],
                                             "enumMarks": [", ", " or "],
                                             "helpEnumChoices": ["No answer is really expected. ", "Your answer can be %s. ", "Your answer can be for example %s. ", "%s?"],
                                             "helpEnumDefault": [" you can ask me: %s. "],
                                             "helpTactile": ["You can also use my tactile sensor to choose the answer.", "\Pau=600\ Press front or rear of my skull cap to go through all of the available answers. Press then the circle in the middle to validate your choice."],
                                             "notUnderstood": ["I did not understand. "],
                                             "noQuestion": ["No question has been defined, then I cannot repeat it. "],
                                             "notUnderstoodAnims": ["There is too much noise here! ", "Try to talk to me more distinctly. ", "I don't hear you very well. "]
                                            },
                                  "Finnish":{"confirmation": ["Tarkoititko että %s?"],
                                             "enumMarks": [", ", " tai "],
                                             "helpEnumChoices": ["Vastausta ei oikeastaan tarvita.", "Oletetaan että vastauksesi on %s. ", "Vastauksesi voisi vaikka olla %s. ", "%s?"],
                                             "helpEnumDefault": [" voit kysyä minulta: %s. "],
                                             "helpTactile": ["Voit myös valita vastauksen taputtamalla päätäni.", "\Pau=600\ Paina pääni etu- tai takaosaa käydäksesi eri vaihtoehdot läpi. Sen jälkeen paina keskiosaa vahvistaaksesi vastaus."],
                                             "notUnderstood": ["En ymmärtänyt. "],
                                             "noQuestion": ["En tiedä, mikä kysymys oikeastaan oli, joten en voi toistaa sitä. "],
                                             "notUnderstoodAnims": ["Täällä on liikaa meteliä! ", "Yritä puhua minulle selkeämmin. ", "En kuule sinua kovin hyvin. "]
                                            },
                                  "French":{"confirmation": ["J'ai compris %s. Est-ce correct?"],
                                            "enumMarks": [", ", " ou "],
                                            "helpEnumChoices": ["Aucune réponse précise n'est attendue. ", "Tu peux répondre %s. ", "Tu peux répondre par exemple %s. ", "%s ?"],
                                            "helpEnumDefault": [" tu peux me demander : %s. "],
                                            "helpTactile": ["Tu peux aussi choisir une réponse à l'aide de mon capteur tactile.", "\Pau=600\ Appuie sur l'avant ou l'arrière de ma calotte pour naviguer parmi les réponses possibles. Appuie ensuite sur le rond du milieu pour valider ton choix."],
                                            "notUnderstood": ["Je n'ai pas compris. "],
                                            "noQuestion": ["Il n'y a pas de question prédéfinie, je ne peux donc pas la répéter. "],
                                            "notUnderstoodAnims": ["Il y a trop de bruit ici! ", "Essaye de me parler plus distinctement. ", "Je ne t'entends pas bien. "]
                                           },
                                  "Spanish":{"confirmation": ["He entendido %s. Es correcto?"],
                                             "enumMarks": [", ", " o "],
                                             "helpEnumChoices": ["No espero ninguna respuesta. ", "Puedes responder %s. ", "Puedes responder por ejemplo %s. ", "%s ?"],
                                             "helpEnumDefault": [" me puedes pedir : %s. "],
                                             "helpTactile": ["Tambien puedes utilizar mi sensor tactil para escojer la respuesta.", "\Pau=600\ Toca el sensor de enfrente o el de atras para entender las posibles respuestas. Presiona en medio para validar tu eleccion."],
                                             "notUnderstood": ["No entendi. "],
                                             "noQuestion": ["No me han confirmado su respuesta, por lo tanto no puedo repetirla. "],
                                             "notUnderstoodAnims": ["Hay demasiado ruido, habla mas fuerte! "]
                                            },
                                  "Chinese":{"confirmation": ["我理解是 %s. 对吗?"],
                                             "enumMarks": [", ", " 或者 "],
                                             "helpEnumChoices": ["没有期望的答案. ", "你的答案是 %s. ", "你的答案可以是举个例子 %s. ", "%s?"],
                                             "helpEnumDefault": [" 你能问我: %s. "],
                                             "helpTactile": ["你也可以用我的碰触感应器来选择答案.", "\Pau=600\ 碰触我头部的前面和后面来浏览所有的选项. 碰触当中的感应器来确认你的选择."],
                                             "notUnderstood": ["我不明白. "],
                                             "noQuestion": ["没有定义问题, 我无法重复. "],
                                             "notUnderstoodAnims": ["这里太吵了! ", "尝试说得清楚一些. ", "我听不清你在说什么. "]
                                            },
                                  "Japanese":{"confirmation": ["%sですね。当たってるかな？"],
                                             "enumMarks": ["、","または"],
                                             "helpEnumChoices": ["答えられないよ。", "あなたの答えは%sですね。", "あなたの答えはたぶん%sですね。", "%s？"],
                                             "helpEnumDefault": [" %sと聞いていい。 "],
                                             "helpTactile": ["触覚センサーを使って、答えを選んでください", "\Pau=600\ 頭を触ってメニューを選んでください。前と後ろで選択して、真ん中が決定ボタンです。"],
                                             "notUnderstood": ["すみません。もう一度お願いします "],
                                             "noQuestion": ["質問がないので、繰り返することができない。"],
                                             "notUnderstoodAnims": ["もう少し静かな場所だと嬉しいな ", "もう少しはっきり話してくれると嬉しいな", "もう少し大きな声でゆっくり話してみてね"]
                                            }
                                 }
        # choices
        # !!! don't remove any comments from this variable !!!
        # (they are here to make the plugin work)
        self.aListAllChoices = {"Chinese": ["语言", "地址", "电量", "温度", "退出/停止", ""], "English": ["language", "address", "battery", "temperature", "Quit/Exit/Stop", ""], "French": ["langage/langue", "adresse", "batterie", "temperature", "Quitter/Sortir", ""], "German": ["", "", ""], "Italian": ["", "", ""], "Japanese": ["", "", ""], "Spanish": ["lenguaje", "direcciÃÂ³n", "baterÃÂ­a", "temperatura", "salir", ""],"Finnish": ["kieli", "äänenvoimakkuus/voimakkuus/ääni", "osoite/i p osoite/i p", "paristo/akku", "lämpö/lämpötila", "versio", "poistu/lopeta/pois/lopetus/peru", ""]
                               }
        # end - choices

# INPUTS ACTIVATION PROCESSING ------------------------------------------------------------------------------
    def onInput_onStart(self, question=None):
        "Initialize variables and start box behaviour."
        self.logger.debug( "Input onStart stimulated." )
        if( self.bIsRunning): # to avoid starting the process twice
            return
        self.bIsRunning = True
        self.asr.setVisualExpression( False )
        language = self.tts.getLanguage()
        self.asr.setLanguage( language )
        try:
            self.aAllWords[language]
            self.aAllSentences[language]
        except:
            raise Exception( "The current language is not supported by this Choice box. It is probably deprecated. Try to use the one supplied in Choregraphe library instead." )
        self.asNegativeWords = self.aAllWords[language]["negative"]
        self.asPositiveWords = self.aAllWords[language]["positive"]
        self.asHelpWords = self.aAllWords[language]["help"]
        self.asExitWords = self.aAllWords[language]["exit"]
        self.asRepeatWords = self.aAllWords[language]["repeat"]
        self.bGoOut = False
        self.bVocabularyLoaded = False
        self.bRecoIsHearingOrAnalysing = False
        self.bRecoIsWaitingForVoice = False
        self.bHasAlreadyHearingEyes = False
        self.sRecoInterruption = ""
        self.sPreviousAnswer = ""
        self.bMustStop = False
        self.nCountNoReply = 0
        self.nCountFailure = 0
        self.nFrameNumber = self.aFrameNumbers["end"]
        self.beginTime = time.time()
        self.bInConfirmation = False
        self.bInTactileSensorMenu = False
        self.bBrainAnimPaused = False
        self.bPressed = False
        self.rTimeWhenActionMadeInTactileMenu = -1.
        self.nFront = 0
        self.nMiddle = 0
        self.nRear = 0
        self.bSeqStarted = False
        self.bIsStoringParam = False
        self.rUnderstoodThreshold = self.tryGetParameter( "Minimum threshold to understand", 0.2 )
        self.rConfirmationThreshold = self.tryGetParameter( "Minimum threshold to be sure", 0.4 )
        self.nTimeoutReco = self.tryGetParameter( "Speech recognition timeout", 6 )
        self.nTimeoutRecoConfirmation = self.tryGetParameter( "Speech recognition timeout when confirmation", 6 )
        self.nTimeoutTactile = self.tryGetParameter( "Tactile sensor menu timeout", 10 )
        self.nMaxCountNoReply = self.tryGetParameter( "Maximum number of repetition when no reply", 3 )
        self.nMaxCountFailure = self.tryGetParameter( "Maximum number of repetition when failure", 5 )
        self.bActivateEyesLight = self.tryGetParameter( "Activate eyes light", True )
        self.bActivateEarsLight = self.tryGetParameter( "Activate ears light", True )
        self.bActivateBrainLight = self.tryGetParameter( "Activate brain light", True )
        self.bActivateHelpWhenFailure = self.tryGetParameter( "Activate help when failure", True )
        self.bRepeatValidatedChoice = self.tryGetParameter( "Repeat validated choice", True )
        self.bActivateDefaultChoiceHelp = self.tryGetParameter( "Activate help command", True )
        self.bActivateDefaultChoiceRepeat = self.tryGetParameter( "Activate repeat command", True )
        self.bActivateDefaultChoiceExit = self.tryGetParameter( "Activate exit command", True )
        self.aDefaultChoices = []
        if (self.bActivateDefaultChoiceHelp):
            self.aDefaultChoices.append( self.asHelpWords )
        if (self.bActivateDefaultChoiceRepeat):
            self.aDefaultChoices.append( self.asRepeatWords )
        if (self.bActivateDefaultChoiceExit):
            self.aDefaultChoices.append( self.asExitWords )
        if( question == None ):
            question = ""
        self.initQuestionAndChoices( question )
        if( len( self.aChoices ) > len( self.aDefaultChoices ) ): # if there is at least one choice (not a default one)
            self.nIndexChoice = len( self.aDefaultChoices )
        else: # if there are only default words
            self.nIndexChoice = 0
        self.bGoOut = False
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0xFFFFFF, 0.1 )
        # initialize tactile sensor handler
        self.initSeqDetected()
        # subscribe to tactile sensors extractors (launch tactile sensor handler)
        ALMemory.subscribeToEvent( "FrontTactilTouched", self.getName(), "onTactilTouched" )
        ALMemory.subscribeToEvent( "MiddleTactilTouched", self.getName(), "onTactilTouched" )
        ALMemory.subscribeToEvent( "RearTactilTouched", self.getName(), "onTactilTouched" )
        thread.start_new_thread( self.loopLedsBrainTwinkle, () )
        while( not self.bGoOut ):
            self.questionRecognitionReaction()
        if( self.bInTactileSensorMenu ):
            self.nCountNoReply = 0
            if( self.nFrameNumber != self.aFrameNumbers["headDown"] ):
                self.nFrameNumber = self.aFrameNumbers["headDown"]
                try:
                    self.gotoAndStop(self.nFrameNumber)
                except:
                    pass
            self.loopLedsBrainTurn()
        else:
            self.bIsRunning = False

    def onInput_choicesList(self, p):
        "Set choices list."
        self.logger.debug( "Input choicesList stimulated." )
        if( not self.bIsRunning ):
            self.bExternChoices = True
            self.asNegativeWords = self.aAllWords[self.asr.getLanguage()]["negative"]
            self.asPositiveWords = self.aAllWords[self.asr.getLanguage()]["positive"]
            self.asHelpWords = self.aAllWords[self.asr.getLanguage()]["help"]
            self.asExitWords = self.aAllWords[self.asr.getLanguage()]["exit"]
            self.asRepeatWords = self.aAllWords[self.asr.getLanguage()]["repeat"]
            self.bActivateDefaultChoiceHelp = self.tryGetParameter( "Activate help command", True )
            self.bActivateDefaultChoiceRepeat = self.tryGetParameter( "Activate repeat command", True )
            self.bActivateDefaultChoiceExit = self.tryGetParameter( "Activate exit command", True )
            self.aDefaultChoices = []
            if (self.bActivateDefaultChoiceHelp):
                self.aDefaultChoices.append( self.asHelpWords )
            if (self.bActivateDefaultChoiceRepeat):
                self.aDefaultChoices.append( self.asRepeatWords )
            if (self.bActivateDefaultChoiceExit):
                self.aDefaultChoices.append( self.asExitWords )
            self.aChoices = []
            self.aChoiceIndexes = []
            self.aChoices.extend( self.aDefaultChoices )
            index = 0
            for choice in p:
                if( self.isString(choice) ):
                    choice = choice.strip(" \t,;.\n") # remove space or tabs at beginning or end of a choice
                    if( choice != "" ):
                        choice = [ choice ]
                    else:
                        choice = []
                elif( self.isArray(choice) ):
                    if( choice != [] ):
                        for i in range( len( choice ) ):
                            if( self.isString(choice[i]) ):
                                choice[i] = choice[i].strip(" \t,;.\n") # remove space or tabs at beginning or end of a choice
                                if( len( choice[i] ) < 1 ):
                                    del choice[i]
                                    i -= 1 # to parse the good one next loop
                            else:
                                raise Exception( "Error in choices input syntax:\nIt must be an array of choices and each choice can be either a string or an array of strings (several possibilities for one choice)\nEx: ['choice1',['choice2a','choice2b']]\nbut: " + str(p) + " found" )
                else:
                    raise Exception( "Error in choices input syntax:\nIt must be an array of choices and each choice can be either a string or an array of strings (several possibilities for one choice)\nEx: ['choice1',['choice2a','choice2b']]\nbut: " + str(p) + " found" )
                if( len( choice ) > 0 ):
                    for sWord in choice:
                        for aDefaultChoice in self.aDefaultChoices:
                            if( sWord in aDefaultChoice ):
                                raise Exception( "Error in input choices list: You chose a word which is already used for default choices:\n" + str(sWord) + " is used for the default choice: " + str(aDefaultChoice[0]) )
                    self.aChoices.append( choice )
                    self.aChoiceIndexes.append( index )
                index += 1

    def onInput_onStop(self):
        "Stop box behaviour."
        self.logger.debug( "Input onStop stimulated." )
        if( self.bIsRunning ):
            self.goOut( self.asExitWords[0], "onStop" )
            self.sRecoInterruption = "onStop"
        else:
            self.onUnload()

# GENERAL FUNCTIONS ------------------------------------------------------------------------------------------

    def isString(self, strVariable):
        try:
            if( type( strVariable ) == type( "some string" ) ):
                return True
        except:
            pass
        return False

    def isArray(self, aVariable):
        try:
            if( type( aVariable ) == type( ["some array"] ) ):
                return True
        except:
            pass
        return False

    def fileExists(self, strPathFilename ):
        try:
            file = open( strPathFilename, 'r' )
            if( file ):
                file.close()
                return True
        except (IOError, os.error), err:
            pass
        return False

    def getFileContents(self, sFilename ):
        "read a file and return it's contents, or '' if not found, empty, ..."
        try:
            fileContent = open( sFilename )
            aBuf = fileContent.read()
            fileContent.close()
        except:
            try:
                fileContent.close()
            except:
                pass
            return ""
        return aBuf

    def getBrainLedName(self, nNumLed):
        "Get the name of the DCM led device from its number"
        "0 => front left; 1 => next in clock wise; until 11"
        numLed = nNumLed%12
        if( numLed <= 1 ):
            return "Head/Led/Front/Right/%d/Actuator/Value" % (1-numLed)
        elif( numLed >= 10 ):
            return "Head/Led/Front/Left/%d/Actuator/Value" % (numLed-10)
        elif( numLed <= 2 ):
            return "Head/Led/Middle/Right/%d/Actuator/Value" % (2-numLed)
        elif( numLed >= 9 ):
            return "Head/Led/Middle/Left/%d/Actuator/Value" % (numLed-9)
        elif( numLed <= 5 ):
            return "Head/Led/Rear/Right/%d/Actuator/Value" % (numLed-3)
        else:
            return "Head/Led/Rear/Left/%d/Actuator/Value" % (8-numLed)

    def skipTTS(self):
        for idtts in self.aIdsTTS:
            try:
                self.ttsStop.stop(idtts)
            except:
                self.logger.debug( "Warning: The Text-To-Speech could not have been stopped." )

    def tryGetParameter(self, sParameterName, defaultValue):
        try:
            return self.getParameter( sParameterName )
        except:
            return defaultValue

# QUESTION AND CHOICES INITIALIZATION ----------------------------------------------------------------------

    def initQuestionAndChoices(self, p):
        "Initialize the question and the choices."
        # question processing
        if( self.isString(p) ):
            self.sQuestion = p
        else:
            raise Exception( "Error in question input syntax:\nQuestion text\nexpected for example, but:\n" + str(p[0]) + "\nfound" )
        # choices processing
        if( not self.bExternChoices ):
            self.aChoices = []
            self.aChoiceIndexes = []
            self.aChoices.extend( self.aDefaultChoices )
            index = 0
            listChoices = self.aListAllChoices[self.tts.getLanguage()]
            for choice in listChoices:
                aChoice = choice.split( "/" )
                if( aChoice != [] ):
                    for i in range( len( aChoice ) ):
                        aChoice[i] = aChoice[i].strip(" \t,;.\n") # remove space or tabs at beginning or end of a choice
                        if( len( aChoice[i] ) < 1 ):
                            del aChoice[i]
                            i -= 1 # to parse the good one next loop
                if( len( aChoice ) > 0 ):
                    # check if there is a word which is already used for the default choices
                    for sWord in aChoice:
                        for aDefaultChoice in self.aDefaultChoices:
                            if( sWord in aDefaultChoice ):
                                raise Exception( "Error in choices list: You chose a word which is already used for default choices:\n" + str(sWord) + " is used for the default choice: " + str(aDefaultChoice[0]) )
                    # append the choice to the list if everything worked well
                    self.aChoices.append( aChoice )
                    self.aChoiceIndexes.append( index )
                index += 1
        # check that there is at least one choice (a default one or not)
        if( len( self.aChoices ) < 1 ):
            raise Exception( "Error in choices list: It is empty. There is no default choice nor choice entered." )

# QUESTION-RECOGNITION-REACTION -----------------------------------------------------------------------------

    def questionRecognitionReaction(self):
        "Ask question, launch speech recognition and process answer."
        self.ttsQuestionAndRecoInit()
        if( not self.bMustStop ):
            # stop movement animation
            if( self.nFrameNumber != self.aFrameNumbers["reco"] ):
                self.nFrameNumber = self.aFrameNumbers["reco"]
                try:
                    self.gotoAndStop(self.nFrameNumber)
                except:
                    pass
            # start speech recognition
            self.logger.debug( "Speech recognition started." )
            ALMemory.subscribeToEvent( "WordRecognized", self.getName(), "onWordRecognized" )
            self.bRecoIsWaitingForVoice = True
            ALMemory.subscribeToEvent( "SpeechDetected", self.getName(), "onSpeechDetected" )
        # leds during the recognition
        self.loopLedsReco()
        # process the reco loop break
        self.processRecoInterruption()

    def ttsQuestionAndRecoInit(self):
        "Ask question and initialize the speech recognition during the question to gain time in the interaction."
        if( not self.bInConfirmation ):
            # launch TTS
            idTTS = -1
            if( self.sQuestion != ""):
                idTTS = self.tts.post.say( self.sQuestion )
                self.aIdsTTS.append( idTTS )
                self.logger.debug( "Robot says: " + str(self.sQuestion) )
                # launch TTS movement animation
                if( self.nFrameNumber != self.aFrameNumbers["bodyTalk"] ):
                    self.nFrameNumber = self.aFrameNumbers["bodyTalk"]
                    try:
                        self.gotoAndStop(self.nFrameNumber)
                    except:
                        pass
            # prepare speech recognition
            self.asr.setLanguage( self.tts.getLanguage() )
            if( not self.bVocabularyLoaded ):
                aWordsRecognised = []
                for i in range( len( self.aChoices ) ):
                    if( self.aChoices[i] != [] ):
                        aWordsRecognised.extend( self.aChoices[i] )
                sWordsRecognised = "You can say: "
                if( len( aWordsRecognised ) > 1 ):
                    for i in range( len( aWordsRecognised ) - 1 ):
                        sWordsRecognised += "'" + aWordsRecognised[i] + "', "
                if( len( aWordsRecognised ) > 0 ):
                    sWordsRecognised += "'" + aWordsRecognised[len( aWordsRecognised ) - 1] + "'"
                sWordsRecognised += "."
                self.logger.debug( sWordsRecognised )
                self.asr.setWordListAsVocabulary( aWordsRecognised )
                self.bVocabularyLoaded = True
        else:
            # launch TTS
            sentence = self.aAllSentences[self.tts.getLanguage()]["confirmation"][0]
            idTTS = -1
            sentenceToSay = sentence % self.sPreviousAnswer
            if( sentenceToSay != ""):
                idTTS = self.tts.post.say( sentenceToSay )
                self.aIdsTTS.append( idTTS )
                self.logger.debug( "Robot says: " + str(sentenceToSay) )
                # launch TTS movement animation
                if( self.nFrameNumber != self.aFrameNumbers["bodyTalk"] ):
                    self.nFrameNumber = self.aFrameNumbers["bodyTalk"]
                    try:
                        self.gotoAndStop(self.nFrameNumber)
                    except:
                        pass
            # prepare speech recognition
            aWordsRecognised = []
            aWordsRecognised.extend( self.asNegativeWords )
            aWordsRecognised.extend( self.asPositiveWords )
            sWordsRecognised = "You can say: "
            if( len( aWordsRecognised ) > 1 ):
                for i in range( len( aWordsRecognised ) - 1 ):
                    sWordsRecognised += "'" + aWordsRecognised[i] + "', "
            if( len( aWordsRecognised ) > 0 ):
                sWordsRecognised += "'" + aWordsRecognised[len( aWordsRecognised ) - 1] + "'"
            sWordsRecognised += "."
            self.logger.debug( sWordsRecognised )
            self.asr.setWordListAsVocabulary( aWordsRecognised )
            self.bVocabularyLoaded = False
        # wait for the end of the TTS
        if( idTTS != -1 ):
            try:
                self.tts.wait( idTTS, 0 )
            except:
                self.logger.debug( "Warning: Could not wait the TTS." )

    def processRecoInterruption(self):
        "Process speech recognition interruption (timeout, action on tactile sensor, word said, etc...)"
        # wait for the end of the reaction (help, not understood, etc...)
        while( self.sRecoInterruption == "" ):
            time.sleep( 0.2 )
        self.logger.debug( "The speech recognition has been interrupted because of: " + str(self.sRecoInterruption) + "." )
        if( self.sRecoInterruption == "timeout" ): # if recognition interrupted by timeout
            try:
                # stop recognition
                ALMemory.unsubscribeToEvent( "WordRecognized", self.getName() )
                self.bRecoIsWaitingForVoice = False
                self.bRecoIsHearingOrAnalysing = False
                self.logger.debug( "Speech recognition stopped." )
                ALMemory.unsubscribeToEvent( "SpeechDetected", self.getName() )
            except:
                pass
            if( self.bInConfirmation ): # if it was a confirmation question
                # leds noticing that the robot confirm its guessing
                thread.start_new_thread( self.ledsUnderstood, (True, False) )
                # if nothing has been said, we assume that the user agree
                self.bInConfirmation = False
                if( self.sPreviousAnswer in self.asHelpWords ): # if help asked
                    self.helpWhenAsked()
                elif( self.sPreviousAnswer in self.asRepeatWords ): # if repeat asked
                    self.repeatWhenNoQuestion()
                    # repeat the question
                else: # if not repeat nor help asked
                    self.goOut( self.sPreviousAnswer, "wordRecognised" )
            else:
                # reinitialize leds
                self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )
                self.nCountNoReply += 1
                if( self.nCountNoReply >= self.nMaxCountNoReply ):
                    self.goOut( self.asExitWords[0], "timeout" )
        else:
            self.nCountNoReply = 0
            if( self.sRecoInterruption in [ "onStop", "onTorsoClick" ] ):
                self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )
        self.sRecoInterruption = ""

    def repeatWhenNoQuestion(self):
        "Robot's reaction when it is asked to repeat the question when there is no question."
        if( self.sQuestion == "" ):
            sentenceNoQuestion = self.aAllSentences[self.tts.getLanguage()]["noQuestion"][0]
            sentenceNoQuestion += self.enumerateChoices( True ) # True to ask that the introduction is played
            if( len( self.aChoices ) - len( self.aDefaultChoices ) == 0 ): # if there is no choice
                sentenceNoQuestion += self.enumerateDefaultChoices( True ) # True to ask that the introduction is played
            # launch TTS
            idTTS = -1
            if( sentenceNoQuestion != ""):
                if( self.bInTactileSensorMenu ):
                    idTTS = self.tts.post.say( sentenceNoQuestion + "\\Pau=300\\" )
                else:
                    idTTS = self.tts.post.say( sentenceNoQuestion )
                self.aIdsTTS.append( idTTS )
                self.logger.debug( "Robot says: " + str(sentenceNoQuestion) )
                if( not self.bInTactileSensorMenu ):
                    # launch TTS movement animation
                    if( self.nFrameNumber != self.aFrameNumbers["bodyTalk"] ):
                        self.nFrameNumber = self.aFrameNumbers["bodyTalk"]
                        try:
                            self.gotoAndStop(self.nFrameNumber)
                        except:
                            pass
            # wait for the end of the TTS
            if( idTTS != -1 ):
                try:
                    self.tts.wait( idTTS, 0 )
                except:
                    self.logger.debug( "Warning: Could not wait the TTS." )

# RECO OUTPUT PROCESSING --------------------------------------------------------------------------------------

    def onWordRecognized(self, pDataName, pValue, pMessage):
        "Handler for when a word is recognised by the speech recognition system."
        aState = pValue
        self.logger.debug( "The word '" + str(aState[0]) + "' has been recognised with a threshold of " + str(aState[1]) + "." )
        # interrupt loops:
            # - stop reco
            # - stop leds
            # - stop asking the question on and on
        try:
            ALMemory.unsubscribeToEvent( "WordRecognized", self.getName() )
            self.logger.debug( "Speech recognition stopped." )
            ALMemory.unsubscribeToEvent( "SpeechDetected", self.getName() )
        except:
            pass
        self.bRecoIsHearingOrAnalysing = False
        self.bRecoIsWaitingForVoice = False
        if( aState[0] != "" ):
            if( aState[1] >= self.rUnderstoodThreshold ):
                if( self.rUnderstoodThreshold <= self.arUnderstoodThreshold[1] - 0.02 ):
                    self.rUnderstoodThreshold += 0.02
                else:
                    self.rUnderstoodThreshold = self.arUnderstoodThreshold[1]
                if( self.bInConfirmation ):
                    if( aState[0] in self.asNegativeWords ):
                        thread.start_new_thread( self.ledsNegative, () )
                    else:
                        thread.start_new_thread( self.ledsUnderstood, (True, False) )
                else:
                    thread.start_new_thread( self.ledsUnderstood, (True, False) )
                self.reactionWordUnderstood( aState )
            else:
                if( self.rUnderstoodThreshold >= self.arUnderstoodThreshold[0] + 0.05 ):
                    self.rUnderstoodThreshold -= 0.05
                else:
                    self.rUnderstoodThreshold = self.arUnderstoodThreshold[0]
                aCurrentChoice = ""
                for choice in self.aChoices:
                    if( aCurrentChoice == "" ):
                        if( aState[0] in choice ):
                            aCurrentChoice = choice
                if( self.sPreviousAnswer in aCurrentChoice ): # if answer in the same choice as previously
                    # then ask confirmation
                    aState[1] = self.rConfirmationThreshold - 0.01
                    thread.start_new_thread( self.ledsUnderstood, (True, False) )
                    self.reactionWordUnderstood( aState )
                else:
                    # else not understood
                    if( self.bInConfirmation ):
                        thread.start_new_thread( self.ledsUnderstood, (True, False) )
                    else:
                        self.sPreviousAnswer = aState[0]
                        thread.start_new_thread( self.ledsNotUnderstood, () )
                    self.reactionNothingUnderstood()
        else:
            if( self.bInConfirmation ):
                thread.start_new_thread( self.ledsUnderstood, (True, False) )
            else:
                thread.start_new_thread( self.ledsNotUnderstood, () )
            self.reactionNothingUnderstood()
        if( pMessage == "" ):
            self.sRecoInterruption = "wordRecognised"
        else:
            self.sRecoInterruption = pMessage

    def onSpeechDetected(self, pDataName, pValue, pMessage):
        "Handler for when something has been heard by the speech recognition system."
        aState = pValue
        if( aState == 1):
            if( self.bRecoIsWaitingForVoice ):
                # make eyes leds switch from an animation to an other
                self.bRecoIsHearingOrAnalysing = True
                self.bRecoIsWaitingForVoice = False
                try:
                    self.timeToReply(time.time() - self.beginTime)
                except:
                    pass

    def reactionWordUnderstood(self, word):
        "Reaction depending on the word recognised (help, repeat, word in choices, etc...) and its recognition confidence."
        if( self.bInConfirmation ):
            self.bInConfirmation = False
            if( word[0] in self.asNegativeWords ):
                # update number of failures
                self.nCountFailure += 1
                if( self.sPreviousAnswer in self.asHelpWords ):
                    if( self.nCountFailure >= self.nMaxCountFailure ): # if maximum number of failures
                        # skip the question
                        self.goOut( self.asExitWords[0], "notUnderstood" )
                else:
                    self.helpAfterFailure()
            else:
                if( (self.sPreviousAnswer in self.asHelpWords) or (word[0] in self.asHelpWords) ):
                    self.helpWhenAsked()
                elif( self.sPreviousAnswer in self.asRepeatWords or (word[0] in self.asRepeatWords) ):
                    self.repeatWhenNoQuestion()
                    # repeat the question
                else:
                    self.goOut( self.sPreviousAnswer, "wordRecognised" )
                self.sPreviousAnswer = ""
        else:
            self.sPreviousAnswer = word[0]
            if( word[1] >= self.rConfirmationThreshold ):
                if( self.rConfirmationThreshold <= self.arConfirmationThreshold[1] - 0.02 ):
                    self.rConfirmationThreshold += 0.02
                else:
                    self.rConfirmationThreshold = self.arConfirmationThreshold[1]
                if( self.sPreviousAnswer in self.asHelpWords ):
                    self.helpWhenAsked()
                elif( self.sPreviousAnswer in self.asRepeatWords ):
                    self.repeatWhenNoQuestion()
                    # repeat the question
                else:
                    self.goOut( self.sPreviousAnswer, "wordRecognised" )
                self.sPreviousAnswer = ""
            else:
                if( self.rConfirmationThreshold >= self.arConfirmationThreshold[0] + 0.05 ):
                    self.rConfirmationThreshold -= 0.05
                else:
                    self.rConfirmationThreshold = self.arConfirmationThreshold[0]
                self.bInConfirmation = True

    def reactionNothingUnderstood(self):
        "Reaction when nothing has been understood or without an enough confidence."
        if( self.bInConfirmation ):
            # if the robot did not understand, we assume that the user agree
            self.bInConfirmation = False
            if( self.sPreviousAnswer in self.asHelpWords ): # if help asked
                self.helpWhenAsked()
            elif( self.sPreviousAnswer in self.asRepeatWords ): # if repeat asked
                self.repeatWhenNoQuestion()
                # repeat the question
            else: # if not repeat nor help asked
                self.goOut( self.sPreviousAnswer, "wordRecognised" )
        else:
            # update number of failures
            self.nCountFailure += 1
            if( self.nCountFailure <= 1 ): # if first failure
                sentence = self.aAllSentences[self.tts.getLanguage()]["notUnderstood"][0]
            else: # if second failure or more
                sentenceNotUnderstoodAnims = self.aAllSentences[self.tts.getLanguage()]["notUnderstoodAnims"]
                index = random.randint( 0, len( sentenceNotUnderstoodAnims ) - 1 )
                sentence = sentenceNotUnderstoodAnims[index]
                if( self.nFrameNumber != self.aFrameNumbers["notUnderstood"] + 10*index ):
                    self.nFrameNumber = self.aFrameNumbers["notUnderstood"] + 10*index
                    try:
                        self.gotoAndStop(self.nFrameNumber)
                    except:
                        pass
            self.helpAfterFailure( sentence )

# HELP ------------------------------------------------------------------------------------------------------

    def enumerateChoices(self, bIntroToSay):
        "Enumerate choices (only the first word of each choice is taken into account)."
        sentenceHelpEnumChoices = self.aAllSentences[self.tts.getLanguage()]["helpEnumChoices"]
        sentenceHelpEnumMarks = self.aAllSentences[self.tts.getLanguage()]["enumMarks"]
        enumWords = ""
        maxNbEnumChoices = 3
        indexes = []
        for i in range( min(maxNbEnumChoices, len( self.aChoices ) - len( self.aDefaultChoices )) ):
            if( len( self.aChoices ) - len( self.aDefaultChoices ) <= maxNbEnumChoices ):
                index = len( self.aDefaultChoices ) + i
            else:
                while( index in indexes or indexes == [] ):
                    index = random.randint( len( self.aDefaultChoices ), len( self.aChoices ) - 1 )
            indexes.append( index )
            if( len( indexes ) != 1 ): # if it is not the first choice
                if( len( indexes ) != min(maxNbEnumChoices, len( self.aChoices ) - len( self.aDefaultChoices )) ): # if it is not the last choice
                    enumWords += sentenceHelpEnumMarks[0]
                else:
                    enumWords += sentenceHelpEnumMarks[1]
            enumWords += self.aChoices[index][0]
        sentenceTemplate = sentenceHelpEnumChoices[2]
        if( len( self.aChoices ) - len( self.aDefaultChoices ) <= maxNbEnumChoices ): # if there are 3 or less choices
            sentenceTemplate = sentenceHelpEnumChoices[1]
        if( not bIntroToSay ):
            sentenceTemplate = sentenceHelpEnumChoices[3]
        if( len( self.aChoices ) - len( self.aDefaultChoices ) == 0 ): # if there is no choice
            sentence = sentenceHelpEnumChoices[0]
        else:
            sentence = sentenceTemplate % enumWords
        return sentence

    def enumerateDefaultChoices(self, bIntroToSay):
        "Enumerate default choices (only the first word of each choice is taken into account)."
        sentenceHelpEnumChoices = self.aAllSentences[self.tts.getLanguage()]["helpEnumChoices"]
        sentenceHelpEnumDefault = self.aAllSentences[self.tts.getLanguage()]["helpEnumDefault"]
        sentenceHelpEnumMarks = self.aAllSentences[self.tts.getLanguage()]["enumMarks"]
        enumWords = ""
        indexes = []
        for i in range( len( self.aDefaultChoices ) ):
            indexes.append( i )
            if( len( indexes ) != 1 ): # if it is not the first choice
                if( len( indexes ) != len( self.aDefaultChoices ) - 1 ): # if it is not the last choice
                    enumWords += sentenceHelpEnumMarks[0]
                else:
                    enumWords += sentenceHelpEnumMarks[1]
            enumWords += self.aDefaultChoices[i][0]
        sentenceTemplate = sentenceHelpEnumDefault[0]
        if( not bIntroToSay ):
            sentenceTemplate = sentenceHelpEnumChoices[3]
        if( len( self.aDefaultChoices ) == 0 ): # if there is no default choice
            sentence = ""
        else:
            sentence = sentenceTemplate % enumWords
        return sentence

    def explanationTactileSensor(self):
        "Explain the possible interaction with the tactile sensor."
        sentenceHelpTactile = self.aAllSentences[self.tts.getLanguage()]["helpTactile"]
        if( self.bInTactileSensorMenu ):
            sentence = sentenceHelpTactile[1]
        else:
            sentence = sentenceHelpTactile[0]
        return sentence

    def helpWhenAsked(self, sentence = ""):
        "Help when the user asked it: enumerate choices, enumerate default choices and explain tactile sensor possible interaction."
        if( not self.bInTactileSensorMenu ):
            # enumeration of choices
            sentence += self.enumerateChoices( True ) # True to ask that the introduction is played
            # enumeration of default choices
            sentence += self.enumerateDefaultChoices( True ) # True to ask that the introduction is played
        # explanation about alternative modality (tactil sensor, arm motion)
        sentence += self.explanationTactileSensor()
        # launch TTS
        idTTS = -1
        if( sentence != "" ):
            if( self.bInTactileSensorMenu ):
                idTTS = self.tts.post.say( sentence + "\\Pau=300\\" )
            else:
                idTTS = self.tts.post.say( sentence )
            self.aIdsTTS.append( idTTS )
            self.logger.debug( "Robot says: " + str(sentence) )
            # launch TTS movement animation
            if( self.bInTactileSensorMenu ):
                if( self.nFrameNumber != self.aFrameNumbers["helpTactileSensor"] ):
                    self.nFrameNumber = self.aFrameNumbers["helpTactileSensor"]
                    try:
                        self.gotoAndStop(self.nFrameNumber)
                    except:
                        pass
            else:
                if( self.nFrameNumber != self.aFrameNumbers["bodyTalk"] ):
                    self.nFrameNumber = self.aFrameNumbers["bodyTalk"]
                    try:
                        self.gotoAndStop(self.nFrameNumber)
                    except:
                        pass
        # wait for the end of the TTS
        if( idTTS != -1 ):
            try:
                self.tts.wait( idTTS, 0 )
            except:
                self.logger.debug( "Warning: Could not wait the TTS." )
        # repeat the question

    def helpAfterFailure(self, sentence = ""):
        "Help when the speech recognition failed (nothing understood or incorrect answer understood)."
        if( self.nCountFailure < self.nMaxCountFailure ): # if reasonable number of failures
            if( self.bActivateHelpWhenFailure ):
                if( self.nCountFailure in [1, 2] ): # if first or second failure
                    # enumeration of choices, or default words if there is no choice
                    if( len( self.aChoices ) - len( self.aDefaultChoices ) > 0 ): # if there is at least one choice
                        sentence += self.enumerateChoices( self.nCountFailure == 1 ) # the introduction is played if it is the first failure
                    else:
                        sentence += self.enumerateDefaultChoices( self.nCountFailure == 1 ) # the introduction is played if it is the first failure
                    if( self.nCountFailure == 2 ): # if second failure
                        # explanation about alternative modality (tactil sensor, arm motion)
                        sentence += self.explanationTactileSensor()
                # launch TTS
                idTTS = -1
                if( sentence != "" ):
                    idTTS = self.tts.post.say( sentence )
                    self.aIdsTTS.append( idTTS )
                    self.logger.debug( "Robot says: " + str(sentence) )
                    # launch TTS movement animation
                    listPossibleFrames = range( len( self.aAllSentences[self.tts.getLanguage()]["notUnderstoodAnims"] ) )
                    for i in range(len(listPossibleFrames)):
                        listPossibleFrames[i] = listPossibleFrames[i] * 10 + self.aFrameNumbers["notUnderstood"]
                    if( ( self.nFrameNumber != self.aFrameNumbers["bodyTalk"] ) and not ( self.nFrameNumber in listPossibleFrames ) ):
                        try:
                            self.gotoAndStop(self.aFrameNumbers["bodyTalk"])
                        except:
                            pass
                    self.nFrameNumber = self.aFrameNumbers["bodyTalk"]
                # wait for the end of the TTS
                if( idTTS != -1 ):
                    try:
                        self.tts.wait( idTTS, 0 )
                    except:
                        self.logger.debug( "Warning: Could not wait the TTS." )
            # repeat the question
        else: # if maximum number of failures
            # skip the question
            self.goOut( self.asExitWords[0], "notUnderstood" )

# LEDS ---------------------------------------------------------------------------------------------------

    def setLeds(self, eyesLight, earsLight, brainLight):
        "Set all LEDS (eyes, ears and brain lights)."
        rDuration = 1
        if( self.bActivateEyesLight ):
            # set eyes leds
            self.leds.post.fadeRGB( "FaceLeds", eyesLight, rDuration )
        if( self.bActivateEarsLight ):
            # set ears leds
            self.leds.fadeRGB( "EarLeds", earsLight, rDuration )
        if( self.bActivateBrainLight ):
            # set brain leds light
            self.setLedsBrain( brainLight, 500 )

    def ledsUnderstood(self, bFlashEars, bFlashBrain):
        "Sequence of LEDS for eyes, ears and brain when the robot understood what it heard."
        self.bBrainAnimPaused = True
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0x00FF00, rDuration )
        if( self.bActivateEarsLight ):
            if( bFlashEars ):
                self.leds.fadeRGB( "EarLeds", 0x00FF00, rDuration )
        if( self.bActivateBrainLight ):
            if( bFlashBrain ):
                self.setLedsBrain( 0.5, int(rDuration * 1000) )
        time.sleep( 0.3 )
        rDuration = 0.2
        if( self.bActivateEyesLight ):
            if( self.bInTactileSensorMenu ):
                self.leds.fadeRGB( "FaceLeds", 0xFFFFFF, rDuration )
            else:
                self.leds.fadeRGB( "FaceLeds", 0x000000, rDuration )
        if( self.bActivateEarsLight ):
            if( bFlashEars ):
                self.leds.fadeRGB( "EarLeds", 0x000000, rDuration )
        if( self.bActivateBrainLight ):
            if( bFlashBrain ):
                self.setLedsBrain( 0., int(rDuration * 1000) )
        time.sleep( 0.1 )
        if( not self.bInTactileSensorMenu ):
            self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )
        time.sleep( 0.1 )
        self.bBrainAnimPaused = False

    def ledsNotUnderstood(self):
        "Sequence of LEDS for eyes and ears when the robot did not understand what it heard."
        self.bBrainAnimPaused = True
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0xFF0000, rDuration )
        if( self.bActivateEarsLight ):
            self.leds.fadeRGB( "EarLeds", 0xFF0000, rDuration )
        time.sleep( 0.05 )
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0x000000, rDuration )
        if( self.bActivateEarsLight ):
            self.leds.fadeRGB( "EarLeds", 0x000000, rDuration )
        time.sleep( 0.05 )
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0xFF0000, rDuration )
        if( self.bActivateEarsLight ):
            self.leds.fadeRGB( "EarLeds", 0xFF0000, rDuration )
        time.sleep( 0.05 )
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0x000000, rDuration )
        if( self.bActivateEarsLight ):
            self.leds.fadeRGB( "EarLeds", 0x000000, rDuration )
        time.sleep( 0.3 )
        self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )
        self.bBrainAnimPaused = False

    def ledsNegative(self):
        "Sequence of LEDS for eyes and ears when the robot understood 'no'."
        self.bBrainAnimPaused = True
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0xFF0000, rDuration )
        if( self.bActivateEarsLight ):
            self.leds.fadeRGB( "EarLeds", 0xFF0000, rDuration )
        time.sleep( 0.3 )
        rDuration = 0.2
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0x000000, rDuration )
        if( self.bActivateEarsLight ):
            self.leds.fadeRGB( "EarLeds", 0x000000, rDuration )
        time.sleep( 0.1 )
        self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )
        time.sleep( 0.1 )
        self.bBrainAnimPaused = False

    def loopLedsReco(self):
        "LEDS (eyes and ears) process during the speech recognition."
        self.beginTime = time.time()
        if( self.bInConfirmation ):
            timerReco = self.beginTime + self.nTimeoutRecoConfirmation
        else:
            timerReco = self.beginTime + self.nTimeoutReco
        self.bHasAlreadyHearingEyes = False
        nEarLedsNextIndex = 0
        nEyesLed = -1
        while( self.bRecoIsWaitingForVoice or self.bRecoIsHearingOrAnalysing ):
            if( self.bMustStop ):
                try:
                    self.timeToReply(time.time() - self.beginTime)
                except:
                    pass
                break
            if( self.bRecoIsWaitingForVoice ):
                if( timerReco < time.time() ):
                    try:
                        self.timeToReply(timerReco - self.beginTime)
                    except:
                        pass
                    self.sRecoInterruption = "timeout"
                    break
            nEarLedsNextIndex = self.ledsEarsTurnOneStep( nEarLedsNextIndex )
            nEyesLed += 1
            self.ledsEyesTurnOneStep( 0x0055FF, nEyesLed%8 )
            time.sleep( 0.2 )

    def ledsEarsTurnOneStep(self, nEarLedsNextIndex):
        "One step of ears LEDS sequence (turn) when the robot is in speech recognition."
        if( self.bActivateEarsLight ):
            nNbrLedByEars = 10
            rTime = 0.7
            strTemplate = "Ears/Led/%s/%dDeg/Actuator/Value"
            nAngle = (360/nNbrLedByEars) * nEarLedsNextIndex
            # update index before sending movement in case of a fast/concurrent call of the function
            nEarLedsNextIndex -= 1 # more beautiful to turn in this way
            if( nEarLedsNextIndex < 0 ):
                nEarLedsNextIndex = nNbrLedByEars-1
            self.leds.post.fade( strTemplate % ( "Left", nAngle ), 1.0, rTime )
            self.leds.post.fade( strTemplate % ( "Right", nAngle ), 1.0, rTime )
            self.leds.post.fade( strTemplate % ( "Left", nAngle ), 0.0, rTime*1.2 )
            self.leds.post.fade( strTemplate % ( "Right", nAngle ), 0.0, rTime*1.2 )
        return nEarLedsNextIndex

    def ledsEyesTurnOneStep(self, nColor, nLed):
        "One step of eyes LEDS sequence (turn) when the robot is in speech recognition."
        if( self.bActivateEyesLight ):
            rTime = 0.7
            if( self.bRecoIsHearingOrAnalysing ):
                if( not self.bHasAlreadyHearingEyes ):
                    self.leds.fadeRGB( "FaceLeds", 0xF4FF22, 0.1 )
                    # start headcheck animation
                    if( self.nFrameNumber != self.aFrameNumbers["headCheck"] ):
                        self.nFrameNumber = self.aFrameNumbers["headCheck"]
                        try:
                            self.gotoAndStop(self.nFrameNumber)
                        except:
                            pass
                    self.bHasAlreadyHearingEyes = True
            elif( self.bRecoIsWaitingForVoice ):
                self.leds.post.fadeRGB( "FaceLed%d" % (nLed) , nColor, rTime )
                self.leds.post.fadeRGB( "FaceLed%d" % (nLed) , 0x000000, rTime*1.25 )

    def ledsChangeOnTactile(self):
        self.bBrainAnimPaused = True
        rDuration = 0.05
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0x0055FF, rDuration )
        self.setLedsBrain( 0.5, int(rDuration * 1000) )
        time.sleep( 0.3 )
        rDuration = 0.2
        if( self.bActivateEyesLight ):
            self.leds.fadeRGB( "FaceLeds", 0xFFFFFF, rDuration )
        self.setLedsBrain( 0., int(rDuration * 1000) )
        time.sleep( 0.2 )
        self.bBrainAnimPaused = False

    def loopLedsBrainTurn(self):
        self.setLeds( 0xFFFFFF, 0xFFFFFF, 0. )
        rIntensity = 0.5
        nTime = 50
        bAlreadyPaused = False
        while( self.bInTactileSensorMenu ):
            if( not self.bBrainAnimPaused ):
                if( self.nFront == 1 or self.nMiddle == 1 or self.nRear == 1 ):
                    if( not bAlreadyPaused ):
                        bAlreadyPaused = True
                        self.setLedsBrain( 0., 50 )
                else:
                    bAlreadyPaused = False
                    if( self.bActivateBrainLight ):
                        for i in range( 12 ):
                            if( not self.bBrainAnimPaused ):
                                riseTime = self.dcm.getTime(nTime)
                                strDeviceName = self.getBrainLedName(i)
                                self.dcm.set( [ strDeviceName, "Merge",  [[ rIntensity, riseTime ]] ] )
                                time.sleep( nTime/1000. )
                                if( not self.bBrainAnimPaused ):
                                    self.dcm.set( [ strDeviceName, "Merge",  [[ 0.0, riseTime + int(nTime)/4 ]] ] )
            time.sleep( nTime/1000. )
        self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )

    def loopLedsBrainTwinkle(self):
        rIntensity = 0.5
        bOnStep = True
        bAlreadyPaused = False
        while( not self.bInTactileSensorMenu and self.bIsRunning ):
            if( not self.bBrainAnimPaused ):
                if( self.nFront == 1 or self.nMiddle == 1 or self.nRear == 1 ):
                    if( not bAlreadyPaused ):
                        bAlreadyPaused = True
                        self.setLedsBrain( 0., 50 )
                else:
                    bAlreadyPaused = False
                    if( bOnStep ):
                        self.setLedsBrain( rIntensity, 700 )
                        bOnStep = False
                    else:
                        self.setLedsBrain( 0.0, 700 )
                        bOnStep = True
            time.sleep( 1 )

    def setLedsBrain(self, rIntensity, rTimeMs):
        "One step of brain LEDS sequence (twinkle) when the robot is in speech recognition."
        if( self.bActivateBrainLight ):
            riseTime = self.dcm.getTime( rTimeMs )
            for i in range( 12 ):
                strDeviceName = self.getBrainLedName(i)
                self.dcm.set( [ strDeviceName, "Merge",  [[ rIntensity, riseTime ]] ] )

# TACTILE SENSOR MENU -------------------------------------------------------------------------------------

    def onAlternativeModalityAction(self, p):
        "Process actions from alternative modalities (sequence from the tactile sensor, simple click on the torso button...)."
        if( not self.bIsRunning ): # if the box is not running
            return # then go out without doing a thing
        if( not self.bInTactileSensorMenu ): # if we are not in the tactile sensor menu (so if we are in the question-recognition-reaction loop)
            if( p in ["TapFront", "TapMiddle", "TapRear", "LongFront", "LongMiddle", "LongRear"] ):
                bTTSRunning = False # to know if TTS is running
                for idTTS in self.aIdsTTS:
                    if( self.tts.isRunning( idTTS )):
                        bTTSRunning = True
                if( bTTSRunning ): # if TTS is running
                    # skip the TTS
                    self.skipTTS()
                else: # if TTS was not running (so if in recognition)
                    # prepare to start the tactile sensor menu
                    self.bInTactileSensorMenu = True
                    # and stop the question-recognition-reaction loop
                    self.goOutOfQuestionRecoReaction()
                    self.sRecoInterruption = "onTactileSensor"
                    # start the tactile sensor menu
                    self.sayCurrentChoice()
                    # start counting timeout
                    self.rTimeWhenActionMadeInTactileMenu = time.time()
                    thread.start_new_thread( self.loopCheckTimeoutInTactileMenu, (self.rTimeWhenActionMadeInTactileMenu,) )
            elif( p in ["Tap", "CalmDown"] ):
                # skip the TTS
                self.skipTTS()
                # then stop everything and cancel the question
                self.goOut( self.asExitWords[0], "onTactileSensor" )
                self.sRecoInterruption = "onTactileSensor"
                self.setLeds( 0xFFFFFF, 0xFFFFFF, 0.5 )
        else: # if we are in the tactile sensor menu
            self.rTimeWhenActionMadeInTactileMenu = -1.
            if( p in ["TapFront"] ):
                bTTSRunning = False # to know if TTS is running
                for idTTS in self.aIdsTTS:
                    if( self.tts.isRunning( idTTS ) ):
                        bTTSRunning = True
                if( self.bIsSayingChoice or not bTTSRunning ): # else just skip the TTS (in the sayCurrentChoice function)
                    # change choice
                    self.nIndexChoice += 1
                    if( self.nIndexChoice >= len( self.aChoices ) ):
                        self.nIndexChoice = 0
                # say the choice in the tactile sensor menu
                self.sayCurrentChoice()
                self.timeoutManagingInTactileMenu()
            elif( p in ["TapRear"] ):
                bTTSRunning = False # to know if TTS is running
                for idTTS in self.aIdsTTS:
                    if( self.tts.isRunning( idTTS )):
                        bTTSRunning = True
                if( self.bIsSayingChoice or not bTTSRunning ): # else just skip the TTS (in the sayCurrentChoice function)
                    # change choice
                    self.nIndexChoice -= 1
                    if( self.nIndexChoice < 0 ):
                        self.nIndexChoice = len( self.aChoices ) - 1
                # say the choice in the tactile sensor menu
                self.sayCurrentChoice()
                self.timeoutManagingInTactileMenu()
            elif( p in ["TapMiddle", "LongMiddle"] ):
                self.rTimeWhenActionMadeInTactileMenu = time.time()
                rTimeForThisAction = self.rTimeWhenActionMadeInTactileMenu
                bWasSayingChoice = self.bIsSayingChoice
                bTTSRunning = False # to know if TTS is running
                for idTTS in self.aIdsTTS:
                    if( self.tts.isRunning( idTTS )):
                        bTTSRunning = True
                # skip the TTS if it is running
                self.skipTTS()
                if( bWasSayingChoice or not bTTSRunning ):
                    # validate choice
                    thread.start_new_thread( self.ledsUnderstood, (False, True) )
                    if( self.aChoices[self.nIndexChoice][0] == self.asRepeatWords[0] ):
                        self.repeatWhenNoQuestion()
                        # launch TTS
                        idTTS = -1
                        if( self.sQuestion != ""):
                            idTTS = self.tts.post.say( self.sQuestion + "\\Pau=300\\" )
                            self.aIdsTTS.append( idTTS )
                            self.logger.debug( "Robot says: " + str(self.sQuestion) )
                        # wait for the end of the TTS
                        if( idTTS != -1 ):
                            try:
                                self.tts.wait( idTTS, 0 )
                            except:
                                self.logger.debug( "Warning: Could not wait the TTS." )
                    else:
                        self.reactionWordUnderstood( [ self.aChoices[self.nIndexChoice][0], 1.0 ] )
                if( self.bIsRunning and rTimeForThisAction == self.rTimeWhenActionMadeInTactileMenu ): #$$$
                    self.rTimeWhenActionMadeInTactileMenu = -1.
                    # say the choice in the tactile sensor menu
                    self.sayCurrentChoice()
                    self.timeoutManagingInTactileMenu()
            elif( p == "LongFront" ):
                if( not self.bPressed ):
                    self.bPressed = True
                    bLastElementSaid = False
                    while( self.bPressed ):
                        if( self.nFront == 0 ):
                            self.bPressed = False
                            break
                        bTTSRunning = False # to know if TTS is running
                        for idTTS in self.aIdsTTS:
                            if( self.tts.isRunning( idTTS )):
                                bTTSRunning = True
                        if( self.bIsSayingChoice or not bTTSRunning ):
                            # change choice
                            self.nIndexChoice += 1
                            if( self.nIndexChoice >= len( self.aChoices ) - 1 ):
                                self.nIndexChoice = len( self.aChoices ) - 1
                                if( not bLastElementSaid ):
                                    bLastElementSaid = True
                                    # say the choice in the tactile sensor menu
                                    thread.start_new_thread( self.sayCurrentChoice, () )
                            else:
                                # say the choice in the tactile sensor menu
                                thread.start_new_thread( self.sayCurrentChoice, () )
                        else:
                            if( self.nIndexChoice == len( self.aChoices ) - 1 ):
                                bLastElementSaid = True
                            # say the choice in the tactile sensor menu
                            thread.start_new_thread( self.sayCurrentChoice, () )
                        for i in range(8):
                            if( self.nFront == 0 ):
                                self.bPressed = False
                                break
                            time.sleep(0.1)
                    for idTTS in self.aIdsTTS:
                        if( self.tts.isRunning( idTTS ) ):
                            try:
                                self.tts.wait( idTTS, 0 )
                            except:
                                self.logger.debug( "Warning: Could not wait the TTS." )
                    self.timeoutManagingInTactileMenu()
            elif( p == "LongRear" ):
                if( not self.bPressed ):
                    self.bPressed = True
                    bFirstElementSaid = False
                    while( self.bPressed ):
                        if( self.nRear == 0 ):
                            self.bPressed = False
                            break
                        bTTSRunning = False # to know if TTS is running
                        for idTTS in self.aIdsTTS:
                            if( self.tts.isRunning( idTTS )):
                                bTTSRunning = True
                        if( self.bIsSayingChoice or not bTTSRunning ):
                            # change choice
                            self.nIndexChoice -= 1
                            if( self.nIndexChoice <= 0 ):
                                self.nIndexChoice = 0
                                if( not bFirstElementSaid ):
                                    bFirstElementSaid = True
                                    # say the choice in the tactile sensor menu
                                    thread.start_new_thread( self.sayCurrentChoice, () )
                            else:
                                # say the choice in the tactile sensor menu
                                thread.start_new_thread( self.sayCurrentChoice, () )
                        else:
                            if( self.nIndexChoice == 0 ):
                                bFirstElementSaid = True
                            # say the choice in the tactile sensor menu
                            thread.start_new_thread( self.sayCurrentChoice, () )
                        for i in range(8):
                            if( self.nRear == 0 ):
                                self.bPressed = False
                                break
                            time.sleep(0.1)
                    for idTTS in self.aIdsTTS:
                        if( self.tts.isRunning( idTTS ) ):
                            try:
                                self.tts.wait( idTTS, 0 )
                            except:
                                self.logger.debug( "Warning: Could not wait the TTS." )
                    self.timeoutManagingInTactileMenu()
            elif( p in ["Tap", "CalmDown"] ):
                # then stop everything and cancel the question
                self.goOut( self.asExitWords[0], "onTactileSensor" )

    def sayCurrentChoice(self):
        "In the tactile sensor menu, make the robot say the current selected choice"
        self.bIsSayingChoice = True
        rTimeCurrent = time.time()
        self.rTimeLastChoiceSaid = rTimeCurrent
        # stop previous TTS
        self.skipTTS()
        # launch TTS
        idTTS = -1
        if( self.aChoices[ self.nIndexChoice ][0] != "" ):
            if( self.nFrameNumber != self.aFrameNumbers["headDown"] ):
                self.nFrameNumber = self.aFrameNumbers["headDown"]
                try:
                    self.gotoAndStop(self.nFrameNumber)
                except:
                    pass
            sentence = self.aChoices[ self.nIndexChoice ][0] + "?"
            idTTS = self.tts.post.say( sentence )
            self.aIdsTTS.append( idTTS )
            self.logger.debug( "Robot says: " + str(sentence) )
            # launch flash leds
            thread.start_new_thread( self.ledsChangeOnTactile, () )
        if( idTTS != -1 ):
            try:
                self.tts.wait( idTTS, 0 )
            except:
                self.logger.debug( "Warning: Could not wait the TTS." )
        if( self.rTimeLastChoiceSaid == rTimeCurrent ):
            self.rTimeLastChoiceSaid = -1.
            self.bIsSayingChoice = False

    def timeoutManagingInTactileMenu(self):
        # check if there has been an other action with tts made while this one was processed
        bTTSRunning = False # to know if TTS is running
        for idTTS in self.aIdsTTS:
            if( self.tts.isRunning( idTTS )):
                bTTSRunning = True
        if( not bTTSRunning ):
            # start counting timeout
            self.rTimeWhenActionMadeInTactileMenu = time.time()
            thread.start_new_thread( self.loopCheckTimeoutInTactileMenu, (self.rTimeWhenActionMadeInTactileMenu,) )

    def loopCheckTimeoutInTactileMenu(self, rTimeForThisAction):
        nTimeout = time.time() + self.nTimeoutTactile
        if( self.rTimeWhenActionMadeInTactileMenu == rTimeForThisAction ):
            while( time.time() < nTimeout and self.rTimeWhenActionMadeInTactileMenu == rTimeForThisAction and self.bIsRunning ):
                time.sleep( 0.1 )
            if( self.rTimeWhenActionMadeInTactileMenu != rTimeForThisAction ):
                self.nCountNoReply = 0
            elif( self.bIsRunning ):
                self.rTimeWhenActionMadeInTactileMenu = -1.
                self.nCountNoReply += 1
                if( self.nCountNoReply >= self.nMaxCountNoReply ):
                    self.goOut( self.asExitWords[0], "timeout" )
                else:
                    bTTSRunning = False # to know if TTS is running
                    for idTTS in self.aIdsTTS:
                        if( self.tts.isRunning( idTTS )):
                            bTTSRunning = True
                    if( not bTTSRunning ):
                        # say the choice in the tactile sensor menu
                        self.sayCurrentChoice()
                        # start counting timeout
                        self.rTimeWhenActionMadeInTactileMenu = time.time()
                        thread.start_new_thread( self.loopCheckTimeoutInTactileMenu, (self.rTimeWhenActionMadeInTactileMenu,) )

# TACTILE SENSOR HANDLER -------------------------------------------------------------------------------

    def initSeqDetected(self):
        "Initialize the sequence handler."
        self.bSeqStarted = False
        self.aDetectedSeqs = []
        self.aDetectedSeqs.extend(self.aSeqs)
        for seq in self.aDetectedSeqs:
            seq["index"] = 0
            seq["previousStepTime"] = 0

    def convertToArrayOfPossibleStates(self, states):
        "Check if the states described in the sequences using a string are in the right syntax, and then convert them to an array of the possible states."
        aStates = []
        aStates3 = [[1, 1, 1]]
        aStates2 = [[0, 1, 1], [1, 0, 1], [1, 1, 0]]
        aStates1 = [[1, 0, 0], [0, 1, 0], [0, 0, 1]]
        aStates0 = [[0, 0, 0]]
        try:
            if( int(states) == states ): # if states is an integer
                states = str(states)
        except:
            pass
        if( self.isString(states) ):
            if( not states in ["*", "0+", "0", "0-", "1+", "1", "1-", "2+", "2", "2-", "3+", "3", "3-", "F+", "F", "F-", "M+", "M", "M-", "R+", "R", "R-"] ):
                raise Exception( "Error in sequences states description syntax: description expected in " + str(["*", "0+", "0", "0-", "1+", "1", "1-", "2+", "2", "2-", "3+", "3", "3-", "F+", "F", "F-", "M+", "M", "M-", "R+", "R", "R-"]) + " but " + str(p) + " found with this type: " + str(type(p)) )
            if( states in ["*", "0+", "1+", "2+", "3+", "3", "3-", "F+", "M+", "R+"] ):
                aStates.extend(aStates3)
            if( states in ["*", "0+", "1+", "2+", "2", "2-", "3-"] ):
                aStates.extend(aStates2)
            if( states in ["*", "0+", "1+", "1", "1-", "2-", "3-"] ):
                aStates.extend(aStates1)
            if( states in ["*", "0+", "0", "0-", "1-", "2-", "3-", "F-", "M-", "R-"] ):
                aStates.extend(aStates0)
            if( states in ["F", "F+", "F-"] ):
                aStates.append([1, 0, 0])
            if( states in ["M", "M+", "M-"] ):
                aStates.append([0, 1, 0])
            if( states in ["R", "R+", "R-"] ):
                aStates.append([0, 0, 1])
            if( states in ["F+", "M+"] ):
                aStates.append([1, 1, 0])
            if( states in ["R+", "M+"] ):
                aStates.append([0, 1, 1])
            if( states in ["F+", "R+"] ):
                aStates.append([1, 0, 1])
        elif( self.isArray(states) ):
            if( self.isArray(states[0]) ):
                aStates = states
            elif( int(states[0]) == states[0] ):
                aStates = [states]
            else:
                raise Exception( "Error in sequences states description syntax: description expected in " + str(["*", "0+", "0", "0-", "1+", "1", "1-", "2+", "2", "2-", "3+", "3", "3-", "F+", "F", "F-", "M+", "M", "M-", "R+", "R", "R-"]) + " but " + str(p) + " found with this type: " + str(type(p)) )
        else:
            raise Exception( "Error in sequences states description syntax:\nstring, array or int expected but " + str(type(p)) + " found" )
        return aStates

    def checkIfSeqsCorrespondingLeft(self, param):
        "If the sequence handler is done (there is no sequence detected left or the first in the list corresponds), then reinitialize the sequence handler, and give the corresponding sequence if there is one."
        if( self.aDetectedSeqs == [] ):
            # then no sequence corresponding in the list
            self.initSeqDetected()
        else:
            if( self.aDetectedSeqs[0]["index"] == -1 ): # if first sequence in left ones corresponds
                # then it is this sequence which is played
                thread.start_new_thread( self.onAlternativeModalityAction, (self.aDetectedSeqs[0]["name"],) )
                self.initSeqDetected()
        self.mutexCheckIfSeqsCorrespondingLeft.unlock()

    def loopCheckTimeoutMax(self, nTimeoutMax, seq, currentState, currentTime):
        "When timeout ellapsed, check the sequence status and process it."
        nPreviousIndex = seq["index"]
        time.sleep(nTimeoutMax + 0.1)
        aSeqsTemp = []
        aSeqsTemp.extend( self.aDetectedSeqs )
        currentState = [self.nFront, self.nMiddle, self.nRear]
        currentTime = time.time()
        if( nPreviousIndex == seq["index"] and not self.mutexProcessCurrentState.test() and not (1 in currentState) ): # if no change in the sequence step but timeout ellapsed and sequence handler is not processing (so if there is no action from the user and the sequence is still at the same point)
            if( seq in aSeqsTemp and seq["index"] != -1 ): # but if sequence is still in the possible ones and not completed
                if( currentState in seq["statesAndTimeout"][seq["index"]] ): # last check if the current state corresponds to the next one
                    # then we go to the next step
                    seq["previousStepTime"] = currentTime
                    seq["index"] += 2
                    if( seq["index"] > len( seq["statesAndTimeout"] ) ): # if there is no more step
                        seq["index"] = -1 # then the sequence is completed
                    else: # if there is at least one step left
                        nTimeoutMin = 0
                        nTimeoutMax = 5
                        if( self.isArray(seq["statesAndTimeout"][seq["index"]-1]) ):
                            if( seq["statesAndTimeout"][seq["index"]-1][0] < 0 ):
                                nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][0]
                                nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][1]
                            else:
                                nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][0]
                                nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][1]
                        else:
                            if( seq["statesAndTimeout"][seq["index"]-1] < 0 ):
                                nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1]
                            else:
                                nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1]
                        thread.start_new_thread( self.loopCheckTimeoutMax, (nTimeoutMax, seq, currentState, currentTime) )
                else:
                    # then remove the sequence from the possible ones
                    aSeqsTemp.remove(seq)
                    self.aDetectedSeqs = aSeqsTemp
                self.mutexCheckIfSeqsCorrespondingLeft.lock( self.checkIfSeqsCorrespondingLeft, None )

    def loopCheckTimeoutMin(self, nTimeoutMin, seq):
        "Wait that the minimum timeout ellapse to check if the new tactile sensor state corresponds to the expected one for this sequence."
        if( nTimeoutMin != 0 ):
            nPreviousIndex = seq["index"]
            time.sleep(nTimeoutMin - time.time() + seq["previousStepTime"])
            currentTime = time.time()
            currentState = [self.nFront, self.nMiddle, self.nRear]
            self.mutexProcessCurrentState.lock( self.processCurrentState, [0, currentState, currentTime] )

    def updateDetectedSeqs(self, seq, aSeqsTemp, currentState, currentTime):
        "Update a detected sequence."
        if( seq["index"] > 0 ): # if not the first step
            nTimeoutMin = 0
            nTimeoutMax = 5
            if( self.isArray(seq["statesAndTimeout"][seq["index"]-1]) ):
                if( seq["statesAndTimeout"][seq["index"]-1][0] < 0 ):
                    nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][0]
                    nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][1]
                else:
                    nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][0]
                    nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][1]
            else:
                if( seq["statesAndTimeout"][seq["index"]-1] < 0 ):
                    nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1]
                else:
                    nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1]
            if( currentTime > nTimeoutMax + seq["previousStepTime"] ): # if timeout of this step ellapsed
                aSeqsTemp.remove(seq) # then it is not this sequence which is played
            elif( not (currentState in seq["statesAndTimeout"][seq["index"]]) ): # if the current state does not correspond to one of the described ones but the timeout of this step did not ellaspe
                # then we check that this state could be an intermediate one
                aIntermediateStates = [[], [], []]
                for i in range( len( currentState ) ):
                    for j in range( len( seq["statesAndTimeout"][seq["index"]] ) ):
                        aIntermediateStates[i].append( seq["statesAndTimeout"][seq["index"]][j][i] )
                    for j in range( len( seq["statesAndTimeout"][seq["index"]-2] ) ):
                        aIntermediateStates[i].append( seq["statesAndTimeout"][seq["index"]-2][j][i] )
                bIsIntermediate = True
                for i in range( len( currentState ) ):
                    bIsIntermediate = bIsIntermediate and ( currentState[i] in aIntermediateStates[i] )
                if( not bIsIntermediate ):
                    aSeqsTemp.remove(seq) # then it is not this sequence which is played
            else: # if the current state correspond to one of the described ones
                if( currentTime > nTimeoutMin + seq["previousStepTime"] ): # if the minimum time to wait the next step is ellapsed
                    # then we go to the next step
                    seq["previousStepTime"] = currentTime
                    seq["index"] += 2
                    if( seq["index"] > len( seq["statesAndTimeout"] ) ): # if there is no more step
                        seq["index"] = -1 # then the sequence is completed
                    else: # if there is at least one step left
                        # start clock to timeout
                        nTimeoutMin = 0
                        nTimeoutMax = 5
                        if( self.isArray(seq["statesAndTimeout"][seq["index"]-1]) ):
                            if( seq["statesAndTimeout"][seq["index"]-1][0] < 0 ):
                                nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][0]
                                nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][1]
                            else:
                                nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][0]
                                nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][1]
                        else:
                            if( seq["statesAndTimeout"][seq["index"]-1] < 0 ):
                                nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1]
                            else:
                                nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1]
                        thread.start_new_thread( self.loopCheckTimeoutMin, (nTimeoutMin, seq) )
                        thread.start_new_thread( self.loopCheckTimeoutMax, (nTimeoutMax, seq, currentState, currentTime) )
                else: # if the minimum time to wait the next step is not ellapsed
                    # then we are going to wait until it is to check then
                    thread.start_new_thread( self.loopCheckTimeoutMin, (nTimeoutMin, seq) )
        elif( seq["index"] == 0 ): # for the first step
            if( currentState in seq["statesAndTimeout"][seq["index"]] ): # if the current state correspond to one of the described ones
                # then we go to the next step
                seq["previousStepTime"] = currentTime
                seq["index"] += 2
                if( seq["index"] > len( seq["statesAndTimeout"] ) ): # if there is no more step
                    seq["index"] = -1 # then the sequence is completed
                else: # if there is at least one step left
                    # start clock to timeout
                    nTimeoutMin = 0
                    nTimeoutMax = 5
                    if( self.isArray(seq["statesAndTimeout"][seq["index"]-1]) ):
                        if( seq["statesAndTimeout"][seq["index"]-1][0] < 0 ):
                            nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][0]
                            nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][1]
                        else:
                            nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1][0]
                            nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1][1]
                    else:
                        if( seq["statesAndTimeout"][seq["index"]-1] < 0 ):
                            nTimeoutMin = - seq["statesAndTimeout"][seq["index"]-1]
                        else:
                            nTimeoutMax = seq["statesAndTimeout"][seq["index"]-1]
                    thread.start_new_thread( self.loopCheckTimeoutMin, (nTimeoutMin, seq) )
                    thread.start_new_thread( self.loopCheckTimeoutMax, (nTimeoutMax, seq, currentState, currentTime) )
            else: # if the current state does not correspond to the first described
                aSeqsTemp.remove(seq) # then it is not this sequence which has just been started

    def updateSeqsHandler(self, currentState, currentTime):
        "Update list of detected sequences."
        aSeqsTemp = []
        aSeqsTemp.extend( self.aDetectedSeqs )
        for seq in self.aDetectedSeqs:
            self.updateDetectedSeqs( seq, aSeqsTemp, currentState, currentTime )
        self.aDetectedSeqs = aSeqsTemp
        self.mutexCheckIfSeqsCorrespondingLeft.lock( self.checkIfSeqsCorrespondingLeft, None )

    def processCurrentState(self, param):
        "Process the current tactile sensor state."
        pValue = param[0]
        currentState = param[1]
        currentTime = param[2]
        if( pValue == 1 and not self.bSeqStarted ):
            self.bSeqStarted = True
            for seq in self.aDetectedSeqs:
                seq["previousStepTime"] = currentTime
        # update sequences handler
        if( self.bSeqStarted ):
            self.updateSeqsHandler(currentState, currentTime)
        self.mutexProcessCurrentState.unlock()

    def onFrontTactilTouched(self, param):
        "Handle an action (touch or release) on the front tactile sensor."
        self.logger.debug( "Change detected on the front tactile sensor: " + str(param[0]) )
        pValue = param[0]
        currentTime = param[1]
        currentState = [pValue, self.nMiddle, self.nRear]
        self.nFront = pValue
        self.mutexProcessCurrentState.lock( self.processCurrentState, [pValue, currentState, currentTime] )
        self.mutexTactilTouched.unlock()

    def onMiddleTactilTouched(self, param):
        "Handle an action (touch or release) on the middle tactile sensor."
        self.logger.debug( "Change detected on the middle tactile sensor: " + str(param[0]) )
        pValue = param[0]
        currentTime = param[1]
        currentState = [self.nFront, pValue, self.nRear]
        self.nMiddle = pValue
        self.mutexProcessCurrentState.lock( self.processCurrentState, [pValue, currentState, currentTime] )
        self.mutexTactilTouched.unlock()

    def onRearTactilTouched(self, param):
        "Handle an action (touch or release) on the rear tactile sensor."
        self.logger.debug( "Change detected on the rear tactile sensor: " + str(param[0]) )
        pValue = param[0]
        currentTime = param[1]
        currentState = [self.nFront, self.nMiddle, pValue]
        self.nRear = pValue
        self.mutexProcessCurrentState.lock( self.processCurrentState, [pValue, currentState, currentTime] )
        self.mutexTactilTouched.unlock()

    def onTactilTouched(self, pDataName, pValue, pMessage):
        "Handle an action (touch or release) on the tactile sensor."
        self.mutexTactilTouched.lock( getattr( self, "on" + pDataName ), [pValue, time.time()] )

# OUTPUTS ACTIVATION --------------------------------------------------------------------------------------

    def goOut(self, outputName, cancelReason = ""):
        "Activate the right output (a choice output or the other output)."
        try:
            ALMemory.unsubscribeToEvent( "FrontTactilTouched", self.getName() )
            ALMemory.unsubscribeToEvent( "MiddleTactilTouched", self.getName() )
            ALMemory.unsubscribeToEvent( "RearTactilTouched", self.getName() )
        except:
            pass
        self.bGoOut = True
        self.bInTactileSensorMenu = False
        if( outputName in self.asExitWords ):
            try:
                self.other( cancelReason )
                self.logger.debug( "Output 'other' stimulated because cancel asked: " + str(cancelReason) + "." )
            except:
                try:
                    self.onStopped( cancelReason )
                    self.logger.debug( "Output 'onStopped' stimulated because cancel asked: " + str(cancelReason) + "." )
                except:
                    try:
                        self.onStopped()
                        self.logger.debug( "Output 'onStopped' stimulated because cancel asked." )
                    except:
                        choregraphe = ALProxy( "ALChoregraphe" )
                        choregraphe.onPythonError( self.getName(), "goOut", "Invalid output: the main output name needs to be 'other', and it needs to be dynamic (because it can be either a string, or an integer)." )
        else:
            nOutput = -1
            for i in range( len (self.aChoices) - len (self.aDefaultChoices) ):
                if( nOutput == -1 ):
                    if( outputName in self.aChoices[i+len( self.aDefaultChoices )] ):
                        nOutput = i
            if( nOutput != -1):
                if( self.bExternChoices ):
                    if( self.bRepeatValidatedChoice ):
                        self.skipTTS()
                        self.tts.say( outputName )
                        self.logger.debug( "Robot says: " + str(outputName) )
                    try:
                        self.other( self.aChoiceIndexes[nOutput] )
                        self.logger.debug( "Output 'other' stimulated with: " + str(self.aChoiceIndexes[nOutput]) + " (corresponding to the choice '" + str(self.aChoices[nOutput+len( self.aDefaultChoices )][0]) + "')." )
                    except:
                        try:
                            self.log("=======")
                            self.logger.warning(str(self.aChoices[nOutput+len( self.aDefaultChoices )][0]))
                            self.onStopped( self.aChoiceIndexes[nOutput] )
                            self.logger.debug( "Output 'onStopped' stimulated with: " + str(self.aChoiceIndexes[nOutput]) + " (corresponding to the choice '" + str(self.aChoices[nOutput+len( self.aDefaultChoices )][0]) + "')." )
                        except:
                            choregraphe = ALProxy( "ALChoregraphe" )
                            choregraphe.onPythonError( self.getName(), "goOut", "Invalid type of output: using the input 'choicesList', the main output needs to be dynamic (because it can be either a string, or an integer)." )
                else:
                    if( self.bRepeatValidatedChoice ):
                        self.skipTTS()
                        self.tts.say( outputName )
                        self.logger.debug( "Robot says: " + str(outputName) )
                    try:
                        func = getattr( self, "output_" + str(self.aChoiceIndexes[nOutput]+1) ) #+1 because the first one is output_1 corresponding to the element 0 in the list.
                        func(outputName)
                        self.logger.debug( "Output 'output_" + str(self.aChoiceIndexes[nOutput]+1) + "' stimulated with: " + str(outputName) + "." )
                    except:
                        choregraphe = ALProxy( "ALChoregraphe" )
                        choregraphe.onPythonError( self.getName(), "goOut", "Invalid output: the output 'output_" + str(self.aChoiceIndexes[nOutput]+1) + "' was expected to be stimulated with: " + str(outputName) + " but could not." )
        self.onUnload()
        # come back to an initial position and stop movement animation
        if( self.nFrameNumber != self.aFrameNumbers["end"] ):
            self.nFrameNumber = self.aFrameNumbers["end"]
            try:
                self.gotoAndStop(self.nFrameNumber)
            except:
                pass

# UNLOAD --------------------------------------------------------------------------------------------------

    def goOutOfQuestionRecoReaction(self):
        "Set some variables to go out of the question-recognition-reaction loop and reinitialize other variables which are going to be used again only on the next start of this box."
        self.bGoOut = True
        self.bMustStop = True
        self.nCountFailure = 0
        self.nCountNoReply = 0
        self.bInConfirmation = False
        self.bVocabularyLoaded = False
        self.skipTTS()
        for idTTS in self.aIdsTTS:
            try:
                self.aIdsTTS.remove( idTTS )
            except:
                self.logger.debug( "Warning: The task ID corresponding to the Text-To-Speech could not have been removed from the ID tasks list." )
        try:
            ALMemory.unsubscribeToEvent( "WordRecognized", self.getName() )
            self.bRecoIsWaitingForVoice = False
            self.bRecoIsHearingOrAnalysing = False
            self.logger.debug( "Speech recognition stopped." )
            ALMemory.unsubscribeToEvent( "SpeechDetected", self.getName() )
        except:
            pass

    def onUnload(self):
        "Reinitialize variables to default state."
        self.goOutOfQuestionRecoReaction()
        self.bExternChoices = False
        self.bInTactileSensorMenu = False
        try:
            ALMemory.unsubscribeToEvent( "FrontTactilTouched", self.getName() )
            ALMemory.unsubscribeToEvent( "MiddleTactilTouched", self.getName() )
            ALMemory.unsubscribeToEvent( "RearTactilTouched", self.getName() )
        except:
            pass
        self.bIsRunning = False]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is&#x0A;received on this input. The signal can be&#x0A;either a string so that NAO asks a&#x0A;question before the recognition of a&#x0A;choice, or a bang so that the speech&#x0A;recognition starts immediately without any&#x0A;question." id="2" />
                                                <Input name="choicesList" type="0" type_size="1" nature="1" inner="0" tooltip="To have extern choices list (for example,&#x0A;depending on extern variables).&#x0A;!! Warning !! : Must be set before each&#x0A;time the box is started (with onStart&#x0A;input). Otherwise, the choices displayed&#x0A;on the box will be selected." id="3" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip='Box behavior stops when a signal is&#x0A;received on this input, the &apos;other&apos; output is&#x0A;stimulated by &quot;onStop&quot;.' id="4" />
                                                <Output name="other" type="0" type_size="1" nature="1" inner="0" tooltip='When the user skipped the question, this output gives how it has been&#x0A;skipped. Gives also the number of the choice chosen in case of external&#x0A;choices.&#x0A;This output can be:&#x0A;- &quot;timeout&quot; if the user has not replied.&#x0A;- &quot;notUnderstood&quot; if the interaction with the speech recognition failed.&#x0A;- &quot;onStop&quot; if the onStop input has been activated.&#x0A;- &quot;wordRecognised&quot; if the exit command has been understood.&#x0A;- &quot;onTactileSensor&quot; if the user has tapped the tactile sensor of NAO.&#x0A;- an integer being the number of the external choice in the input list.' id="5" />
                                                <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                                <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="7" />
                                                <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="8" />
                                                <Output name="output_4" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="9" />
                                                <Output name="output_5" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="10" />
                                                <Parameter name="Activate head" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Head motion activation during the recognition and while NAO is&#x0A;talking." id="11" />
                                                <Parameter name="Activate arms" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="Arms motion activation while NAO is talking." id="12" />
                                                <Parameter name="Activate legs" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="Legs motion activation while NAO is talking." id="13" />
                                                <Parameter name="Minimum threshold to understand" inherits_from_parent="0" content_type="2" value="0.2" default_value="0.2" min="0" max="1" tooltip="Minimum threshold to get in order to be understood by NAO." id="14" />
                                                <Parameter name="Minimum threshold to be sure" inherits_from_parent="0" content_type="2" value="0.3" default_value="0.3" min="0" max="1" tooltip="Minimum threshold to get so that NAO would be sure about the user&apos;s&#x0A;answer. Below this threshold, NAO asks a confirmation about what has been&#x0A;understood." id="15" />
                                                <Parameter name="Speech recognition timeout when confirmation" inherits_from_parent="0" content_type="1" value="10" default_value="6" min="1" max="20" tooltip="When NAO asks if what he understood is correct, after this time, if there has been&#x0A;nothing heard, the speech recognition is stopped and the answer understood is&#x0A;considered as correct." id="16" />
                                                <Parameter name="Speech recognition timeout" inherits_from_parent="0" content_type="1" value="10" default_value="6" min="1" max="20" tooltip="After this time, if there has been nothing heard, the speech recognition is stopped&#x0A;and the question is repeated or is skipped." id="17" />
                                                <Parameter name="Maximum number of repetition when no reply" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="1" max="20" tooltip='After this number of times when the user did not reply, the question is skipped, and&#x0A;the output other is stimulated with &quot;timeout&quot;.' id="18" />
                                                <Parameter name="Repeat validated choice" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="If this option is activated, NAO repeats the validated choice when it exits the box." id="19" />
                                                <Parameter name="Activate ears light" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate ears light animation (turn, flash, etc...)." id="20" />
                                                <Parameter name="Activate eyes light" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate eyes light animation (turn, flash, etc...)." id="21" />
                                                <Parameter name="Activate brain light" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Activate brain light animation (turn, flash, etc...)." id="22" />
                                                <Parameter name="Tactile sensor menu timeout" inherits_from_parent="0" content_type="1" value="9" default_value="10" min="1" max="20" tooltip="After this time, if there has been no action made on the tactile sensor or the torso&#x0A;button, the choice currently selected is repeated or the question is skipped." id="23" />
                                                <Parameter name="Maximum number of repetition when failure" inherits_from_parent="0" content_type="1" value="3" default_value="5" min="1" max="20" tooltip='After this number of times when NAO did not understand the user, the question&#x0A;is skipped, and the output other is stimulated with &quot;notUnderstood&quot;.' id="24" />
                                                <Parameter name="Activate help when failure" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="When this parameter is activated, when NAO did not understand the user, he&#x0A;says some help enumerating available choices and attracting attention on the&#x0A;other available modalities (head tactile sensor)." id="25" />
                                                <Parameter name="Activate help command" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip='Enable the help command. So you can say &quot;help&quot; during the speech recognition&#x0A;and NAO will tell you more information.&#x0A;You will still be able to ask help by clicking the torso button.' id="26" />
                                                <Parameter name="Activate repeat command" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip='Activate the repeat command. So you can say &quot;repeat&quot; during the speech&#x0A;recognition and NAO will repeat the question.' id="27" />
                                                <Parameter name="Activate exit command" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip='Enable the exit command. So you can say &quot;exit&quot; during the speech recognition&#x0A;and the box will be stopped and the &apos;other&apos; output will be stimulated with&#x0A;&quot;wordRecognised&quot;.&#x0A;You will still be able to exit the box with&#x0A;the tactile sensor.' id="28" />
                                                <Parameter name="Sentences file" inherits_from_parent="0" content_type="4" value="/Aldebaran/choice_sentences.xml" default_value="/Aldebaran/choice_sentences.xml" tooltip="File containing all necessary sentences in each supported language." id="29" />
                                            </Box>
                                            <Box name="BrainEffects" id="12" tooltip="Can be used as a loading animation." x="1316" y="273">
                                                <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.bMustStop = False
        self.bIsRunning = False
        self.DCM = ALProxy( "DCM" )

        self.HeadLeds = ["Head/Led/%s/%s/%d/Actuator/Value" % (sPos, sSide, nIdx) for sPos in  ["Front", "Middle", "Rear"] for sSide in ["Right", "Left"] for nIdx in range(3)]
        self.aRotateSequence = [1, 0, 6, 12, 13, 14, 17, 16, 15, 9, 3, 4]
        self.aProgressSequence = [0, 3, 1, 4, 6, 9, 12, 15, 13, 16, 14, 17]
        #~ for i in range(len(self.HeadLeds)):
            #~ self.log("%d, %s" % (i, self.HeadLeds[i]))

    def onLoad(self):
        self.bMustStop = False
        self.bIsRunning = False

    def onUnload(self):
        self.onInput_onStop()

    def onInput_onStart(self):
        if( self.bIsRunning ):
            self.log( self.boxName + ": already started => nothing" )
            return

        self.bIsRunning = True
        self.bMustStop = False

        # Set all leds off
        ALLeds.off("BrainLeds")

        while( not self.bMustStop ):
            value = float(self.getParameter("intensity"))
            nTime = self.getParameter("delay")
            for i in self.aRotateSequence:
                riseTime = self.DCM.getTime(nTime)
                self.DCM.set( [ self.HeadLeds[i], "Merge",  [[value, riseTime ]] ] )
                time.sleep( nTime/1000. )
                self.DCM.set( [ self.HeadLeds[i], "Merge",  [[0.0, riseTime + int(nTime)/4 ]] ] )
        # end while

        self.bIsRunning = False
        # Set all leds on
        ALLeds.on("BrainLeds")
        self.onStopped()

    def onInput_onStop(self):
        self.bMustStop = True]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="2" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Parameter name="delay" inherits_from_parent="0" content_type="1" value="50" default_value="50" min="0" max="1000" tooltip="" id="5" />
                                                <Parameter name="intensity" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="1" tooltip="" id="6" />
                                            </Box>
                                            <Box name="TactileCodes" id="18" tooltip="Detection de sequence tactile sur la tête de Nao." x="701" y="314">
                                                <bitmap>media/images/box/icons_appu/fingerprint.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class SequenceHandler():
    def __init__(self, aSeq):
        self.aTactilSequence = aSeq
        self.reset()

    def reset(self):
        self.nTapTime = None
        self.nTapIndex = 2

    def update(self, aState, nTime):
        # In any case, if too much time elasped, sequence is invalidated
        if self.nTapTime != None and (nTime - self.nTapTime) > self.aTactilSequence[self.nTapIndex-1]:
            self.reset()
        # If current sensors state match current expected shape
        if aState == self.aTactilSequence[self.nTapIndex]:
            self.nTapTime = nTime
            self.nTapIndex += 2
        # If current sensor state does not match sequence at current index BUT match sequence at first index
        elif aState == self.aTactilSequence[1]:
            self.nTapTime = nTime
            self.nTapIndex = 4
        # If we've reach the end of the sequence, then output !!
        if self.nTapIndex > len(self.aTactilSequence):
            return self.aTactilSequence[0]
        else:
            return None

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.bIsRunning = False
        # Build a list of devices with full name
        self.aDeviceNames = ["%sTactilTouched" % name for name in ["Front", "Middle", "Rear"]]

        # Parameters
        parameters = [   ["CaressFtoR", "Caress front to rear", [1, 0, 0], 0.5, [1, 1, 0], 0.5, [0, 1, 0], 0.5, [0, 1, 1], 0.5, [0, 0, 1]],
                                ["CaressRtoF", "Caress rear to front", [0, 0, 1], 0.5, [0, 1, 1], 0.5, [0, 1, 0], 0.5, [1, 1, 0], 0.5, [1, 0, 0]],
                                ["SingleTap", "Single tap", [1, 1, 1], 1.5, [0, 0, 0]],
                                ["EnumerateFtoR", "Enumerate front to rear", [1, 0, 0], 1.0, [0, 1, 0], 1.0, [0, 0, 1]],
                                ["EnumerateRtoF", "Enumerate rear to front", [0, 0, 1], 1.0, [0, 1, 0], 1.0, [1, 0, 0]],
                                ["ZoomIn", "Zoom in", [1, 0, 1], 1.0, [0, 1, 0]],
                                ["ZoomOut", "Zoom out", [0, 1, 0], 1.0, [1, 0, 1]],
                                ["DoubleFront", "Double front", [1, 0, 0], 1.0, [0, 0, 0], 1.0, [1, 0, 0]],
                                ["DoubleMiddle", "Double middle", [0, 1, 0], 1.0, [0, 0, 0], 1.0, [0, 1, 0]],
                                ["DoubleRear", "Double rear", [0, 0, 1], 1.0, [0, 0, 0], 1.0, [0, 0, 1]],
                                ["DoubleTap", "Double tap", [1, 1, 1], 1.0, [0, 0, 0], 1.0, [1, 1, 1]],
                                ["SecretCode", "Secret code", [1, 0, 1], 1.0, [0, 0, 0], 1.0, [1, 0, 1]],
                                ["CalmDown", "Calm down", [1, 1, 1], 8.0, [0, 0, 0]]    ]
        # Create a sequence handler object for each enable sequence
        self.aSequenceHandler = []
        for seq in parameters:
            if self.getParameter(seq[1]):
                self.aSequenceHandler.append(SequenceHandler(seq))

    def onLoad(self):
        self.bIsRunning = False
        self.onInput_reset()

    def onUnload(self):
        self.onInput_onStop()

    def onSensorChange(self, pDataName, pValue, pMessage):
        "This is called whenever one of the three tactil sensors state change"
        aState = ALMemory.getListData( self.aDeviceNames )
        # This prevent to process several times the same sensor state
        if aState != self.aState:
            self.aState = aState
            nTime = time.time()
            #~ self.log(str(aState))
            for seq in self.aSequenceHandler:
                sOutput = seq.update(aState, nTime)
                if  sOutput != None:
                    self.Match(sOutput)
                    # Force all other sequence to be reset to prevent multiple match.
                    # But this will prevent sequences like "DoubleTap" to work since each "SingleTap" will reset "DoubleTap"
                    self.onInput_reset()
                    # Get the output function from the sequence name
                    try:
                        func = getattr(self, sOutput)
                        func()
                    # If no output function found, just forget it
                    except:
                        pass

    def onInput_onStart(self):
        if not self.bIsRunning:
            self.bIsRunning = True
            # Save initial sensor state
            self.aState = None#ALMemory.getListData( self.aDeviceNames )
            # Subscribe to each sensor device
            for device in self.aDeviceNames:
                ALMemory.subscribeToEvent( device, self.getName(), "onSensorChange" )

    def onInput_onStop(self):
        if self.bIsRunning:
            for device in self.aDeviceNames:
                ALMemory.unsubscribeToEvent( device, self.getName() )
            self.onInput_reset()
            self.bIsRunning = False

    def onInput_reset(self):
        for seq in self.aSequenceHandler:
            seq.reset()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="Match" type="3" type_size="1" nature="2" inner="0" tooltip="double tap" id="4" />
                                                <Output name="SingleTap" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                <Output name="DoubleFront" type="1" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                                                <Output name="DoubleMiddle" type="1" type_size="1" nature="2" inner="0" tooltip="" id="7" />
                                                <Output name="DoubleRear" type="1" type_size="1" nature="2" inner="0" tooltip="" id="8" />
                                                <Output name="EnumerateRtoF" type="1" type_size="1" nature="2" inner="0" tooltip="" id="9" />
                                                <Output name="EnumerateFtoR" type="1" type_size="1" nature="2" inner="0" tooltip="" id="10" />
                                                <Output name="CaressRtoF" type="1" type_size="1" nature="2" inner="0" tooltip="" id="11" />
                                                <Output name="CaressFtoR" type="1" type_size="1" nature="2" inner="0" tooltip="" id="12" />
                                                <Output name="DoubleTap" type="1" type_size="1" nature="2" inner="0" tooltip="" id="13" />
                                                <Output name="CalmDown" type="1" type_size="1" nature="2" inner="0" tooltip="" id="14" />
                                                <Output name="ZoomOut" type="1" type_size="1" nature="2" inner="0" tooltip="" id="15" />
                                                <Output name="ZoomIn" type="1" type_size="1" nature="2" inner="0" tooltip="" id="16" />
                                                <Output name="SecretCode" type="1" type_size="1" nature="2" inner="0" tooltip="" id="17" />
                                                <Parameter name="Caress front to rear" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Caress front to rear" id="18" />
                                                <Parameter name="Caress rear to front" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="19" />
                                                <Parameter name="Single tap" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="20" />
                                                <Parameter name="Double front" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="21" />
                                                <Parameter name="Double middle" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="22" />
                                                <Parameter name="Double rear" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="23" />
                                                <Parameter name="Calm down" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="24" />
                                                <Parameter name="Enumerate front to rear" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="25" />
                                                <Parameter name="Enumerate rear to front" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="26" />
                                                <Parameter name="Zoom in" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="27" />
                                                <Parameter name="Zoom out" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="28" />
                                                <Parameter name="Double tap" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="" id="29" />
                                                <Parameter name="Secret code" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="30" />
                                            </Box>
                                            <Box name="Say" id="15" tooltip="Say some text. Note that you must open the box to enter the text." x="903" y="68">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="Say Text" id="2" tooltip="Say the text received on its input." x="422" y="65">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                </Box>
                                                                <Box name="Localized Text" id="5" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                    <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 你好 ",
			"English" : " Hello ",
			"French" : " Nhop! ",
			"German" : " Hallo ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요  ",
			"Portuguese" : " Olá ",
			"Brazilian" : "  ",
			"Spanish" : " Hola ",
			"Arabic" : "  ",
			"Polish" : "  ",
			"Czech" : "  ",
			"Dutch" : "  ",
			"Danish" : "  ",
			"Finnish" : " Hei ",
			"Swedish" : "  ",
			"Russian" : "  ",
			"Turkish" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <chinese>你好</chinese>
                                                                        <english>Hello</english>
                                                                        <french>Nhop!</french>
                                                                        <german>Hallo</german>
                                                                        <italian>Ciao</italian>
                                                                        <japanese>こんにちは</japanese>
                                                                        <korean>안녕하세요 </korean>
                                                                        <portuguese>Olá</portuguese>
                                                                        <brazilian></brazilian>
                                                                        <spanish>Hola</spanish>
                                                                        <arabic></arabic>
                                                                        <polish></polish>
                                                                        <czech></czech>
                                                                        <dutch></dutch>
                                                                        <danish></danish>
                                                                        <finnish>Hei</finnish>
                                                                        <swedish></swedish>
                                                                        <russian></russian>
                                                                        <turkish></turkish>
                                                                        <language>15</language>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                </Box>
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Box name="Popup" id="25" tooltip="Play the sound, but NOW!&#x0A;v0.6&#x0A;&#x0A;- use preloading of sound, but sadly, it&apos;s notloaded at init but at onload (so at the loading of a timeline, argghhhh)" x="952" y="616">
                                                <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[# PlaySoundWithPreloading
# v0.6
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []
        self.loadedSoundID = self.player.loadFile( ALFrameManager.getBehaviorPath(self.behaviorId) + self.getParameter("Sound File") );


    def onUnload(self):
        try:
            self.player.unloadFile(self.loadedSoundID)
        except:
            #self.log("Could not unload the sound")
            pass
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            id = self.player.post.play(self.loadedSoundID,self.getParameter("Volume (%)")/100.,self.getParameter("Panorama"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()
# PlaySoundWithPreloading - end
pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="5" />
                                                <Parameter name="Panorama" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="6" />
                                                <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="7" />
                                                <Parameter name="Sound File" inherits_from_parent="0" content_type="4" value="/sounds/popup.wav" default_value="" tooltip="select your sound file from project ressource" id="8" />
                                            </Box>
                                            <Box name="Comment" id="17" tooltip="To comment your behavior. Enter the text here and move the box where you like&#x0A;to add the comment.&#x0A;&#x0A;Note: This box is not functional and has no effect on the behavior." plugin="textedit_plugin" x="1267" y="496">
                                                <bitmap>media/images/box/box-script.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self):
		self.onStopped("TODO: Do a better system when saying text: don\'t run the application while the loading sentence is being told")]]>
</content>
                                                </script>
                                                <pluginContent>
                                                    <text>TODO: Do a better system when saying text: don&apos;t run the application while the loading sentence is being told</text>
                                                </pluginContent>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            </Box>
                                            <Box name="BreathLoop" id="13" tooltip="Enter tooltip here" x="1506" y="0">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="BreathLoop_1" id="6" tooltip="tags:&#x0A;breath; loop" x="96" y="158">
                                                                    <bitmap>media/images/box/movement/move.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.oldfps = ALFrameManager.getTimelineFps(self.getName())
        try:
            frameNumber.increaseParent( self.getName() );
        except BaseException, err:
            # if you don't want to use some encapsulated sub box, you will in that case. no worry...
            pass

    def onLoad(self):
        #puts code for box cleanup here
        pass

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        newfps = (self.oldfps * self.getParameter("FPS (%)")) / 100
        ALFrameManager.setTimelineFps(self.getName(), newfps)
        pass

    def onInput_onStop(self):
        self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                                    <Parameter name="FPS (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="20" max="200" tooltip="" id="5" />
                                                                    <Timeline enable="1" fps="25" start_frame="0" end_frame="191" size="300">
                                                                        <BehaviorLayer name="event">
                                                                            <BehaviorKeyframe name="loop" index="179">
                                                                                <Diagram>
                                                                                    <Box name="Goto And Play" id="2" tooltip="Jump to a given frame (edit parameters to modify it) and start playing from this index." x="93" y="24">
                                                                                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        self.gotoAndPlayParent(self.getParameter("Frame number"))

    def onInput_onStop(self):
        ""]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                                        <Parameter name="Frame number" inherits_from_parent="0" content_type="1" value="1" default_value="1" min="0" max="10000" tooltip="" id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <ActuatorList model="Nao">
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="80" value="-0.79343" />
                                                                                <Key frame="105" value="-0.881321" />
                                                                                <Key frame="155" value="-0.705538" />
                                                                                <Key frame="180" value="-1.40867" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="80" value="-4.57277" />
                                                                                <Key frame="105" value="-4.57277" />
                                                                                <Key frame="155" value="-12.3072" />
                                                                                <Key frame="180" value="-14.5045" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="77" value="90.1745" />
                                                                                <Key frame="102" value="90.7897" />
                                                                                <Key frame="152" value="89.9108" />
                                                                                <Key frame="177" value="90.8776" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="77" value="7.11683" />
                                                                                <Key frame="102" value="6.94104" />
                                                                                <Key frame="152" value="6.76526" />
                                                                                <Key frame="177" value="6.76526" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="77" value="-66.3607" />
                                                                                <Key frame="102" value="-68.9974" />
                                                                                <Key frame="152" value="-69.2611" />
                                                                                <Key frame="177" value="-68.8216" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="77" value="-37.1758" />
                                                                                <Key frame="102" value="-38.67" />
                                                                                <Key frame="152" value="-33.0449" />
                                                                                <Key frame="177" value="-34.2754" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="77" value="6.58948" />
                                                                                <Key frame="102" value="6.41369" />
                                                                                <Key frame="152" value="6.15002" />
                                                                                <Key frame="177" value="6.15002" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="77" value="0.345455" />
                                                                                <Key frame="102" value="0.381818" />
                                                                                <Key frame="152" value="0.23348" />
                                                                                <Key frame="177" value="0.23348" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="73" value="87.8941" />
                                                                                <Key frame="98" value="89.9156" />
                                                                                <Key frame="148" value="86.8394" />
                                                                                <Key frame="173" value="87.982" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="73" value="-4.66067" />
                                                                                <Key frame="98" value="-3.95753" />
                                                                                <Key frame="148" value="-4.3091" />
                                                                                <Key frame="173" value="-4.48488" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="73" value="76.6" />
                                                                                <Key frame="98" value="77.8" />
                                                                                <Key frame="148" value="76.6" />
                                                                                <Key frame="173" value="74.2" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="73" value="31.204" />
                                                                                <Key frame="98" value="33.4013" />
                                                                                <Key frame="148" value="26.0184" />
                                                                                <Key frame="173" value="26.8973" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="73" value="10.193" />
                                                                                <Key frame="98" value="10.1051" />
                                                                                <Key frame="148" value="10.1051" />
                                                                                <Key frame="173" value="10.1051" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="73" value="0.40948" />
                                                                                <Key frame="98" value="0.40948" />
                                                                                <Key frame="148" value="0.309091" />
                                                                                <Key frame="173" value="0.309091" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="75" value="-8.52309" />
                                                                                <Key frame="100" value="-8.52309" />
                                                                                <Key frame="150" value="-8.17153" />
                                                                                <Key frame="175" value="-8.4352" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="75" value="3.43018" />
                                                                                <Key frame="100" value="3.43018" />
                                                                                <Key frame="150" value="7.56109" />
                                                                                <Key frame="175" value="7.56109" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="75" value="12.0436" />
                                                                                <Key frame="100" value="11.9557" />
                                                                                <Key frame="150" value="12.1315" />
                                                                                <Key frame="175" value="12.0436" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="75" value="-5.18802" />
                                                                                <Key frame="100" value="-5.10012" />
                                                                                <Key frame="150" value="-5.18802" />
                                                                                <Key frame="175" value="-5.18802" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="75" value="3.24959" />
                                                                                <Key frame="100" value="3.33748" />
                                                                                <Key frame="150" value="3.42537" />
                                                                                <Key frame="175" value="3.24959" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="75" value="-4.04062" />
                                                                                <Key frame="100" value="-4.04062" />
                                                                                <Key frame="150" value="-7.20472" />
                                                                                <Key frame="175" value="-7.29261" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="75" value="-6.3258" />
                                                                                <Key frame="100" value="-6.23791" />
                                                                                <Key frame="150" value="-2.01911" />
                                                                                <Key frame="175" value="-1.93121" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="75" value="10.5446" />
                                                                                <Key frame="100" value="10.6325" />
                                                                                <Key frame="150" value="11.1598" />
                                                                                <Key frame="175" value="11.1598" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="75" value="-4.2164" />
                                                                                <Key frame="100" value="-4.2164" />
                                                                                <Key frame="150" value="-4.30429" />
                                                                                <Key frame="175" value="-4.39218" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="75" value="3.60596" />
                                                                                <Key frame="100" value="3.69386" />
                                                                                <Key frame="150" value="3.60596" />
                                                                                <Key frame="175" value="3.43018" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="75" value="5.80326" />
                                                                                <Key frame="100" value="5.62747" />
                                                                                <Key frame="150" value="2.55126" />
                                                                                <Key frame="175" value="2.55126" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                    <Resource name="Standing" type="Stop on demand" timeout="2" />
                                                                    <Resource name="HeadYaw" type="Stop on demand" timeout="2" />
                                                                    <Resource name="HeadPitch" type="Stop on demand" timeout="2" />
                                                                    <Resource name="LShoulderPitch" type="Stop on demand" timeout="2" />
                                                                    <Resource name="LShoulderRoll" type="Stop on demand" timeout="2" />
                                                                    <Resource name="LElbowRoll" type="Stop on demand" timeout="2" />
                                                                    <Resource name="LElbowYaw" type="Stop on demand" timeout="2" />
                                                                    <Resource name="LWristYaw" type="Stop on demand" timeout="2" />
                                                                    <Resource name="LHand" type="Stop on demand" timeout="2" />
                                                                    <Resource name="RShoulderPitch" type="Stop on demand" timeout="2" />
                                                                    <Resource name="RShoulderRoll" type="Stop on demand" timeout="2" />
                                                                    <Resource name="RElbowRoll" type="Stop on demand" timeout="2" />
                                                                    <Resource name="RElbowYaw" type="Stop on demand" timeout="2" />
                                                                    <Resource name="RWristYaw" type="Stop on demand" timeout="2" />
                                                                    <Resource name="RHand" type="Stop on demand" timeout="2" />
                                                                    <Resource name="LHipYawPitch" type="Stop on demand" timeout="2" />
                                                                    <Resource name="LHipPitch" type="Stop on demand" timeout="2" />
                                                                    <Resource name="LHipRoll" type="Stop on demand" timeout="2" />
                                                                    <Resource name="LKneePitch" type="Stop on demand" timeout="2" />
                                                                    <Resource name="LAnklePitch" type="Stop on demand" timeout="2" />
                                                                    <Resource name="LAnkleRoll" type="Stop on demand" timeout="2" />
                                                                    <Resource name="RHipPitch" type="Stop on demand" timeout="2" />
                                                                    <Resource name="RHipRoll" type="Stop on demand" timeout="2" />
                                                                    <Resource name="RKneePitch" type="Stop on demand" timeout="2" />
                                                                    <Resource name="RAnklePitch" type="Stop on demand" timeout="2" />
                                                                    <Resource name="RAnkleRoll" type="Stop on demand" timeout="2" />
                                                                </Box>
                                                                <Box name="BreathLoop_1" id="9" tooltip="tags:&#x0A;breath; loop" x="96" y="43">
                                                                    <bitmap>media/images/box/movement/sit_ground.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.oldfps = ALFrameManager.getTimelineFps(self.getName())
        try:
            frameNumber.increaseParent( self.getName() );
        except BaseException, err:
            # if you don't want to use some encapsulated sub box, you will in that case. no worry...
            pass

    def onLoad(self):
        #puts code for box cleanup here
        pass

    def onUnload(self):
        #puts code for box cleanup here
        ""

    def onInput_onStart(self):
        newfps = (self.oldfps * self.getParameter("FPS (%)")) / 100
        ALFrameManager.setTimelineFps(self.getName(), newfps)
        pass

    def onInput_onStop(self):
        self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="FPS (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="20" max="200" tooltip="" id="5" />
                                                                    <Timeline enable="1" fps="25" start_frame="0" end_frame="235" size="300">
                                                                        <BehaviorLayer name="event">
                                                                            <BehaviorKeyframe name="keyframe227" index="227">
                                                                                <Diagram>
                                                                                    <Box name="Goto And Play (number)" id="5" tooltip="Jump to the frame number set in parameters and start playing the parent timeline." x="106" y="35">
                                                                                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onInput_onGo(self):
        self.gotoAndPlayParent(self.getParameter("Frame number"))]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                                        <Parameter name="Frame number" inherits_from_parent="0" content_type="1" value="1" default_value="1" min="0" max="10000" tooltip="Number of the frame you want to go to." id="3" />
                                                                                    </Box>
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                        <ActuatorList model="Nao">
                                                                            <ActuatorCurve name="value" actuator="HeadYaw" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="103" value="-1.23289" />
                                                                                <Key frame="128" value="-1.23289" />
                                                                                <Key frame="203" value="-1.23289" />
                                                                                <Key frame="228" value="-0.969213" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="HeadPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="103" value="0.261271" />
                                                                                <Key frame="128" value="0.261271" />
                                                                                <Key frame="203" value="4.4" />
                                                                                <Key frame="228" value="2.98591" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="101" value="53.5237" />
                                                                                <Key frame="126" value="53.5237" />
                                                                                <Key frame="201" value="52.9963" />
                                                                                <Key frame="226" value="53.1721" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="101" value="4.39218" />
                                                                                <Key frame="126" value="4.39218" />
                                                                                <Key frame="201" value="5.62267" />
                                                                                <Key frame="226" value="5.62267" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="101" value="-34.7196" />
                                                                                <Key frame="126" value="-34.7196" />
                                                                                <Key frame="201" value="-31.9071" />
                                                                                <Key frame="226" value="-32.5223" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="101" value="-60.6429" />
                                                                                <Key frame="126" value="-60.6429" />
                                                                                <Key frame="201" value="-62.8402" />
                                                                                <Key frame="226" value="-61.7855" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LWristYaw" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="101" value="14.8513" />
                                                                                <Key frame="126" value="14.7634" />
                                                                                <Key frame="201" value="3.60116" />
                                                                                <Key frame="226" value="5.2711" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHand" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="101" value="0.1248" />
                                                                                <Key frame="126" value="0.1248" />
                                                                                <Key frame="201" value="0.2" />
                                                                                <Key frame="226" value="0.2" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="99" value="56.6926" />
                                                                                <Key frame="124" value="56.6047" />
                                                                                <Key frame="199" value="56.4289" />
                                                                                <Key frame="224" value="56.7805" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RShoulderRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="99" value="-11.6041" />
                                                                                <Key frame="124" value="-11.6041" />
                                                                                <Key frame="199" value="-11.7799" />
                                                                                <Key frame="224" value="-11.8678" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowYaw" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="99" value="36.7363" />
                                                                                <Key frame="124" value="36.6484" />
                                                                                <Key frame="199" value="36.4727" />
                                                                                <Key frame="224" value="36.8242" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RElbowRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="99" value="68.6458" />
                                                                                <Key frame="124" value="68.7337" />
                                                                                <Key frame="199" value="67.4154" />
                                                                                <Key frame="224" value="67.4154" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RWristYaw" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="99" value="-18.196" />
                                                                                <Key frame="124" value="-18.196" />
                                                                                <Key frame="199" value="-7.29742" />
                                                                                <Key frame="224" value="-8.26423" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHand" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="99" value="0.224" />
                                                                                <Key frame="124" value="0.2244" />
                                                                                <Key frame="199" value="0.3" />
                                                                                <Key frame="224" value="0.3" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipYawPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="100" value="-41.7462" />
                                                                                <Key frame="125" value="-41.6583" />
                                                                                <Key frame="200" value="-41.3067" />
                                                                                <Key frame="225" value="-41.3067" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="100" value="16.7018" />
                                                                                <Key frame="125" value="16.7018" />
                                                                                <Key frame="200" value="18.1081" />
                                                                                <Key frame="225" value="18.0202" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LHipPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="100" value="-88.8561" />
                                                                                <Key frame="125" value="-89.2077" />
                                                                                <Key frame="200" value="-89.1198" />
                                                                                <Key frame="225" value="-89.1198" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LKneePitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="100" value="80.1548" />
                                                                                <Key frame="125" value="79.8912" />
                                                                                <Key frame="200" value="85.1647" />
                                                                                <Key frame="225" value="84.9889" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="100" value="50.0959" />
                                                                                <Key frame="125" value="50.0959" />
                                                                                <Key frame="200" value="46.9318" />
                                                                                <Key frame="225" value="46.9318" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="LAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="100" value="0.178188" />
                                                                                <Key frame="125" value="0.178188" />
                                                                                <Key frame="200" value="0.266079" />
                                                                                <Key frame="225" value="0.353971" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="100" value="-16.9607" />
                                                                                <Key frame="125" value="-16.8728" />
                                                                                <Key frame="200" value="-17.4002" />
                                                                                <Key frame="225" value="-17.2244" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RHipPitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="100" value="-90.7067" />
                                                                                <Key frame="125" value="-90.6188" />
                                                                                <Key frame="200" value="-90.6188" />
                                                                                <Key frame="225" value="-90.6188" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RKneePitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="100" value="83.8511" />
                                                                                <Key frame="125" value="83.6753" />
                                                                                <Key frame="200" value="88.8609" />
                                                                                <Key frame="225" value="88.773" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnklePitch" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="100" value="47.4639" />
                                                                                <Key frame="125" value="47.4639" />
                                                                                <Key frame="200" value="44.3877" />
                                                                                <Key frame="225" value="44.4756" />
                                                                            </ActuatorCurve>
                                                                            <ActuatorCurve name="value" actuator="RAnkleRoll" recordable="1" mute="0" unit="-1">
                                                                                <Key frame="100" value="0.617646" />
                                                                                <Key frame="125" value="0.617646" />
                                                                                <Key frame="200" value="-0.0854875" />
                                                                                <Key frame="225" value="-0.173379" />
                                                                            </ActuatorCurve>
                                                                        </ActuatorList>
                                                                    </Timeline>
                                                                    <Resource name="Sitting" type="Stop on demand" timeout="5" />
                                                                    <Resource name="Arms" type="Stop on demand" timeout="5" />
                                                                    <Resource name="Legs" type="Stop on demand" timeout="5" />
                                                                </Box>
                                                                <Link inputowner="9" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="3" />
                                            <Link inputowner="6" indexofinput="3" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="8" indexofinput="2" outputowner="4" indexofoutput="8" />
                                            <Link inputowner="3" indexofinput="3" outputowner="4" indexofoutput="8" />
                                            <Link inputowner="5" indexofinput="2" outputowner="3" indexofoutput="5" />
                                            <Link inputowner="3" indexofinput="2" outputowner="8" indexofoutput="6" />
                                            <Link inputowner="10" indexofinput="2" outputowner="5" indexofoutput="4" />
                                            <Link inputowner="3" indexofinput="4" outputowner="10" indexofoutput="4" />
                                            <Link inputowner="9" indexofinput="2" outputowner="8" indexofoutput="5" />
                                            <Link inputowner="9" indexofinput="2" outputowner="4" indexofoutput="7" />
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="1" indexofinput="3" outputowner="1" indexofoutput="5" />
                                            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                                            <Link inputowner="11" indexofinput="3" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="4" indexofinput="2" outputowner="11" indexofoutput="5" />
                                            <Link inputowner="9" indexofinput="2" outputowner="4" indexofoutput="3" />
                                            <Link inputowner="9" indexofinput="2" outputowner="4" indexofoutput="5" />
                                            <Link inputowner="9" indexofinput="2" outputowner="4" indexofoutput="6" />
                                            <Link inputowner="12" indexofinput="3" outputowner="4" indexofoutput="8" />
                                            <Link inputowner="12" indexofinput="2" outputowner="8" indexofoutput="6" />
                                            <Link inputowner="18" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="11" indexofinput="2" outputowner="6" indexofoutput="4" />
                                            <Link inputowner="15" indexofinput="2" outputowner="4" indexofoutput="4" />
                                            <Link inputowner="9" indexofinput="2" outputowner="15" indexofoutput="4" />
                                            <Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="5" />
                                            <Link inputowner="25" indexofinput="2" outputowner="18" indexofoutput="5" />
                                            <Link inputowner="8" indexofinput="3" outputowner="18" indexofoutput="5" />
                                            <Link inputowner="13" indexofinput="3" outputowner="8" indexofoutput="6" />
                                            <Link inputowner="13" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="Empty" index="99">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <BehaviorLayer name="Reflexes">
                                    <BehaviorKeyframe name="Reflexes" index="61">
                                        <Diagram scale="89.0899">
                                            <Box name="GotoInteractive" id="12" tooltip="Jump to the frame name set in parameters and stop the parent timeline.&#x0A;&#x0A;!!Warning!! This box does not stop the behavior! It is only the timeline which will&#x0A;stop playing, the keyframes and boxes will still be running." x="626" y="257">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onInput_onGo(self):
        self.gotoAndStopParent(self.getParameter("Frame name"))]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="Interactive Activities" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                            </Box>
                                            <Box name="TactileCodes" id="18" tooltip="Detection de sequence tactile sur la tête de Nao." x="213" y="466">
                                                <bitmap>media/images/box/icons_appu/fingerprint.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class SequenceHandler():
    def __init__(self, aSeq):
        self.aTactilSequence = aSeq
        self.reset()

    def reset(self):
        self.nTapTime = None
        self.nTapIndex = 2

    def update(self, aState, nTime):
        # In any case, if too much time elasped, sequence is invalidated
        if self.nTapTime != None and (nTime - self.nTapTime) > self.aTactilSequence[self.nTapIndex-1]:
            self.reset()
        # If current sensors state match current expected shape
        if aState == self.aTactilSequence[self.nTapIndex]:
            self.nTapTime = nTime
            self.nTapIndex += 2
        # If current sensor state does not match sequence at current index BUT match sequence at first index
        elif aState == self.aTactilSequence[1]:
            self.nTapTime = nTime
            self.nTapIndex = 4
        # If we've reach the end of the sequence, then output !!
        if self.nTapIndex > len(self.aTactilSequence):
            return self.aTactilSequence[0]
        else:
            return None

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.bIsRunning = False
        # Build a list of devices with full name
        self.aDeviceNames = ["%sTactilTouched" % name for name in ["Front", "Middle", "Rear"]]

        # Parameters
        parameters = [   ["CaressFtoR", "Caress front to rear", [1, 0, 0], 0.5, [1, 1, 0], 0.5, [0, 1, 0], 0.5, [0, 1, 1], 0.5, [0, 0, 1]],
                                ["CaressRtoF", "Caress rear to front", [0, 0, 1], 0.5, [0, 1, 1], 0.5, [0, 1, 0], 0.5, [1, 1, 0], 0.5, [1, 0, 0]],
                                ["SingleTap", "Single tap", [1, 1, 1], 1.5, [0, 0, 0]],
                                ["EnumerateFtoR", "Enumerate front to rear", [1, 0, 0], 1.0, [0, 1, 0], 1.0, [0, 0, 1]],
                                ["EnumerateRtoF", "Enumerate rear to front", [0, 0, 1], 1.0, [0, 1, 0], 1.0, [1, 0, 0]],
                                ["ZoomIn", "Zoom in", [1, 0, 1], 1.0, [0, 1, 0]],
                                ["ZoomOut", "Zoom out", [0, 1, 0], 1.0, [1, 0, 1]],
                                ["DoubleFront", "Double front", [1, 0, 0], 1.0, [0, 0, 0], 1.0, [1, 0, 0]],
                                ["DoubleMiddle", "Double middle", [0, 1, 0], 1.0, [0, 0, 0], 1.0, [0, 1, 0]],
                                ["DoubleRear", "Double rear", [0, 0, 1], 1.0, [0, 0, 0], 1.0, [0, 0, 1]],
                                ["DoubleTap", "Double tap", [1, 1, 1], 1.0, [0, 0, 0], 1.0, [1, 1, 1]],
                                ["SecretCode", "Secret code", [1, 0, 1], 1.0, [0, 0, 0], 1.0, [1, 0, 1]],
                                ["CalmDown", "Calm down", [1, 1, 1], 8.0, [0, 0, 0]]    ]
        # Create a sequence handler object for each enable sequence
        self.aSequenceHandler = []
        for seq in parameters:
            if self.getParameter(seq[1]):
                self.aSequenceHandler.append(SequenceHandler(seq))

    def onLoad(self):
        self.bIsRunning = False
        self.onInput_reset()

    def onUnload(self):
        self.onInput_onStop()

    def onSensorChange(self, pDataName, pValue, pMessage):
        "This is called whenever one of the three tactil sensors state change"
        aState = ALMemory.getListData( self.aDeviceNames )
        # This prevent to process several times the same sensor state
        if aState != self.aState:
            self.aState = aState
            nTime = time.time()
            #~ self.log(str(aState))
            for seq in self.aSequenceHandler:
                sOutput = seq.update(aState, nTime)
                if  sOutput != None:
                    self.Match(sOutput)
                    # Force all other sequence to be reset to prevent multiple match.
                    # But this will prevent sequences like "DoubleTap" to work since each "SingleTap" will reset "DoubleTap"
                    self.onInput_reset()
                    # Get the output function from the sequence name
                    try:
                        func = getattr(self, sOutput)
                        func()
                    # If no output function found, just forget it
                    except:
                        pass

    def onInput_onStart(self):
        if not self.bIsRunning:
            self.bIsRunning = True
            # Save initial sensor state
            self.aState = None#ALMemory.getListData( self.aDeviceNames )
            # Subscribe to each sensor device
            for device in self.aDeviceNames:
                ALMemory.subscribeToEvent( device, self.getName(), "onSensorChange" )

    def onInput_onStop(self):
        if self.bIsRunning:
            for device in self.aDeviceNames:
                ALMemory.unsubscribeToEvent( device, self.getName() )
            self.onInput_reset()
            self.bIsRunning = False

    def onInput_reset(self):
        for seq in self.aSequenceHandler:
            seq.reset()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="Match" type="3" type_size="1" nature="2" inner="0" tooltip="double tap" id="4" />
                                                <Output name="SingleTap" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                <Output name="DoubleFront" type="1" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                                                <Output name="DoubleMiddle" type="1" type_size="1" nature="2" inner="0" tooltip="" id="7" />
                                                <Output name="DoubleRear" type="1" type_size="1" nature="2" inner="0" tooltip="" id="8" />
                                                <Output name="EnumerateRtoF" type="1" type_size="1" nature="2" inner="0" tooltip="" id="9" />
                                                <Output name="EnumerateFtoR" type="1" type_size="1" nature="2" inner="0" tooltip="" id="10" />
                                                <Output name="CaressRtoF" type="1" type_size="1" nature="2" inner="0" tooltip="" id="11" />
                                                <Output name="CaressFtoR" type="1" type_size="1" nature="2" inner="0" tooltip="" id="12" />
                                                <Output name="DoubleTap" type="1" type_size="1" nature="2" inner="0" tooltip="" id="13" />
                                                <Output name="CalmDown" type="1" type_size="1" nature="2" inner="0" tooltip="" id="14" />
                                                <Output name="ZoomOut" type="1" type_size="1" nature="2" inner="0" tooltip="" id="15" />
                                                <Output name="ZoomIn" type="1" type_size="1" nature="2" inner="0" tooltip="" id="16" />
                                                <Output name="SecretCode" type="1" type_size="1" nature="2" inner="0" tooltip="" id="17" />
                                                <Parameter name="Caress front to rear" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="Caress front to rear" id="18" />
                                                <Parameter name="Caress rear to front" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="19" />
                                                <Parameter name="Single tap" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="20" />
                                                <Parameter name="Double front" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="21" />
                                                <Parameter name="Double middle" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="22" />
                                                <Parameter name="Double rear" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="23" />
                                                <Parameter name="Calm down" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="24" />
                                                <Parameter name="Enumerate front to rear" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="25" />
                                                <Parameter name="Enumerate rear to front" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="26" />
                                                <Parameter name="Zoom in" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="27" />
                                                <Parameter name="Zoom out" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="28" />
                                                <Parameter name="Double tap" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="" id="29" />
                                                <Parameter name="Secret code" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="" id="30" />
                                            </Box>
                                            <Box name="Popup" id="5" tooltip="Play a sound file. Select the file in parameters. The format of the file can be&#x0A;wav, mp3, or ogg." x="498" y="254">
                                                <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                <Parameter name="File name" inherits_from_parent="0" content_type="4" value="/sounds/popup.wav" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" />
                                                <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                                                <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                                                <Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                                                <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="Play Sound File" id="2" tooltip="Play the sound." x="584" y="70">
                                                                    <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                                                    <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                                                    <Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                                                    <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                                                </Box>
                                                                <Box name="Get Attached File" id="1" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="358" y="71">
                                                                    <bitmap>media/images/box/folder.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
    def onInput_onStart(self):
        self.onStopped(ALFrameManager.getBehaviorPath(self.behaviorId) + self.getParameter("File name"))]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                                    <Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                                                </Box>
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                                <Resource name="Audio player" type="Lock" timeout="0" />
                                            </Box>
                                            <Box name="FaceReflex" id="2" tooltip="Enter tooltip here" x="207" y="194">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Output name="isSomeone" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                <Output name="isNotSomeone" type="1" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="DeltaFaces" id="3" tooltip="Enter tooltip here" x="469" y="334">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.peoples = 0

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_faceIn(self):
        if self.peoples == 0:
            self.onSomeone()
        self.peoples = 1

    def onInput_faceNone(self):
        if self.peoples != 0:
            self.onNone()
        self.peoples = 0]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="faceIn" type="1" type_size="1" nature="1" inner="0" tooltip="" id="2" />
                                                                    <Input name="faceNone" type="1" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                                    <Output name="onSomeone" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                    <Output name="onNone" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                                </Box>
                                                                <Box name="Face Detection" id="2" tooltip="Detect people&apos;s face and return the number of detected faces.&#x0A;&#x0A;Note: Detect even faces that are not registered in NAO&apos;s faces database (that&#x0A;you can teach him with the Learn Face box)." x="144" y="331">
                                                                    <bitmap>media/images/box/interaction/face.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Input name="FaceDetected" type="0" type_size="1" nature="4" stm_value_name="FaceDetected" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="5" />
                                                                    <Output name="onFace" type="1" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                                                                    <Output name="onNoFace" type="1" type_size="1" nature="2" inner="0" tooltip="No face is detected." id="7" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Count Det. Faces" id="3" tooltip="Process face detection extractor data (FaceDetected) to count the number&#x0A;of detected faces and notify when there is no face detected.&#x0A;&#x0A;An output (either one or the other) is stimulated each time the number of&#x0A;detected faces change." x="310" y="92">
                                                                                        <bitmap>media/images/box/interaction/reco_face.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import thread

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.nFacesDetected = -1
        self.lock = thread.allocate_lock()

    def onUnload(self):
        #puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        a = self.lock.acquire_lock(0)

        if not a:
            return

        if len(p) > 0:
            f = self.matchingFaces(p[:-1])

            if f != self.nFacesDetected:
                self.nFacesDetected = f
                if f == 0:
                    self.onNoFace()
                else:
                    self.onFaceDetected(f)
        else:
            if self.nFacesDetected != 0:
                self.nFacesDetected = 0
                self.onNoFace()
        self.lock.release_lock()

    def print_array(self, array, decal):
        s = ""
        if type(array) == type([]):
            for j in range(len(array)):
                i = array[j]
                s += decal * "  " + "[" + str(j) + "]\n"
                s += self.print_array(i, decal + 1)
        else:
                s += decal * "  " + str(type(array)) + ":" + str(array) + "\n"
        return s

    def matchingFaces(self, faces):
        #self.log("\n" + self.print_array(faces, 0))
        LOG = self.log
        class RecoInfo(object):
            def __init__(self, array):
                self.faceid = array[0]
                self.score_reco = array[1]
                self.face_label = array[2]
                self.left_eye = array[3]
                self.right_eye = array[4]
                self.left_eyebrow = array[5]
                self.right_eyebrow = array[6]
                self.nose = array[7]
                self.mouth = array[8]

        class Face(object):
            def __init__(self, array):
                shapeinfo = array[0]
                extrainfo = array[1]

                #~ shapeinfo = [ 0, alpha, beta, sizeX, sizeY ]
                self.alpha = shapeinfo[1]
                self.beta = shapeinfo[2]
                self.sizex = shapeinfo[3]
                self.sizey = shapeinfo[4]
                #~ ExtraInfo = [ Reco_info_0, Reco_info_1, ..., Reco_info_M ]
                #self.reco_info = [RecoInfo(x) for x in extrainfo]

        class ComprehensiveFaces(object):
            def __init__(self, array):
                self.timestamp_second = array[0][0]
                self.timestamp_microsecond = array[0][1]
                self.faces = [Face(x) for x in array[1][:-1]]
                self.time_filtered = array[1][-1]

        cf = ComprehensiveFaces(faces)
        match = 0
        for f in cf.faces:
            if (f.sizex >= 0.19 and
               f.sizey >= 0.19 and
               abs(f.alpha * 100) < 10 and
               abs(f.beta * 100) < 10):
                match += 1

        return match

    def onInput_onStop(self):
        pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input. It must be the&#x0A;FaceDetected extractor data." id="2" />
                                                                                        <Output name="onFaceDetected" type="2" type_size="1" nature="1" inner="0" tooltip="Number of detected faces." id="3" />
                                                                                        <Output name="onNoFace" type="1" type_size="1" nature="1" inner="0" tooltip="No face is detected." id="4" />
                                                                                    </Box>
                                                                                    <Link inputowner="0" indexofinput="7" outputowner="3" indexofoutput="4" />
                                                                                    <Link inputowner="0" indexofinput="6" outputowner="3" indexofoutput="3" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="4" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="BlinkEyes" id="1" tooltip="Fait clignoter les deux yeux entre deux couleurs." x="634" y="390">
                                                                    <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.nDelay = self.getParameter("delay")
        self.nFading = self.getParameter("fading")
        self.hColor1 = 0x0000FF
        self.hColor2 = 0xFFFFFF
        self.bIsRunning = False

    def onLoad(self):
        self.bMustStop = False;
        self.bIsRunning = False

    def onUnload(self):
        self.onInput_onStop()

    def setLedsColors(self, color):
        for i in range(7):
            ALLeds.post.fadeRGB( "FaceLed%s%d" % ("Left", i) , color, self.nFading)
            ALLeds.post.fadeRGB( "FaceLed%s%d" % ("Right", i) , color, self.nFading)
        ALLeds.fadeRGB( "FaceLed%s%d" % ("Left", 7) , color, self.nFading)
        ALLeds.fadeRGB( "FaceLed%s%d" % ("Right", 7) , color, self.nFading)

    def onInput_onStart(self):
        if self.bIsRunning:
            return
        self.bIsRunning = True

        delay = self.getParameter("delay")
        #~ while not self.bMustStop:
        # Color up blinking led in one color
        self.setLedsColors(self.hColor1)
        # Then wait a little
        time.sleep(delay)
        # And finally, color up leds with white
        self.setLedsColors(self.hColor2)
        # Then wait a little again
        time.sleep(delay)

        self.bIsRunning = False

    def onInput_onStop(self):
        self.setLedsColors(self.hColor2)]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Parameter name="delay" inherits_from_parent="0" content_type="2" value="0.2" default_value="0.2" min="0" max="5" tooltip="" id="5" />
                                                                    <Parameter name="fading" inherits_from_parent="0" content_type="2" value="0.2" default_value="0.2" min="0" max="5" tooltip="" id="6" />
                                                                </Box>
                                                                <Box name="Wait" id="4" tooltip="Wait a moment before sending a signal on the output. The wait can be stopped any&#x0A;time. You may restart it any time, and it will start again." x="650" y="241">
                                                                    <bitmap>media/images/box/wait.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def triggerOutput( self, rPeriod = 1 ):
        self.onUnload() # to clean everything
        self.timerOutput()

    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] )
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Timeout (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()

    def onInput_onCancel(self):
        if self.tb:
            self.tb.cancel()
        self.tb = False
        self.onInput_onStop()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                                                                    <Input name="onCancel" type="1" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                                    <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is ellapsed, or if the box is stopped." id="5" />
                                                                    <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="2" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="6" />
                                                                    <Resource name="Head" type="Lock" timeout="4" />
                                                                </Box>
                                                                <Box name="Wait" id="5" tooltip="Wait a moment before sending a signal on the output. The wait can be stopped any&#x0A;time. You may restart it any time, and it will start again." x="318" y="395">
                                                                    <bitmap>media/images/box/wait.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if(self.tb):
            self.tb.cancel()
            self.tb = False

    def triggerOutput( self, rPeriod = 1 ):
        self.tb.cancel()
        self.tb = False
        self.timerOutput()

    def startTimer(self, rPeriod = 1):
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] )
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Timeout (s)") )

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                                                                    <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is ellapsed, or if the box is stopped." id="4" />
                                                                    <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="0.4" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                                                                    <Resource name="Head" type="Lock" timeout="4" />
                                                                </Box>
                                                                <Box name="Comment" id="6" tooltip="To comment your behavior. Enter the text here and move the box where you like&#x0A;to add the comment.&#x0A;&#x0A;Note: This box is not functional and has no effect on the behavior." plugin="textedit_plugin" x="251" y="506">
                                                                    <bitmap>media/images/box/box-script.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self):
		self.onStopped("Stabilize face reco")]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <text>Stabilize face reco</text>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                </Box>
                                                                <Box name="Comment" id="7" tooltip="To comment your behavior. Enter the text here and move the box where you like&#x0A;to add the comment.&#x0A;&#x0A;Note: This box is not functional and has no effect on the behavior." plugin="textedit_plugin" x="581" y="119">
                                                                    <bitmap>media/images/box/box-script.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self):
		self.onStopped("x sec of visage detection before sending the goto interactive")]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <text>x sec of visage detection before sending the goto interactive</text>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="0" indexofinput="6" outputowner="3" indexofoutput="5" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="6" />
                                                                <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                <Link inputowner="0" indexofinput="5" outputowner="4" indexofoutput="5" />
                                                                <Link inputowner="4" indexofinput="3" outputowner="3" indexofoutput="5" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="7" />
                                                                <Link inputowner="5" indexofinput="3" outputowner="2" indexofoutput="6" />
                                                                <Link inputowner="3" indexofinput="3" outputowner="5" indexofoutput="4" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Box name="ContactAndUpdateReaction" id="1" tooltip="Enter tooltip here" x="422" y="15">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Input name="HandLeftBackTouched" type="0" type_size="1" nature="4" stm_value_name="HandLeftBackTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                                                <Input name="HandLeftLeftTouched" type="0" type_size="1" nature="4" stm_value_name="HandLeftLeftTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" />
                                                <Input name="HandLeftRightTouched" type="0" type_size="1" nature="4" stm_value_name="HandLeftRightTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="6" />
                                                <Input name="LeftBumperPressed" type="0" type_size="1" nature="4" stm_value_name="LeftBumperPressed" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="7" />
                                                <Input name="HandRightBackTouched" type="0" type_size="1" nature="4" stm_value_name="HandRightBackTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="8" />
                                                <Input name="HandRightLeftTouched" type="0" type_size="1" nature="4" stm_value_name="HandRightLeftTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="9" />
                                                <Input name="HandRightRightTouched" type="0" type_size="1" nature="4" stm_value_name="HandRightRightTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="10" />
                                                <Input name="RightBumperPressed" type="0" type_size="1" nature="4" stm_value_name="RightBumperPressed" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="11" />
                                                <Input name="onExcitationMore" type="1" type_size="1" nature="1" inner="0" tooltip="" id="12" />
                                                <Input name="onExcitationLess" type="1" type_size="1" nature="1" inner="0" tooltip="" id="13" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="14" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="reflexReaction" id="2" tooltip="turn head to look at the left or right" x="228" y="26">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import threading
import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.memory = ALProxy("ALMemory")
        self.excitation = self.memory.getData("Life/Mood/Excitation")
        self.running = False

    def onUnload(self):
        self.running = False

    def onInput_onLeft(self,p):
        if(p != 1):
            return
        self.gotoAndPlay("onLeft")
        self.stimulation()

    def onInput_onRight(self,p):
        if(p != 1):
            return
        self.gotoAndPlay("onRight")
        self.stimulation()

    def onInput_onHead(self,p):
        if(p != 1):
            return
        self.gotoAndPlay("onHead")
        self.stimulation()

    def onInput_onStop(self):
        self.onUnload()
        self.onStopped()

    def onInput_onStart(self):
        if self.running:
            return
        self.running = True
        delta = (1.0 - self.getParameter("excitation ramp down (%)")/100.0)
        sleep_time = self.getParameter("update time (s)")
        while (self.running):
            self.excitation = self.memory.getData("Life/Mood/Excitation")
            self.excitation = self.excitation * delta
            self.memory.insertData("Life/Mood/Excitation", self.excitation)
            time.sleep(sleep_time)
        #self.log("Unloading reflexReaction")

    def onInput_inputCalm(self, p):
        self.excitation = ALProxy("ALMemory").getData("Life/Mood/Excitation")
        self.excitation /= 1 + (4 * p)
        ALProxy("ALMemory").insertData("Life/Mood/Excitation", self.excitation)
        self.excitationValue(self.excitation)

    def onInput_inputExcitationMore(self):
        self.excitation = ALProxy("ALMemory").getData("Life/Mood/Excitation")
        self.excitation += (1.0 - self.excitation) * self.getParameter("excitation ramp up (%)")/100.0
        ALProxy("ALMemory").insertData("Life/Mood/Excitation", self.excitation)
        self.excitationValue(self.excitation)
        self.onReflex()

    def onInput_inputExcitationLess(self):
        pass

    def stimulation(self):
        self.excitation = ALProxy("ALMemory").getData("Life/Mood/Excitation")
        self.excitation += (1.0 - self.excitation) * self.getParameter("excitation ramp up (%)")/100.0
        ALProxy("ALMemory").insertData("Life/Mood/Excitation", self.excitation)
        self.excitationValue(self.excitation)
        self.onReflex()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="update excitation value" id="2" />
                                                                    <Input name="inputExcitationMore" type="1" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                                                                    <Input name="inputExcitationLess" type="1" type_size="1" nature="1" inner="0" tooltip="" id="4" />
                                                                    <Input name="inputCalm" type="2" type_size="1" nature="1" inner="0" tooltip="" id="5" />
                                                                    <Input name="onHead" type="2" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                                                                    <Input name="onLeft" type="2" type_size="1" nature="2" inner="0" tooltip="" id="7" />
                                                                    <Input name="onRight" type="2" type_size="1" nature="2" inner="0" tooltip="" id="8" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="" id="9" />
                                                                    <Output name="excitationValue" type="2" type_size="1" nature="2" inner="0" tooltip="" id="10" />
                                                                    <Output name="onReflex" type="1" type_size="1" nature="2" inner="0" tooltip="" id="11" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="" id="12" />
                                                                    <Parameter name="Period (s)" inherits_from_parent="0" content_type="2" value="0.5" default_value="0.5" min="0.05" max="1" tooltip="" id="13" />
                                                                    <Parameter name="excitation ramp down (%)" inherits_from_parent="0" content_type="2" value="0.4" default_value="0.2" min="0" max="10" tooltip="excitation ramp (%)" id="14" />
                                                                    <Parameter name="excitation ramp up (%)" inherits_from_parent="0" content_type="2" value="30" default_value="50" min="0" max="100" tooltip="" id="15" />
                                                                    <Parameter name="update time (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="10" tooltip="" id="16" />
                                                                    <Timeline enable="1" fps="10" start_frame="0" end_frame="97" size="300">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="nothing" index="1">
                                                                                <Diagram />
                                                                            </BehaviorKeyframe>
                                                                            <BehaviorKeyframe name="onLeft" index="8">
                                                                                <Diagram>
                                                                                    <Box name="Blink" id="4" tooltip="tags:&#x0A;LED" x="67" y="11">
                                                                                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );

        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );

        self.onStopped()


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                    </Box>
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                            <BehaviorKeyframe name="jump_copy" index="15">
                                                                                <Diagram>
                                                                                    <Box name="Goto And Stop (name)" id="3" tooltip="Jump to the frame name set in parameters and stop the parent timeline.&#x0A;&#x0A;!!Warning!! This box does not stop the behavior! It is only the timeline which will&#x0A;stop playing, the keyframes and boxes will still be running." x="183" y="36">
                                                                                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onInput_onGo(self):
        try:
            self.gotoAndStopParent(self.getParameter("Frame name"))
        except:
            pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                                        <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="nothing" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                                                                    </Box>
                                                                                    <Box name="Blink" id="4" tooltip="tags:&#x0A;LED" x="66" y="65">
                                                                                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );

        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );

        self.onStopped()


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                    </Box>
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                            <BehaviorKeyframe name="onRight" index="24">
                                                                                <Diagram>
                                                                                    <Box name="Blink" id="4" tooltip="tags:&#x0A;LED" x="79" y="13">
                                                                                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );

        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );

        self.onStopped()


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                    </Box>
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                            <BehaviorKeyframe name="jump" index="32">
                                                                                <Diagram>
                                                                                    <Box name="Goto And Stop (name)" id="3" tooltip="Jump to the frame name set in parameters and stop the parent timeline.&#x0A;&#x0A;!!Warning!! This box does not stop the behavior! It is only the timeline which will&#x0A;stop playing, the keyframes and boxes will still be running." x="121" y="6">
                                                                                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onInput_onGo(self):
        try:
            self.gotoAndStopParent(self.getParameter("Frame name"))
        except:
            pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                                        <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="nothing" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                                                                    </Box>
                                                                                    <Box name="Blink" id="4" tooltip="tags:&#x0A;LED" x="111" y="119">
                                                                                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );

        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );

        self.onStopped()


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                    </Box>
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                            <BehaviorKeyframe name="onHead" index="39">
                                                                                <Diagram>
                                                                                    <Box name="Goto And Stop (name)" id="3" tooltip="Jump to the frame name set in parameters and stop the parent timeline.&#x0A;&#x0A;!!Warning!! This box does not stop the behavior! It is only the timeline which will&#x0A;stop playing, the keyframes and boxes will still be running." x="445" y="15">
                                                                                        <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onInput_onGo(self):
        try:
            self.gotoAndStopParent(self.getParameter("Frame name"))
        except:
            pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                                        <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="nothing" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                                                                    </Box>
                                                                                    <Box name="Blink" id="4" tooltip="tags:&#x0A;LED" x="218" y="27">
                                                                                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );

        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );

        self.onStopped()


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                    </Box>
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="1" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="4" indexofoutput="4" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="LookAtBody" id="8" tooltip="Enter tooltip here" x="443" y="225">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import math
import thread

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.memory = ALProxy("ALMemory")
        self.motion = ALProxy("ALMotion")
        self.lock = thread.allocate_lock()

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.tick(self.getParameter("motionObject"))
        self.onStopped()

    def tick(self, name):
        if not self.lock.acquire(0):
            return

        p = self.motion.getPosition(name, 0, True)
        x, y, z = p[0:3]

        yaw = math.atan2(y, x)
        pitch = 1 - math.atan2(z, x)

        self.motion.angleInterpolation(["HeadYaw", "HeadPitch"], [yaw, pitch], [0.6, 0.6], True)
        self.lock.release()
        self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                    <Parameter name="motionObject" inherits_from_parent="0" content_type="3" value="LHand" default_value="" custom_choice="0" tooltip="" id="4" />
                                                                </Box>
                                                                <Box name="LookAtBody" id="1" tooltip="Enter tooltip here" x="579" y="223">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import math
import thread

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.memory = ALProxy("ALMemory")
        self.motion = ALProxy("ALMotion")
        self.lock = thread.allocate_lock()

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if p > 0:
            self.tick(self.getParameter("motionObject"))
        self.onStopped()

    def tick(self, name):
        if not self.lock.acquire(0):
            return

        p = self.motion.getPosition(name, 0, True)
        x, y, z = p[0:3]
        z += 0.2
        x += 0.1

        yaw = math.atan2(y, x)
        pitch = 1 - math.atan2(z, x)

        self.motion.angleInterpolation(["HeadYaw", "HeadPitch"], [yaw, pitch], [0.6, 0.6], True)
        self.lock.release()
        self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                    <Parameter name="motionObject" inherits_from_parent="0" content_type="3" value="LAnklePitch" default_value="" custom_choice="0" tooltip="" id="4" />
                                                                    <Resource name="Head" type="Lock" timeout="1" />
                                                                </Box>
                                                                <Box name="LookAtBody" id="3" tooltip="Enter tooltip here" x="463" y="343">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import math
import thread

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.memory = ALProxy("ALMemory")
        self.motion = ALProxy("ALMotion")
        self.lock = thread.allocate_lock()

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.tick(self.getParameter("motionObject"))
        self.onStopped()

    def tick(self, name):
        if not self.lock.acquire(0):
            return

        p = self.motion.getPosition(name, 0, True)
        x, y, z = p[0:3]

        yaw = math.atan2(y, x)
        pitch = 1 - math.atan2(z, x)

        self.motion.angleInterpolation(["HeadYaw", "HeadPitch"], [yaw, pitch], [0.6, 0.6], True)
        self.lock.release()
        self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                    <Parameter name="motionObject" inherits_from_parent="0" content_type="3" value="RHand" default_value="" custom_choice="0" tooltip="" id="4" />
                                                                </Box>
                                                                <Box name="LookAtBody" id="4" tooltip="Enter tooltip here" x="589" y="343">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import math
import thread

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.memory = ALProxy("ALMemory")
        self.motion = ALProxy("ALMotion")
        self.lock = thread.allocate_lock()

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if p > 0:
            self.tick(self.getParameter("motionObject"))
        self.onStopped()

    def tick(self, name):
        if not self.lock.acquire(0):
            return

        p = self.motion.getPosition(name, 0, True)
        x, y, z = p[0:3]
        z += 0.2
        x += 0.1

        yaw = math.atan2(y, x)
        pitch = 1 - math.atan2(z, x)

        self.motion.angleInterpolation(["HeadYaw", "HeadPitch"], [yaw, pitch], [0.6, 0.6], True)
        self.lock.release()
        self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                    <Parameter name="motionObject" inherits_from_parent="0" content_type="3" value="RAnklePitch" default_value="" custom_choice="0" tooltip="" id="4" />
                                                                </Box>
                                                                <Box name="Blink" id="5" tooltip="tags:&#x0A;LED" x="317" y="448">
                                                                    <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if p == 0:
            return
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );

        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );

        self.onStopped()


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                </Box>
                                                                <Box name="HandTouched" id="6" tooltip="Enter tooltip here" x="314" y="227">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.sum = 0
        self.activated = False

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):

        if p == 0:
            p = -1

        self.sum = max(0, min(3, self.sum + p))

        if self.sum == 0 and self.activated:
            self.activated = False
            self.onUntouched()
        elif self.sum > 0 and not self.activated:
            self.activated = True
            self.onTouched()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="onTouched" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                    <Output name="onUntouched" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                </Box>
                                                                <Box name="HandTouched" id="7" tooltip="Enter tooltip here" x="313" y="337">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.sum = 0
        self.activated = False

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):

        if p == 0:
            p = -1

        self.sum = max(0, min(3, self.sum + p))

        if self.sum == 0 and self.activated:
            self.activated = False
            self.onUntouched()
        elif self.sum > 0 and not self.activated:
            self.activated = True
            self.onTouched()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Output name="onTouched" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                                                    <Output name="onUntouched" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="2" indexofinput="3" outputowner="0" indexofoutput="12" />
                                                                <Link inputowner="2" indexofinput="4" outputowner="0" indexofoutput="13" />
                                                                <Link inputowner="2" indexofinput="7" outputowner="0" indexofoutput="7" />
                                                                <Link inputowner="2" indexofinput="8" outputowner="0" indexofoutput="11" />
                                                                <Link inputowner="2" indexofinput="7" outputowner="0" indexofoutput="6" />
                                                                <Link inputowner="2" indexofinput="7" outputowner="0" indexofoutput="5" />
                                                                <Link inputowner="2" indexofinput="7" outputowner="0" indexofoutput="4" />
                                                                <Link inputowner="2" indexofinput="8" outputowner="0" indexofoutput="8" />
                                                                <Link inputowner="2" indexofinput="8" outputowner="0" indexofoutput="9" />
                                                                <Link inputowner="2" indexofinput="8" outputowner="0" indexofoutput="10" />
                                                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="7" />
                                                                <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="11" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="4" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="5" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="7" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="6" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="8" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="9" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="10" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="11" />
                                                                <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="4" />
                                                                <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="5" />
                                                                <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="6" />
                                                                <Link inputowner="8" indexofinput="2" outputowner="6" indexofoutput="3" />
                                                                <Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="10" />
                                                                <Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="9" />
                                                                <Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="8" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="7" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Box name="Logging" id="3" tooltip="Enter tooltip here" x="348" y="361">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.log(self.getParameter("message"))
        self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Parameter name="message" inherits_from_parent="0" content_type="3" value="Got Double Head Tap Reflex" default_value="" custom_choice="0" tooltip="" id="5" />
                                            </Box>
                                            <Box name="Logging" id="4" tooltip="Enter tooltip here" x="346" y="258">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        pass

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        self.log(self.getParameter("message"))
        self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommended to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Parameter name="message" inherits_from_parent="0" content_type="3" value="Got Face Reflex" default_value="" custom_choice="0" tooltip="" id="5" />
                                            </Box>
                                            <Box name="Sound Reflex" id="6" tooltip="Every time a sound is detected, this box makes NAO look toward the sound source." x="262" y="72">
                                                <bitmap>media/images/box/interaction/target_sound.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="4" />
                                                <Output name="tick" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                <Parameter name="Threshold to be sure of the location (%)" inherits_from_parent="0" content_type="1" value="50" default_value="50" min="0" max="100" tooltip="If a sound is localized with a threshold higher than this value, then the sound&#x0A;location will be sent on the output. Else, NAO will consider that the sound is not&#x0A;localized at the right location and he will not take it into account." id="6" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="HeadToTarget" id="3" tooltip="Enter tooltip here" x="513" y="176">
                                                                    <bitmap>media/images/box/movement/move_head.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import random


class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)


    def headBack(self):
#        self.log("Head Back")
        self.isMoving = True
        angles = [0.0,0.0]
        self.motion.setAngles("Head", angles, 0.2*self.getParameter("speed"))
        self.isMoving = False
        pass

    def onLoad(self):
        self.motion = ALProxy("ALMotion")
        self.isMoving = False
        self.t = None

    def onUnload(self):
        self.onInput_onStop()

    def onInput_targetPosition(self, angles):
        if self.isMoving == False:
            self.isMoving = True
            current_angles = self.motion.getAngles("Head", True)
            clamp_angle = min(1.25, max(-1.25, current_angles[0] + angles[0]))
            angles[0] = clamp_angle - current_angles[0]

            if (self.t != None):
#                self.log("Canceling timer")
                self.t.cancel()
            duration = random.randint(4, 6)
            self.t = threading.Timer(duration, self.headBack)
#            self.log("Starting timer" + str(duration))
            self.t.start()


            self.motion.changeAngles("Head", angles, self.getParameter("speed"))
            self.isMoving = False

        self.onStopped()

    def onInput_onStop(self):
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="targetPosition" type="2" type_size="2" nature="2" inner="0" tooltip="Location of the target including two angles (in radians):&#x0A;- azimutal (horizontal) angle&#x0A;- elevation (vertical) angle&#x0A;Both related to robot&apos;s head position." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Parameter name="speed" inherits_from_parent="0" content_type="2" value="0.2" default_value="0.2" min="0" max="1" tooltip="" id="5" />
                                                                </Box>
                                                                <Box name="Sound Loc." id="2" tooltip="Every time a sound is detected, this box sends on its outputs:&#x0A;- the location of the sound source in relation to robot&apos;s head position.&#x0A;- robot&apos;s head position in relation to the rest of the body in NAO&apos;s space." x="157" y="66">
                                                                    <bitmap>media/images/box/interaction/target_sound.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True
        proxy = ALProxy("ALAudioSourceLocalization")
        proxy.setParameter( "Sensibility", self.getParameter("Volume sensitivity (%)")/100. )
        proxy.setParameter( "EnergyComputation",1 )

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Input name="ALAudioSourceLocalization/SoundLocated" type="0" type_size="1" nature="4" stm_value_name="ALAudioSourceLocalization/SoundLocated" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                                                                    <Input name="ALTextToSpeech/TextStarted" type="0" type_size="1" nature="4" stm_value_name="ALTextToSpeech/TextStarted" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="6" />
                                                                    <Output name="sourceLocation" type="2" type_size="2" nature="2" inner="0" tooltip="Location of the detected sound source including two angles (in radians):&#x0A;- azimutal (horizontal) angle&#x0A;- elevation (vertical) angle&#x0A;Both related to robot&apos;s head position." id="7" />
                                                                    <Output name="headPosition" type="2" type_size="6" nature="2" inner="0" tooltip="Head position when the sound is detected. It contains six values:&#x0A;[x,y,z,wx,wy,wz]. The first three represents the translation of the head&#x0A;related to the robot&apos;s space. The last three represents the orientation of the head.&#x0A;&#x0A;Note: If module ALMotion is not loaded, this output returns -1.&#x0A; " id="8" />
                                                                    <Output name="onEnergy" type="2" type_size="1" nature="2" inner="0" tooltip="" id="9" />
                                                                    <Parameter name="Threshold to be sure of the location (%)" inherits_from_parent="1" content_type="1" value="75" default_value="50" min="0" max="100" tooltip="If a sound is localized with a threshold higher than this value, then the sound&#x0A;location will be sent on the output. Else, NAO will consider that the sound is not&#x0A;localized at the right location and he will not take it into account." id="10" />
                                                                    <Parameter name="Volume sensitivity (%)" inherits_from_parent="0" content_type="1" value="90" default_value="90" min="0" max="100" tooltip="Sensitivity to the volume of the sound heard. Higher this parameter is, less the&#x0A;sound have to be loud to be detected." id="11" />
                                                                    <Parameter name="energyThreshold" inherits_from_parent="0" content_type="2" value="10000" default_value="10000" min="0" max="20000" tooltip="" id="12" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="ProcessSoundLoc" id="1" tooltip="Process the sound localization extractor to filter and give the most interesting data." x="147" y="164">
                                                                                        <bitmap>media/images/box/interaction/target_sound.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.inhib = False

    def onUnload(self):
        pass

    def onInput_onInhibition(self, p):
        if p == 1 :
            self.inhib = True
        else :
            self.inhib = False

    def onInput_onStart(self, p):
        if self.inhib :
            return


        if p[1][2] >= self.getParameter("Threshold to be sure of the location (%)")/100.:
            self.onLocation( [ p[1][0],p[1][1] ] )
            self.onHeadPosition( [ p[2][0] , p[2][1], p[2][2], p[2][3], p[2][4], p[2][5] ] )
            if p[1][3] >= self.getParameter("energyThreshold"):
                self.energy( p[1][3] )]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onInhibition" type="2" type_size="1" nature="1" inner="0" tooltip="1 or 0" id="3" />
                                                                                        <Output name="onLocation" type="2" type_size="2" nature="2" inner="0" tooltip="Location of the detected sound source including two angles (in radians):&#x0A;- azimutal (horizontal) angle&#x0A;- elevation (vertical) angle&#x0A;Both related to robot&apos;s head position." id="4" />
                                                                                        <Output name="onHeadPosition" type="2" type_size="6" nature="2" inner="0" tooltip="Head position when the sound is detected. It contains six values:&#x0A;[x,y,z,wx,wy,wz]. The first three represents the translation of the head&#x0A;related to the robot&apos;s space. The last three represents the orientation of the head.&#x0A;&#x0A;Note: If module ALMotion is not loaded, this output returns -1." id="5" />
                                                                                        <Output name="energy" type="2" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="4" />
                                                                                    <Link inputowner="0" indexofinput="8" outputowner="1" indexofoutput="5" />
                                                                                    <Link inputowner="0" indexofinput="7" outputowner="1" indexofoutput="4" />
                                                                                    <Link inputowner="0" indexofinput="9" outputowner="1" indexofoutput="6" />
                                                                                    <Link inputowner="1" indexofinput="3" outputowner="0" indexofoutput="5" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Blink" id="5" tooltip="tags:&#x0A;LED" x="491" y="28">
                                                                    <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        ALLeds.post.fadeRGB( "FaceLed0", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed1", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed2", 0xffffff, rDuration );
        ALLeds.post.fadeRGB( "FaceLed3", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed4", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed5", 0x000000, rDuration );
        ALLeds.post.fadeRGB( "FaceLed6", 0xffffff, rDuration );
        ALLeds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );

        rDuration = 0.05;
        ALLeds.fadeRGB( "FaceLeds", 0xffffff, rDuration );

        self.onStopped()


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                </Box>
                                                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="7" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="2" indexofoutput="7" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Link inputowner="12" indexofinput="2" outputowner="5" indexofoutput="4" />
                                            <Link inputowner="18" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="5" />
                                            <Link inputowner="5" indexofinput="2" outputowner="4" indexofoutput="4" />
                                            <Link inputowner="3" indexofinput="2" outputowner="18" indexofoutput="6" />
                                            <Link inputowner="5" indexofinput="2" outputowner="3" indexofoutput="4" />
                                            <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="Empty" index="79">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <BehaviorLayer name="Reptilian Reflexes">
                                    <BehaviorKeyframe name="Reptilian Reflexes" index="7">
                                        <Diagram scale="89.0899">
                                            <Box name="Chest Button" id="2" tooltip="Enter tooltip here" x="100" y="19">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="GotoSafety" id="8" tooltip="Jump to the frame name set in parameters and stop the parent timeline.&#x0A;&#x0A;!!Warning!! This box does not stop the behavior! It is only the timeline which will&#x0A;stop playing, the keyframes and boxes will still be running." x="621" y="54">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onInput_onGo(self):
        self.gotoAndStopParent(self.getParameter("Frame name"))]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onGo" type="1" type_size="1" nature="1" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="Frame name" inherits_from_parent="0" content_type="3" value="Safety" default_value="" custom_choice="0" tooltip="Name of the frame you want to go to." id="3" />
                                                                </Box>
                                                                <Box name="ChestButton" id="9" tooltip="This box can detect simple, double and triple click on chest button." x="87" y="49">
                                                                    <bitmap>media/images/box/icons_appu/chestbutton.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        sentinel = ALProxy("ALSentinel")
#        sentinel.enableDefaultActionSimpleClick(True)
        sentinel.enableDefaultActionDoubleClick(True)

    def onInput_onStart(self):
        sentinel = ALProxy("ALSentinel")
#        sentinel.enableDefaultActionSimpleClick(False)
        sentinel.enableDefaultActionDoubleClick(False)

    def onInput_onStop(self):
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Input name="ChestButtonPressed" type="0" type_size="1" nature="4" stm_value_name="ChestButtonPressed" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                                                                    <Output name="onStopped" type="0" type_size="1" nature="2" inner="0" tooltip="This output can be:&#x0A; 1: for simple click&#x0A; 2: for double click&#x0A; 3: for triple click" id="5" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Filter" id="1" tooltip="Detects simple, double and triple click." x="215" y="64">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.timer = None

    def onLoad(self):
        self.nSafePeriod = self.getParameter("Safe period")
        self.nClickPeriod = self.getParameter("Click period")
        self.reset()

    def onUnload(self):
        self.onInput_onStop()

    def reset(self):
        self.nIndex = 0
        if self.timer != None:
            self.timer.cancel()
        self.timer = None

    def triggerOutput(self, clickCount):
        self.onStopped(clickCount)
        self.reset()

    def onPress(self):
        # If we had a press and the timer didn't timeout, then reset it
        if self.timer != None:
            self.timer.cancel()
            self.timer = None

        # If this is the first press
        if self.nIndex == 0 or self.nIndex > 2:
            self.nIndex = 0
        # Save the press time
        self.nTimestamp = time.time()

    def onRelease(self):
        # Calculate the elapsed time between press and release actions
        elapsed = time.time() - self.nTimestamp
        # If elapsed time is short enough, trigger the timer
        if elapsed < self.nClickPeriod:
            self.nIndex += 1
            self.timer = threading.Timer( self.nSafePeriod, self.triggerOutput, [self.nIndex] )
            self.timer.start()

    def onInput_onStart(self, p):
        if p == 1:
            self.onPress()
        else:
            self.onRelease()

    def onInput_onStop(self):
        self.reset()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                                        <Output name="onStopped" type="0" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                                        <Parameter name="Safe period" inherits_from_parent="0" content_type="2" value="1" default_value="0.5" min="0" max="3" tooltip="Time to wait after a press/release sequence to check if another press action is done." id="5" />
                                                                                        <Parameter name="Click period" inherits_from_parent="0" content_type="2" value="2" default_value="1" min="0" max="3" tooltip="" id="6" />
                                                                                    </Box>
                                                                                    <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="4" />
                                                                                    <Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="4" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                </Box>
                                                                <Box name="Switch Case" id="11" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="234" y="47">
                                                                    <bitmap>media/images/box/interaction/choice.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(1)):
			self.output_1(p)
		elif(p == self.typeConversion(2)):
			self.output_2(p)
		elif(p == self.typeConversion(3)):
			self.output_3(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <keywords>
                                                                            <keyword>1</keyword>
                                                                            <keyword>2</keyword>
                                                                            <keyword>3</keyword>
                                                                            <keyword></keyword>
                                                                        </keywords>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" />
                                                                    <Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                                                    <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                                                    <Output name="output_2" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="5" />
                                                                    <Output name="output_3" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="6" />
                                                                </Box>
                                                                <Box name="Set Stiffness" id="3" tooltip="Stiffen the motors selected in parameters." x="474" y="55">
                                                                    <bitmap>media/images/box/movement/stiffness.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def setStiffness(self, stiffness):
        self.bIsRunning = True
        duration = self.getParameter("Duration (s)")
        if(self.getParameter("Head")):
            ALMotion.post.stiffnessInterpolation("Head", stiffness, duration)
        if(self.getParameter("Left arm")):
            ALMotion.post.stiffnessInterpolation("LArm", stiffness, duration)
        if(self.getParameter("Right arm")):
            ALMotion.post.stiffnessInterpolation("RArm", stiffness, duration)
        if(self.getParameter("Left leg")):
            ALMotion.post.stiffnessInterpolation("LLeg", stiffness, duration)
        if(self.getParameter("Right leg")):
            ALMotion.post.stiffnessInterpolation("RLeg", stiffness, duration)
        time.sleep(duration)
        self.bIsRunning = False

    def onInput_onSet(self):
        if( self.bIsRunning ):
            return
        self.setStiffness(self.getParameter("Motors stiffness (%)")/100.)
        self.onReady() #~ activate output of the box]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="When this input is stimulated, the stiffness of the selected motors is set to&#x0A;the stiffness parameter value." id="2" />
                                                                    <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when stiffness has been set." id="3" />
                                                                    <Parameter name="Head" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the head stiffness?" id="4" />
                                                                    <Parameter name="Left arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left arm stiffness?" id="5" />
                                                                    <Parameter name="Right arm" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right arm stiffness?" id="6" />
                                                                    <Parameter name="Left leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the left leg stiffness?" id="7" />
                                                                    <Parameter name="Right leg" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Do we want to modify the right leg stiffness?" id="8" />
                                                                    <Parameter name="Motors stiffness (%)" inherits_from_parent="0" content_type="1" value="0" default_value="100" min="0" max="100" tooltip="Stiffness value the motors are set to." id="9" />
                                                                    <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="0.02" default_value="1" min="0.02" max="10" tooltip="How much time to go to the max/min stiffness in seconds." id="10" />
                                                                </Box>
                                                                <Link inputowner="11" indexofinput="2" outputowner="9" indexofoutput="5" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="11" indexofoutput="5" />
                                                                <Link inputowner="8" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                                <Link inputowner="9" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Box name="TactileCodes" id="18" tooltip="Detection de sequence tactile sur la tête de Nao." x="100" y="249">
                                                <bitmap>media/images/box/icons_appu/fingerprint.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import time

class SequenceHandler():
    def __init__(self, aSeq):
        self.aTactilSequence = aSeq
        self.reset()

    def reset(self):
        self.nTapTime = None
        self.nTapIndex = 2

    def update(self, aState, nTime):
        # In any case, if too much time elasped, sequence is invalidated
        if self.nTapTime != None and (nTime - self.nTapTime) > self.aTactilSequence[self.nTapIndex-1]:
            self.reset()
        # If current sensors state match current expected shape
        if aState == self.aTactilSequence[self.nTapIndex]:
            self.nTapTime = nTime
            self.nTapIndex += 2
        # If current sensor state does not match sequence at current index BUT match sequence at first index
        elif aState == self.aTactilSequence[1]:
            self.nTapTime = nTime
            self.nTapIndex = 4
        # If we've reach the end of the sequence, then output !!
        if self.nTapIndex > len(self.aTactilSequence):
            return self.aTactilSequence[0]
        else:
            return None

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.bIsRunning = False
        # Build a list of devices with full name
        self.aDeviceNames = ["%sTactilTouched" % name for name in ["Front", "Middle", "Rear"]]

        # Parameters
        parameters = [   ["CaressFtoR", "Caress front to rear", [1, 0, 0], 0.5, [1, 1, 0], 0.5, [0, 1, 0], 0.5, [0, 1, 1], 0.5, [0, 0, 1]],
                                ["CaressRtoF", "Caress rear to front", [0, 0, 1], 0.5, [0, 1, 1], 0.5, [0, 1, 0], 0.5, [1, 1, 0], 0.5, [1, 0, 0]],
                                ["SingleTap", "Single tap", [1, 1, 1], 1.5, [0, 0, 0]],
                                ["EnumerateFtoR", "Enumerate front to rear", [1, 0, 0], 1.0, [0, 1, 0], 1.0, [0, 0, 1]],
                                ["EnumerateRtoF", "Enumerate rear to front", [0, 0, 1], 1.0, [0, 1, 0], 1.0, [1, 0, 0]],
                                ["ZoomIn", "Zoom in", [1, 0, 1], 1.0, [0, 1, 0]],
                                ["ZoomOut", "Zoom out", [0, 1, 0], 1.0, [1, 0, 1]],
                                ["DoubleFront", "Double front", [1, 0, 0], 1.0, [0, 0, 0], 1.0, [1, 0, 0]],
                                ["DoubleMiddle", "Double middle", [0, 1, 0], 1.0, [0, 0, 0], 1.0, [0, 1, 0]],
                                ["DoubleRear", "Double rear", [0, 0, 1], 1.0, [0, 0, 0], 1.0, [0, 0, 1]],
                                ["DoubleTap", "Double tap", [1, 1, 1], 1.0, [0, 0, 0], 1.0, [1, 1, 1]],
                                ["SecretCode", "Secret code", [1, 0, 1], 1.0, [0, 0, 0], 1.0, [1, 0, 1]],
                                ["CalmDown", "Calm down", [1, 1, 1], 8.0, [0, 0, 0]]    ]
        # Create a sequence handler object for each enable sequence
        self.aSequenceHandler = []
        for seq in parameters:
            if self.getParameter(seq[1]):
                self.aSequenceHandler.append(SequenceHandler(seq))

    def onLoad(self):
        self._memory = ALProxy("ALMemory")
        self.bIsRunning = False
        self.onInput_reset()

    def onUnload(self):
        self.onInput_onStop()

    def onSensorChange(self, pDataName, pValue, pMessage):
        "This is called whenever one of the three tactil sensors state change"
        aState = self._memory.getListData( self.aDeviceNames )
        # This prevent to process several times the same sensor state
        if aState != self.aState:
            self.aState = aState
            nTime = time.time()
            #~ self.log(str(aState))
            for seq in self.aSequenceHandler:
                sOutput = seq.update(aState, nTime)
                if  sOutput != None:
                    self.Match(sOutput)
                    # Force all other sequence to be reset to prevent multiple match.
                    # But this will prevent sequences like "DoubleTap" to work since each "SingleTap" will reset "DoubleTap"
                    self.onInput_reset()
                    # Get the output function from the sequence name
                    try:
                        name = "TactileCodes/%s" % sOutput
                        self._memory.insertData(name, time.time())
                    except Exception as e:
                        self.log(str(e))

                    try:
                        func = getattr(self, sOutput)
                        func()
                    except Exception as e:
                        self.log(str(e))

    def onInput_onStart(self):
        if not self.bIsRunning:
            self.bIsRunning = True
            # Save initial sensor state
            self.aState = None#ALMemory.getListData( self.aDeviceNames )
            # Subscribe to each sensor device
            for device in self.aDeviceNames:
                self._memory.subscribeToEvent( device, self.getName(), "onSensorChange" )

    def onInput_onStop(self):
        if self.bIsRunning:
            for device in self.aDeviceNames:
                self._memory.unsubscribeToEvent( device, self.getName() )
            self.onInput_reset()
            self.bIsRunning = False

    def onInput_reset(self):
        for seq in self.aSequenceHandler:
            seq.reset()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="Match" type="3" type_size="1" nature="2" inner="0" tooltip="double tap" id="4" />
                                                <Output name="SingleTap" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                <Output name="DoubleFront" type="1" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                                                <Output name="DoubleMiddle" type="1" type_size="1" nature="2" inner="0" tooltip="" id="7" />
                                                <Output name="DoubleRear" type="1" type_size="1" nature="2" inner="0" tooltip="" id="8" />
                                                <Output name="EnumerateRtoF" type="1" type_size="1" nature="2" inner="0" tooltip="" id="9" />
                                                <Output name="EnumerateFtoR" type="1" type_size="1" nature="2" inner="0" tooltip="" id="10" />
                                                <Output name="CaressRtoF" type="1" type_size="1" nature="2" inner="0" tooltip="" id="11" />
                                                <Output name="CaressFtoR" type="1" type_size="1" nature="2" inner="0" tooltip="" id="12" />
                                                <Output name="DoubleTap" type="1" type_size="1" nature="2" inner="0" tooltip="" id="13" />
                                                <Output name="CalmDown" type="1" type_size="1" nature="2" inner="0" tooltip="" id="14" />
                                                <Output name="ZoomOut" type="1" type_size="1" nature="2" inner="0" tooltip="" id="15" />
                                                <Output name="ZoomIn" type="1" type_size="1" nature="2" inner="0" tooltip="" id="16" />
                                                <Output name="SecretCode" type="1" type_size="1" nature="2" inner="0" tooltip="" id="17" />
                                                <Parameter name="Caress front to rear" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="Caress front to rear" id="18" />
                                                <Parameter name="Caress rear to front" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="19" />
                                                <Parameter name="Single tap" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="20" />
                                                <Parameter name="Double front" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="21" />
                                                <Parameter name="Double middle" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="22" />
                                                <Parameter name="Double rear" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="23" />
                                                <Parameter name="Calm down" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="24" />
                                                <Parameter name="Enumerate front to rear" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="25" />
                                                <Parameter name="Enumerate rear to front" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="26" />
                                                <Parameter name="Zoom in" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="27" />
                                                <Parameter name="Zoom out" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="28" />
                                                <Parameter name="Double tap" inherits_from_parent="0" content_type="0" value="1" default_value="0" tooltip="" id="29" />
                                                <Parameter name="Secret code" inherits_from_parent="0" content_type="0" value="1" default_value="1" tooltip="" id="30" />
                                            </Box>
                                            <Box name="debugTrigger" id="1" tooltip="Read a data from ALMemory" x="267" y="442">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self._name = self.getParameter("var name")

    def onUnload(self):
        pass

    def onInput_onStart(self):
        try:
            d = ALProxy("ALMemory").getData(self._name)
        except Exception as e:
            self.log(str(e))
            d = False

        ALProxy("ALMemory").raiseMicroEvent(self._name, not d)]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Output name="onStopped" type="1" type_size="1" nature="2" inner="0" tooltip="Value of the read data" id="3" />
                                                <Parameter name="var name" inherits_from_parent="0" content_type="3" value="debugMode" default_value="" custom_choice="0" tooltip="Name of the data to read from memory" id="4" />
                                            </Box>
                                            <Box name="Choreograph Watcher" id="6" tooltip="Enter tooltip here" x="99" y="129">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="ChoregrapheSelector" id="3" tooltip="Enter tooltip here" x="250" y="127">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onChoregraphOn" type="1" type_size="1" nature="2" inner="0" tooltip="" id="2" />
                                                                    <Input name="onChoregraphOff" type="1" type_size="1" nature="2" inner="0" tooltip="" id="3" />
                                                                    <Input name="FrontTactilTouched" type="0" type_size="1" nature="4" stm_value_name="FrontTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                                                                    <Input name="MiddleTactilTouched" type="0" type_size="1" nature="4" stm_value_name="MiddleTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" />
                                                                    <Input name="RearTactilTouched" type="0" type_size="1" nature="4" stm_value_name="RearTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="6" />
                                                                    <Output name="stopLife" type="1" type_size="1" nature="1" inner="0" tooltip="" id="7" />
                                                                    <Output name="keepLife" type="1" type_size="1" nature="1" inner="0" tooltip="" id="8" />
                                                                    <Timeline enable="0">
                                                                        <BehaviorLayer name="behavior_layer1">
                                                                            <BehaviorKeyframe name="keyframe1" index="1">
                                                                                <Diagram>
                                                                                    <Box name="Wait" id="3" tooltip="Wait a moment before sending a signal on the output. The wait can be stopped any&#x0A;time. You may restart it any time, and it will start again." x="716" y="27">
                                                                                        <bitmap>media/images/box/wait.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def triggerOutput( self, rPeriod = 1 ):
        self.onUnload() # to clean everything
        self.timerOutput()

    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] )
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Timeout (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning ):
            self.timerOutput()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                                                                                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is ellapsed, or if the box is stopped." id="4" />
                                                                                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="5" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                                                                                    </Box>
                                                                                    <Box name="Play Sound" id="4" tooltip="Play a sound file. Select the file in parameters. The format of the file can be&#x0A;wav, mp3, or ogg.&#x0A;&#x0A;Note: There can be some delay to play mp3 files. We advise you to use wav if&#x0A;you want a fast play of the file." x="853" y="28">
                                                                                        <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                                        <Parameter name="File name" inherits_from_parent="0" content_type="4" value="/sounds/clickoff.wav" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" />
                                                                                        <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                                                                                        <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                                                                                        <Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                                                                                        <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                                                                                        <Timeline enable="0">
                                                                                            <BehaviorLayer name="behavior_layer1">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1">
                                                                                                    <Diagram>
                                                                                                        <Box name="Play Sound File" id="2" tooltip="Play the sound." x="442" y="70">
                                                                                                            <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                                            <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                                                                                            <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                                                                                            <Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                                                                                            <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                                                                                        </Box>
                                                                                                        <Box name="Get Attached File" id="1" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71">
                                                                                                            <bitmap>media/images/box/folder.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
    def onInput_onStart(self):
        self.onStopped(ALFrameManager.getBehaviorPath(self.behaviorId) + self.getParameter("File name"))]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                                                                            <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                                                                            <Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                        </Timeline>
                                                                                        <Resource name="Audio player" type="Lock" timeout="0" />
                                                                                    </Box>
                                                                                    <Box name="Play Sound" id="5" tooltip="Play a sound file. Select the file in parameters. The format of the file can be&#x0A;wav, mp3, or ogg.&#x0A;&#x0A;Note: There can be some delay to play mp3 files. We advise you to use wav if&#x0A;you want a fast play of the file." x="669" y="441">
                                                                                        <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                                        <Parameter name="File name" inherits_from_parent="0" content_type="4" value="/sounds/popup.wav" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" />
                                                                                        <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                                                                                        <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                                                                                        <Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                                                                                        <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                                                                                        <Timeline enable="0">
                                                                                            <BehaviorLayer name="behavior_layer1">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1">
                                                                                                    <Diagram>
                                                                                                        <Box name="Play Sound File" id="2" tooltip="Play the sound." x="442" y="70">
                                                                                                            <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                                            <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                                                                                            <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                                                                                            <Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                                                                                            <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                                                                                        </Box>
                                                                                                        <Box name="Get Attached File" id="1" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71">
                                                                                                            <bitmap>media/images/box/folder.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
    def onInput_onStart(self):
        self.onStopped(ALFrameManager.getBehaviorPath(self.behaviorId) + self.getParameter("File name"))]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                                                                            <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                                                                            <Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Box name="Filter Value 1" id="6" tooltip="Enter tooltip here" x="450" y="443">
                                                                                        <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_input(self, p):
        #~ self.output() #~ activate output of the box
        if p == 1:
            self.output()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="input" type="2" type_size="1" nature="1" inner="0" tooltip="" id="2" />
                                                                                        <Output name="output" type="1" type_size="1" nature="2" inner="0" tooltip="" id="3" />
                                                                                    </Box>
                                                                                    <Box name="Say Text" id="8" tooltip="Say the text received on its input." x="451" y="29">
                                                                                        <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text" id="9" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="154" y="18">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 可视滑程序被连接，请触摸我的头部来激活闹生命 ",
			"English" : " Choregraph has been connected, touch my head to keep nao\'s life active ",
			"French" : " Je suis connecté à Choregraphe, tape sur ma tête pour conserver la vie autonome active. ",
			"German" : " Hallo ",
			"Italian" : " Ciao ",
			"Japanese" : " コレグラフに接続できたよ。ナオズライフを使う場合は頭を触ってね。 ",
			"Korean" : " 안녕하세요  ",
			"Portuguese" : " Olá ",
			"Brazilian" : "  ",
			"Spanish" : " Hola ",
			"Arabic" : "  ",
			"Polish" : "  ",
			"Czech" : "  ",
			"Dutch" : "  ",
			"Danish" : "  ",
			"Finnish" : "  ",
			"Swedish" : "  ",
			"Russian" : "  ",
			"Turkish" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <chinese>可视滑程序被连接，请触摸我的头部来激活闹生命</chinese>
                                                                                            <english>Choregraph has been connected, touch my head to keep nao&apos;s life active</english>
                                                                                            <french>Je suis connecté à Choregraphe, tape sur ma tête pour conserver la vie autonome active.</french>
                                                                                            <german>Hallo</german>
                                                                                            <italian>Ciao</italian>
                                                                                            <japanese>コレグラフに接続できたよ。ナオズライフを使う場合は頭を触ってね。</japanese>
                                                                                            <korean>안녕하세요 </korean>
                                                                                            <portuguese>Olá</portuguese>
                                                                                            <brazilian></brazilian>
                                                                                            <spanish>Hola</spanish>
                                                                                            <arabic></arabic>
                                                                                            <polish></polish>
                                                                                            <czech></czech>
                                                                                            <dutch></dutch>
                                                                                            <danish></danish>
                                                                                            <finnish></finnish>
                                                                                            <swedish></swedish>
                                                                                            <russian></russian>
                                                                                            <turkish></turkish>
                                                                                            <language>2</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Box name="Localized Text" id="10" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="159" y="145">
                                                                                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 可视滑程序被断开，请触摸我的头部来启动闹生命 ",
			"English" : " Choregraph has been disconnected, touch my head to start nao\'s life ",
			"French" : " Chorégraphe a été déconnecté, tape sur ma tête pour relancer la vie autonome ",
			"German" : " Hallo ",
			"Italian" : " Ciao ",
			"Japanese" : " コレグラフは通信をストップしたよ。ナオズライフに戻る場合は頭を触ってね。 ",
			"Korean" : " 안녕하세요  ",
			"Portuguese" : " Olá ",
			"Brazilian" : "  ",
			"Spanish" : " Hola ",
			"Arabic" : "  ",
			"Polish" : "  ",
			"Czech" : "  ",
			"Dutch" : "  ",
			"Danish" : "  ",
			"Finnish" : "  ",
			"Swedish" : "  ",
			"Russian" : "  ",
			"Turkish" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                                        </script>
                                                                                        <pluginContent>
                                                                                            <chinese>可视滑程序被断开，请触摸我的头部来启动闹生命</chinese>
                                                                                            <english>Choregraph has been disconnected, touch my head to start nao&apos;s life</english>
                                                                                            <french>Chorégraphe a été déconnecté, tape sur ma tête pour relancer la vie autonome</french>
                                                                                            <german>Hallo</german>
                                                                                            <italian>Ciao</italian>
                                                                                            <japanese>コレグラフは通信をストップしたよ。ナオズライフに戻る場合は頭を触ってね。</japanese>
                                                                                            <korean>안녕하세요 </korean>
                                                                                            <portuguese>Olá</portuguese>
                                                                                            <brazilian></brazilian>
                                                                                            <spanish>Hola</spanish>
                                                                                            <arabic></arabic>
                                                                                            <polish></polish>
                                                                                            <czech></czech>
                                                                                            <dutch></dutch>
                                                                                            <danish></danish>
                                                                                            <finnish></finnish>
                                                                                            <swedish></swedish>
                                                                                            <russian></russian>
                                                                                            <turkish></turkish>
                                                                                            <language>2</language>
                                                                                        </pluginContent>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                                    </Box>
                                                                                    <Box name="Play Sound" id="2" tooltip="Play a sound file. Select the file in parameters. The format of the file can be&#x0A;wav, mp3, or ogg.&#x0A;&#x0A;Note: There can be some delay to play mp3 files. We advise you to use wav if&#x0A;you want a fast play of the file." x="577" y="29">
                                                                                        <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                                                        <script language="4">
                                                                                            <content>
                                                                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                                                        </script>
                                                                                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                                                                                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                                                                                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                                                        <Parameter name="File name" inherits_from_parent="0" content_type="4" value="/sounds/clickon.wav" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" />
                                                                                        <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                                                                                        <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                                                                                        <Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                                                                                        <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                                                                                        <Timeline enable="0">
                                                                                            <BehaviorLayer name="behavior_layer1">
                                                                                                <BehaviorKeyframe name="keyframe1" index="1">
                                                                                                    <Diagram>
                                                                                                        <Box name="Play Sound File" id="2" tooltip="Play the sound." x="442" y="70">
                                                                                                            <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                                                            <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                                                                                            <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                                                                                            <Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                                                                                            <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                                                                                        </Box>
                                                                                                        <Box name="Get Attached File" id="1" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71">
                                                                                                            <bitmap>media/images/box/folder.png</bitmap>
                                                                                                            <script language="4">
                                                                                                                <content>
                                                                                                                    <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
    def onInput_onStart(self):
        self.onStopped(ALFrameManager.getBehaviorPath(self.behaviorId) + self.getParameter("File name"))]]>
</content>
                                                                                                            </script>
                                                                                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                                                                                            <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                                                                                            <Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                                                                                        </Box>
                                                                                                        <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                                        <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                                                                        <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                                                    </Diagram>
                                                                                                </BehaviorKeyframe>
                                                                                            </BehaviorLayer>
                                                                                        </Timeline>
                                                                                    </Box>
                                                                                    <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="4" />
                                                                                    <Link inputowner="0" indexofinput="7" outputowner="4" indexofoutput="4" />
                                                                                    <Link inputowner="0" indexofinput="8" outputowner="5" indexofoutput="4" />
                                                                                    <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="4" />
                                                                                    <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="5" />
                                                                                    <Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="6" />
                                                                                    <Link inputowner="8" indexofinput="2" outputowner="9" indexofoutput="3" />
                                                                                    <Link inputowner="8" indexofinput="2" outputowner="10" indexofoutput="3" />
                                                                                    <Link inputowner="9" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                                    <Link inputowner="10" indexofinput="2" outputowner="0" indexofoutput="3" />
                                                                                    <Link inputowner="3" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                                                    <Link inputowner="2" indexofinput="2" outputowner="8" indexofoutput="4" />
                                                                                    <Link inputowner="5" indexofinput="2" outputowner="6" indexofoutput="3" />
                                                                                </Diagram>
                                                                            </BehaviorKeyframe>
                                                                        </BehaviorLayer>
                                                                    </Timeline>
                                                                    <Resource name="Audio" type="Lock" timeout="-1" />
                                                                </Box>
                                                                <Box name="gotoPaused" id="22" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." x="414" y="12">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        pass

    def onInput_onStart(self):
        name = self.getParameter("frame name")
        self.log("%s -> %s" % (self.boxName, name))
        self.gotoAndStopParent(name)

    def onInput_onStop(self):
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame name" inherits_from_parent="0" content_type="3" value="Paused" default_value="" custom_choice="0" tooltip="" id="3" />
                                                                </Box>
                                                                <Box name="DetectChoregraphe" id="23" tooltip="Only allows a few softs to get hand over Nao&apos;s Life" x="99" y="127">
                                                                    <bitmap>media/images/box/box-diagram.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.almemory = ALProxy("ALMemory")
        self._connected = False

    def onUnload(self):
        self.almemory.unsubscribeToMicroEvent("ClientConnected", self.getName())
        self.almemory.unsubscribeToMicroEvent("ClientDisconnected", self.getName())

    def shouldAsk(self, is_connection):
        """
        Return True if the robot should ask to keep Nao's Life alive.

        ask:
            if in IL and it's a connection
            if in idleMode and it's a disconnection
        """

        try:
            in_choregraphe = self.almemory.getData("inFrame/inChoregraphe")
        except Exception as e:
            self.log(str(e))
            in_choregraphe = False

        return in_choregraphe ^ is_connection

    def onClientConnected(self, pDataName, pValue, pMessage):
        if pValue.lower() == "choregraphe" and not self._connected:
            self._connected = True

            if self.shouldAsk(True):
                self.onChoregraphe()

    def onClientDisconnected(self, pDataName, pValue, pMessage):
        if pValue.lower() == "choregraphe" and self._connected:
            self._connected = False

            if self.shouldAsk(False):
                self.onNoChoregraphe()

    def onInput_onStart(self):
        try:
            self.almemory.subscribeToMicroEvent("ClientConnected", self.getName(), "", "onClientConnected")
            self.almemory.subscribeToMicroEvent("ClientDisconnected", self.getName(), "", "onClientDisconnected")
        except Exception as e:
            self.log(str(e))

        # initial try : ask if there is a choregraphe connected
        try:
            choregraphe = ALProxy('ALChoregraphe');
            self._connected = True
            self.onChoregraphe()
        except BaseException, err:
            self._connected = False
            # self.onNoChoregraphe()
        except Exception as e:
            self.log(str(e))

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                                                    <Output name="onChoregraphe" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                                                    <Output name="onNoChoregraphe" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                                </Box>
                                                                <Box name="gotoSolitaryLife" id="4" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." x="421" y="127">
                                                                    <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        pass

    def onInput_onStart(self):
        try:
            inSolitary = ALProxy("ALMemory").getData("inFrame/SolitaryActivity")
        except Exception as e:
            inSolitary = False
            self.log(str(e))

        if not inSolitary:
            name = self.getParameter("frame name")
            self.log("%s -> %s" % (self.boxName, name))
            self.gotoAndStopParent(name)

    def onInput_onStop(self):
        pass]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                                    <Parameter name="frame name" inherits_from_parent="0" content_type="3" value="Init" default_value="" custom_choice="0" tooltip="" id="3" />
                                                                </Box>
                                                                <Link inputowner="22" indexofinput="2" outputowner="3" indexofoutput="7" />
                                                                <Link inputowner="3" indexofinput="2" outputowner="23" indexofoutput="4" />
                                                                <Link inputowner="3" indexofinput="3" outputowner="23" indexofoutput="5" />
                                                                <Link inputowner="4" indexofinput="2" outputowner="3" indexofoutput="8" />
                                                                <Link inputowner="23" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Box name="gotoInit" id="3" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." x="110" y="525">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        pass

    def onInput_onStart(self):
        name = self.getParameter("frame name")
        self.log("%s -> %s" % (self.boxName, name))
        self.gotoAndStopParent(name)

    def onInput_onStop(self):
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                <Parameter name="frame name" inherits_from_parent="0" content_type="3" value="Init" default_value="" custom_choice="0" tooltip="" id="3" />
                                            </Box>
                                            <Box name="gotoPaused" id="22" tooltip="Jump to a given frame (edit parameters to modify it) and stop the timeline parent at this index. Note that all the behavior keyframes will be loaded, and therefore the event logic will still be running." x="113" y="630">
                                                <bitmap>media/images/box/box-timeLine.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onUnload(self):
        pass

    def onInput_onStart(self):
        name = self.getParameter("frame name")
        self.log("%s -> %s" % (self.boxName, name))
        self.gotoAndStopParent(name)

    def onInput_onStop(self):
        pass]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Parent timeline gotoAndStop when a signal is received on this input." id="2" />
                                                <Parameter name="frame name" inherits_from_parent="0" content_type="3" value="Paused" default_value="" custom_choice="0" tooltip="" id="3" />
                                            </Box>
                                            <Link inputowner="1" indexofinput="2" outputowner="18" indexofoutput="17" />
                                            <Link inputowner="18" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="6" />
                                            <Link inputowner="22" indexofinput="2" outputowner="0" indexofoutput="7" />
                                            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="Empty" index="79">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                                <BehaviorLayer name="System">
                                    <BehaviorKeyframe name="Maintenence" index="61">
                                        <Diagram>
                                            <Box name="Timer" id="16" tooltip="Send a signal with a predefined period." x="65" y="14">
                                                <bitmap>media/images/box/wait.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def startTimer(self, period = 1):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer(period, self.startTimer, [period])
        self.tb.start()
        self.timerOutput()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Period (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning ):
            self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the timer using the configured period value." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the timer." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="4" />
                                                <Output name="timerOutput" type="1" type_size="1" nature="2" inner="0" tooltip="Send a bang periodically." id="5" />
                                                <Parameter name="Period (s)" inherits_from_parent="0" content_type="2" value="180" default_value="1" min="0" max="5000" tooltip="Defines the period of the timer box (in seconds).&#x0A;&#x0A;For example, if this parameter is equal to 1s, the timerOutput will be stimulated&#x0A;every second until the onStop input is stimulated." id="6" />
                                            </Box>
                                            <Box name="ChannelsUpdate" id="17" tooltip="Enter tooltip here" x="196" y="12">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #~ puts code for box initialization here
        self.alstore = ALProxy("ALStore")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_tick(self):
        #~ self.updated() #~ activate output of the box
        if "updateChannels" in self.alstore.getMethodList():
            self.alstore.updateChannels()
        elif "channelsUpdate" in self.alstore.getMethodList():
            self.alstore.channelsUpdate()
        else:
            self.log("Channels Update: Can't find the method in alstore")

        self.updated()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="tick" type="1" type_size="1" nature="1" inner="0" tooltip="" id="2" />
                                                <Output name="updated" type="1" type_size="1" nature="2" inner="0" tooltip="" id="3" />
                                            </Box>
                                            <Box name="LanguageUpdate" id="3" tooltip="Update NAO&apos;s Life Language if language was changed elsewhere" x="197" y="110">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.mynao = ALProxy("ALMyNao")
        self.tts = ALProxy("ALTextToSpeech")
        self.memory = ALProxy("ALMemory")

    # check if a language was changed during an interactive activity
    # a workaround to the poor design of language handling
    def onInput_updateLanguage(self):
        current_lang = self.tts.getLanguage()

        try:
            mynao_lang = self.memory.getData("/nao-life/language")
        except:
            mynao_lang = None

        if mynao_lang is None or mynao_lang != current_lang:
            self.mynao.mynaoSet("/nao-life/language", current_lang)]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="updateLanguage" type="1" type_size="1" nature="1" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            </Box>
                                            <Box name="Timer" id="1" tooltip="Send a signal with a predefined period." x="68" y="110">
                                                <bitmap>media/images/box/wait.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def startTimer(self, period = 1):
        if( self.tb ):
            self.tb.cancel()
        self.timerOutput()
        self.tb = threading.Timer(period, self.startTimer, [period])
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Period (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning ):
            self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the timer using the configured period value." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the timer." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="4" />
                                                <Output name="timerOutput" type="1" type_size="1" nature="2" inner="0" tooltip="Send a bang periodically." id="5" />
                                                <Parameter name="Period (s)" inherits_from_parent="0" content_type="2" value="5" default_value="1" min="0" max="5000" tooltip="Defines the period of the timer box (in seconds).&#x0A;&#x0A;For example, if this parameter is equal to 1s, the timerOutput will be stimulated&#x0A;every second until the onStop input is stimulated." id="6" />
                                            </Box>
                                            <Link inputowner="17" indexofinput="2" outputowner="16" indexofoutput="5" />
                                            <Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="1" />
                                            <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="5" />
                                            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                    <BehaviorKeyframe name="Empty" index="79">
                                        <Diagram />
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Box name="Diagnosis" id="13" tooltip="Diagnosis and check version for nao" x="99" y="73">
                            <bitmap>media/images/box/box-diagram.png</bitmap>
                            <script language="4">
                                <content>
                                    <![CDATA[]]>
</content>
                            </script>
                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                            <Output name="CantRun" type="1" type_size="1" nature="1" inner="0" tooltip="" id="3" />
                            <Output name="canRun" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                            <Timeline enable="0">
                                <BehaviorLayer name="behavior_layer1">
                                    <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                            <Box name="Say" id="8" tooltip="Say some text. Note that you must open the box to enter the text." x="271" y="151">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="Say Text" id="2" tooltip="Say the text received on its input." x="422" y="65">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                </Box>
                                                                <Box name="Localized Text" id="5" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="96" y="142">
                                                                    <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 无法诊断，尝试启动闹生命 ",
			"English" : " Unknown diagnosis, trying to start Nao\'s Life ",
			"French" : " Diagnostique inconnu, je tente d\'exécuter Nao\'s Life ",
			"German" : " Diagnose Status unbekannt, versuche jetzt NAOs Life auszuführen. ",
			"Italian" : " Ciao ",
			"Japanese" : " ナオズライフをスタートする前に少し確認する事があるよ。 ",
			"Korean" : " 안녕하세요  ",
			"Portuguese" : " Olá ",
			"Brazilian" : "  ",
			"Spanish" : " Hola ",
			"Arabic" : "  ",
			"Polish" : "  ",
			"Czech" : "  ",
			"Dutch" : "  ",
			"Danish" : "  ",
			"Finnish" : " En ymmärrä mikä on vialla, mutta yritän käynnistää Naoslaif-ohjelmani uudelleen. ",
			"Swedish" : "  ",
			"Russian" : "  ",
			"Turkish" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <chinese>无法诊断，尝试启动闹生命</chinese>
                                                                        <english>Unknown diagnosis, trying to start Nao&apos;s Life</english>
                                                                        <french>Diagnostique inconnu, je tente d&apos;exécuter Nao&apos;s Life</french>
                                                                        <german>Diagnose Status unbekannt, versuche jetzt NAOs Life auszuführen.</german>
                                                                        <italian>Ciao</italian>
                                                                        <japanese>ナオズライフをスタートする前に少し確認する事があるよ。</japanese>
                                                                        <korean>안녕하세요 </korean>
                                                                        <portuguese>Olá</portuguese>
                                                                        <brazilian></brazilian>
                                                                        <spanish>Hola</spanish>
                                                                        <arabic></arabic>
                                                                        <polish></polish>
                                                                        <czech></czech>
                                                                        <dutch></dutch>
                                                                        <danish></danish>
                                                                        <finnish>En ymmärrä mikä on vialla, mutta yritän käynnistää Naoslaif-ohjelmani uudelleen.</finnish>
                                                                        <swedish></swedish>
                                                                        <russian></russian>
                                                                        <turkish></turkish>
                                                                        <language>15</language>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                </Box>
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Box name="Say" id="9" tooltip="Say some text. Note that you must open the box to enter the text." x="272" y="248">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="Say Text" id="2" tooltip="Say the text received on its input." x="422" y="65">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                </Box>
                                                                <Box name="Localized Text" id="5" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                    <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 诊断完成，尝试启动闹生命 ",
			"English" : " Diagnosis K O, I\'m trying to start Nao\'s Life ",
			"French" : " Le diagnostique a echoué, je vais tenter d\'exécuter Nao\'s Life ",
			"German" : " Diagnose Status KO, versuche jetzt Naos Life auszuführen. ",
			"Italian" : " Ciao ",
			"Japanese" : " ナオズライフをスタートするけど、失敗しちゃうかも。 ",
			"Korean" : " 안녕하세요  ",
			"Portuguese" : " Olá ",
			"Brazilian" : "  ",
			"Spanish" : " Hola ",
			"Arabic" : "  ",
			"Polish" : "  ",
			"Czech" : "  ",
			"Dutch" : "  ",
			"Danish" : "  ",
			"Finnish" : " Virhe havaittu. Yritän käynnistää naoslaif-ohjelman uudelleen. ",
			"Swedish" : "  ",
			"Russian" : "  ",
			"Turkish" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <chinese>诊断完成，尝试启动闹生命</chinese>
                                                                        <english>Diagnosis K O, I&apos;m trying to start Nao&apos;s Life</english>
                                                                        <french>Le diagnostique a echoué, je vais tenter d&apos;exécuter Nao&apos;s Life</french>
                                                                        <german>Diagnose Status KO, versuche jetzt Naos Life auszuführen.</german>
                                                                        <italian>Ciao</italian>
                                                                        <japanese>ナオズライフをスタートするけど、失敗しちゃうかも。</japanese>
                                                                        <korean>안녕하세요 </korean>
                                                                        <portuguese>Olá</portuguese>
                                                                        <brazilian></brazilian>
                                                                        <spanish>Hola</spanish>
                                                                        <arabic></arabic>
                                                                        <polish></polish>
                                                                        <czech></czech>
                                                                        <dutch></dutch>
                                                                        <danish></danish>
                                                                        <finnish>Virhe havaittu. Yritän käynnistää naoslaif-ohjelman uudelleen.</finnish>
                                                                        <swedish></swedish>
                                                                        <russian></russian>
                                                                        <turkish></turkish>
                                                                        <language>15</language>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                </Box>
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Box name="Say" id="10" tooltip="Say some text. Note that you must open the box to enter the text." x="268" y="12">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="Say Text" id="2" tooltip="Say the text received on its input." x="422" y="65">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                </Box>
                                                                <Box name="Localized Text" id="5" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                    <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 无法运行闹生命，我需要1点1 2版本的闹气 ",
			"English" : " I can\'t run Nao\'s Life, I need to use naoqi version 1.12 ",
			"French" : " Je ne peut pas exécuter Nao\'s Life sans naoqi version 1 point 12 ",
			"German" : " Ich kann NAOs Life nicht ausführen. Ich benötige NAO QI version 1.12 ",
			"Italian" : " I can\'t run Nao\'s Life, I need to use naoqi version 1.12 ",
			"Japanese" : " ナオズライフを起動できないよ。ナオキーバージョン1.12が必要だよ。 ",
			"Korean" : " 안녕하세요  ",
			"Portuguese" : " I can\'t run Nao\'s Life, I need to use naoqi version 1.12 ",
			"Brazilian" : "  ",
			"Spanish" : " I can\'t run Nao\'s Life, I need to use naoqi version 1.12 ",
			"Arabic" : "  ",
			"Polish" : "  ",
			"Czech" : "  ",
			"Dutch" : "  ",
			"Danish" : "  ",
			"Finnish" : " Naoslaif-ohjelmaa ei voida ajaa, tarvitaan naoqi-versio 1.12 ",
			"Swedish" : "  ",
			"Russian" : "  ",
			"Turkish" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <chinese>无法运行闹生命，我需要1点1 2版本的闹气</chinese>
                                                                        <english>I can&apos;t run Nao&apos;s Life, I need to use naoqi version 1.12</english>
                                                                        <french>Je ne peut pas exécuter Nao&apos;s Life sans naoqi version 1 point 12</french>
                                                                        <german>Ich kann NAOs Life nicht ausführen. Ich benötige NAO QI version 1.12</german>
                                                                        <italian>I can&apos;t run Nao&apos;s Life, I need to use naoqi version 1.12</italian>
                                                                        <japanese>ナオズライフを起動できないよ。ナオキーバージョン1.12が必要だよ。</japanese>
                                                                        <korean>안녕하세요 </korean>
                                                                        <portuguese>I can&apos;t run Nao&apos;s Life, I need to use naoqi version 1.12</portuguese>
                                                                        <brazilian></brazilian>
                                                                        <spanish>I can&apos;t run Nao&apos;s Life, I need to use naoqi version 1.12</spanish>
                                                                        <arabic></arabic>
                                                                        <polish></polish>
                                                                        <czech></czech>
                                                                        <dutch></dutch>
                                                                        <danish></danish>
                                                                        <finnish>Naoslaif-ohjelmaa ei voida ajaa, tarvitaan naoqi-versio 1.12</finnish>
                                                                        <swedish></swedish>
                                                                        <russian></russian>
                                                                        <turkish></turkish>
                                                                        <language>15</language>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                </Box>
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Box name="Say" id="1" tooltip="Say some text. Note that you must open the box to enter the text." x="271" y="360">
                                                <bitmap>media/images/box/interaction/say.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                                <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                                                <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                                                <Timeline enable="0">
                                                    <BehaviorLayer name="behavior_layer1">
                                                        <BehaviorKeyframe name="keyframe1" index="1">
                                                            <Diagram>
                                                                <Box name="Say Text" id="2" tooltip="Say the text received on its input." x="422" y="65">
                                                                    <bitmap>media/images/box/interaction/say.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
</content>
                                                                    </script>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                                                    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                                                    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                                                    <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                                                    <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                                                </Box>
                                                                <Box name="Localized Text" id="5" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                                                    <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                                                    <script language="4">
                                                                        <content>
                                                                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.tts = ALProxy("ALTextToSpeech")
		self.sentences = {
			"Chinese" : " 无法诊断，你需要重新启动闹气，来完成诊断 ",
			"English" : " I didn\'t found a diagnosis, I\'m starting Nao\'s Life but you should restart naoqi ",
			"French" : " Je n\'ai pas trouvé de diagnosis, je lance la vie autonome mais vous devriez relancer naoki. ",
			"German" : " Diagnose Status nicht gefunden. Ich starte jetzt NAOs Life aber du solltest lieber NAO QI neu starten. ",
			"Italian" : " Ciao ",
			"Japanese" : " ナオズライフをスタートするよ。ナオキーを再開してね。 ",
			"Korean" : " 안녕하세요  ",
			"Portuguese" : " Olá ",
			"Brazilian" : "  ",
			"Spanish" : " Hola ",
			"Arabic" : "  ",
			"Polish" : "  ",
			"Czech" : "  ",
			"Dutch" : "  ",
			"Danish" : "  ",
			"Finnish" : " En löytänyt diagnoosia. Käynnistän naoslaiffin, mutta naoqi pitäisi käynnistää uudestaan. ",
			"Swedish" : "  ",
			"Russian" : "  ",
			"Turkish" : "  "
		}

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
</content>
                                                                    </script>
                                                                    <pluginContent>
                                                                        <chinese>无法诊断，你需要重新启动闹气，来完成诊断</chinese>
                                                                        <english>I didn&apos;t found a diagnosis, I&apos;m starting Nao&apos;s Life but you should restart naoqi</english>
                                                                        <french>Je n&apos;ai pas trouvé de diagnosis, je lance la vie autonome mais vous devriez relancer naoki.</french>
                                                                        <german>Diagnose Status nicht gefunden. Ich starte jetzt NAOs Life aber du solltest lieber NAO QI neu starten.</german>
                                                                        <italian>Ciao</italian>
                                                                        <japanese>ナオズライフをスタートするよ。ナオキーを再開してね。</japanese>
                                                                        <korean>안녕하세요 </korean>
                                                                        <portuguese>Olá</portuguese>
                                                                        <brazilian></brazilian>
                                                                        <spanish>Hola</spanish>
                                                                        <arabic></arabic>
                                                                        <polish></polish>
                                                                        <czech></czech>
                                                                        <dutch></dutch>
                                                                        <danish></danish>
                                                                        <finnish>En löytänyt diagnoosia. Käynnistän naoslaiffin, mutta naoqi pitäisi käynnistää uudestaan.</finnish>
                                                                        <swedish></swedish>
                                                                        <russian></russian>
                                                                        <turkish></turkish>
                                                                        <language>15</language>
                                                                    </pluginContent>
                                                                    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                                    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                                                    <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                                                </Box>
                                                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                                <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                                                            </Diagram>
                                                        </BehaviorKeyframe>
                                                    </BehaviorLayer>
                                                </Timeline>
                                            </Box>
                                            <Box name="Diagnose" id="2" tooltip="Enter tooltip here" x="116" y="83">
                                                <bitmap>media/images/box/box-diagram.png</bitmap>
                                                <script language="4">
                                                    <content>
                                                        <![CDATA[import os, datetime

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onUnload(self):
        pass

    def versionGet(self):
        p = "/usr/share/opennao/packages.list"
        version = None

        with open(p, "r") as f:
            n = "full version number: "
            version = f.readline().strip()[len(n):].split(" ")[0] # Version retrival Perl like...

        return version

    def idGet(self):
        try:
            id = ALProxy("ALMemory").getData("Device/DeviceList/ChestBoard/BodyId")
            id = id.strip()
        except:
            id = None

        return id

    def onInput_start(self):
        folder = "/media/internal"

        version = self.versionGet()

        ALProxy("ALMemory").insertData("Life/naoqi/version", version)

        #self.log(str(version))

        if version < "1.12.1":
            self.onBadVersion()

        id = self.idGet()

        if version is None or id is None:
            self.onUnknow()
        else:

            # for 1.z.y
            version_maj = ".".join(version.split(".")[:3]) # still Perl like...
            diag_file_3_field = "diagnostic_%s_%s" % (version_maj, id)
            # for 1.z.y.x
            diag_file_4_field = "diagnostic_%s_%s" % (version, id)

            #Retrieve diagnosis and pick the one matching our data
            found = [ x for x in os.listdir(folder) if x.startswith(diag_file_3_field) or x.startswith(diag_file_4_field) ]
            found.sort() #sort by dates without conversion

            if len(found) == 0:
                self.onNoDiagnosis()
                return

            result = found[0][-6:-4].lower() #Get the most recent

            #Check if the last one were KO or not
            if result == "ko":
                self.onKO()
            elif result == "ok":
                self.onOK()
            else:
                self.onUnknow()]]>
</content>
                                                </script>
                                                <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                <Input name="start" type="1" type_size="1" nature="1" inner="0" tooltip="" id="2" />
                                                <Output name="onBadVersion" type="1" type_size="1" nature="2" inner="0" tooltip="" id="3" />
                                                <Output name="onOK" type="1" type_size="1" nature="2" inner="0" tooltip="" id="4" />
                                                <Output name="onUnknow" type="1" type_size="1" nature="2" inner="0" tooltip="" id="5" />
                                                <Output name="onKO" type="1" type_size="1" nature="2" inner="0" tooltip="" id="6" />
                                                <Output name="onNoDiagnosis" type="1" type_size="1" nature="2" inner="0" tooltip="" id="7" />
                                            </Box>
                                            <Link inputowner="0" indexofinput="4" outputowner="8" indexofoutput="4" />
                                            <Link inputowner="0" indexofinput="4" outputowner="9" indexofoutput="4" />
                                            <Link inputowner="0" indexofinput="3" outputowner="10" indexofoutput="4" />
                                            <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
                                            <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                            <Link inputowner="1" indexofinput="2" outputowner="2" indexofoutput="7" />
                                            <Link inputowner="9" indexofinput="2" outputowner="2" indexofoutput="6" />
                                            <Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="5" />
                                            <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                            <Link inputowner="10" indexofinput="2" outputowner="2" indexofoutput="3" />
                                        </Diagram>
                                    </BehaviorKeyframe>
                                </BehaviorLayer>
                            </Timeline>
                        </Box>
                        <Link inputowner="13" indexofinput="2" outputowner="0" indexofoutput="2" />
                        <Link inputowner="0" indexofinput="4" outputowner="13" indexofoutput="3" />
                        <Link inputowner="2" indexofinput="2" outputowner="13" indexofoutput="4" />
                        <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="8" />
                    </Diagram>
                </BehaviorKeyframe>
            </BehaviorLayer>
        </Timeline>
    </Box>
</ChoregrapheProject>
